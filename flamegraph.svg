<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1288"><g><title>[vkcf]_Analysis (1 samples, 0.08%)</title><rect x="0.0000%" y="917" width="0.0776%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="0.0000%" y="901" width="0.0776%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>[[stack]] (1 samples, 0.08%)</title><rect x="0.0776%" y="901" width="0.0776%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3276%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="0.0776%" y="885" width="0.0776%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.3276%" y="895.50"></text></g><g><title>[anon] (1 samples, 0.08%)</title><rect x="0.1553%" y="901" width="0.0776%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.4053%" y="911.50"></text></g><g><title>_pthread_cleanup_pop (1 samples, 0.08%)</title><rect x="0.1553%" y="885" width="0.0776%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.4053%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="0.3882%" y="821" width="0.0776%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="0.6382%" y="831.50"></text></g><g><title>gettimeofday@plt (1 samples, 0.08%)</title><rect x="0.4658%" y="821" width="0.0776%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="1"/><text x="0.7158%" y="831.50"></text></g><g><title>[vkrt]_Analysis (38 samples, 2.95%)</title><rect x="0.0776%" y="917" width="2.9503%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="38"/><text x="0.3276%" y="927.50">[vk..</text></g><g><title>[libc.so.6] (36 samples, 2.80%)</title><rect x="0.2329%" y="901" width="2.7950%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="36"/><text x="0.4829%" y="911.50">[l..</text></g><g><title>[libc.so.6] (35 samples, 2.72%)</title><rect x="0.3106%" y="885" width="2.7174%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="35"/><text x="0.5606%" y="895.50">[l..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (35 samples, 2.72%)</title><rect x="0.3106%" y="869" width="2.7174%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="35"/><text x="0.5606%" y="879.50">[l..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (35 samples, 2.72%)</title><rect x="0.3106%" y="853" width="2.7174%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="35"/><text x="0.5606%" y="863.50">[l..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (34 samples, 2.64%)</title><rect x="0.3882%" y="837" width="2.6398%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="34"/><text x="0.6382%" y="847.50">[l..</text></g><g><title>pthread_cond_timedwait (32 samples, 2.48%)</title><rect x="0.5435%" y="821" width="2.4845%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="32"/><text x="0.7935%" y="831.50">pt..</text></g><g><title>[libc.so.6] (32 samples, 2.48%)</title><rect x="0.5435%" y="805" width="2.4845%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="32"/><text x="0.7935%" y="815.50">[l..</text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="2.9503%" y="789" width="0.0776%" height="15" fill="rgb(225,20,46)" fg:x="38" fg:w="1"/><text x="3.2003%" y="799.50"></text></g><g><title>async_io::reactor::Reactor::get (5 samples, 0.39%)</title><rect x="3.0280%" y="661" width="0.3882%" height="15" fill="rgb(210,31,41)" fg:x="39" fg:w="5"/><text x="3.2780%" y="671.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (5 samples, 0.39%)</title><rect x="3.0280%" y="645" width="0.3882%" height="15" fill="rgb(221,200,47)" fg:x="39" fg:w="5"/><text x="3.2780%" y="655.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (5 samples, 0.39%)</title><rect x="3.0280%" y="629" width="0.3882%" height="15" fill="rgb(226,26,5)" fg:x="39" fg:w="5"/><text x="3.2780%" y="639.50"></text></g><g><title>async_lock::once_cell::now_or_never (5 samples, 0.39%)</title><rect x="3.0280%" y="613" width="0.3882%" height="15" fill="rgb(249,33,26)" fg:x="39" fg:w="5"/><text x="3.2780%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.39%)</title><rect x="3.0280%" y="597" width="0.3882%" height="15" fill="rgb(235,183,28)" fg:x="39" fg:w="5"/><text x="3.2780%" y="607.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::{{closure}} (5 samples, 0.39%)</title><rect x="3.0280%" y="581" width="0.3882%" height="15" fill="rgb(221,5,38)" fg:x="39" fg:w="5"/><text x="3.2780%" y="591.50"></text></g><g><title>&lt;async_lock::once_cell::Blocking as async_lock::once_cell::Strategy&gt;::poll (5 samples, 0.39%)</title><rect x="3.0280%" y="565" width="0.3882%" height="15" fill="rgb(247,18,42)" fg:x="39" fg:w="5"/><text x="3.2780%" y="575.50"></text></g><g><title>event_listener::EventListener::wait_internal (5 samples, 0.39%)</title><rect x="3.0280%" y="549" width="0.3882%" height="15" fill="rgb(241,131,45)" fg:x="39" fg:w="5"/><text x="3.2780%" y="559.50"></text></g><g><title>std::thread::park (5 samples, 0.39%)</title><rect x="3.0280%" y="533" width="0.3882%" height="15" fill="rgb(249,31,29)" fg:x="39" fg:w="5"/><text x="3.2780%" y="543.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (5 samples, 0.39%)</title><rect x="3.0280%" y="517" width="0.3882%" height="15" fill="rgb(225,111,53)" fg:x="39" fg:w="5"/><text x="3.2780%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (5 samples, 0.39%)</title><rect x="3.0280%" y="501" width="0.3882%" height="15" fill="rgb(238,160,17)" fg:x="39" fg:w="5"/><text x="3.2780%" y="511.50"></text></g><g><title>syscall (5 samples, 0.39%)</title><rect x="3.0280%" y="485" width="0.3882%" height="15" fill="rgb(214,148,48)" fg:x="39" fg:w="5"/><text x="3.2780%" y="495.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.08%)</title><rect x="3.4161%" y="565" width="0.0776%" height="15" fill="rgb(232,36,49)" fg:x="44" fg:w="1"/><text x="3.6661%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.08%)</title><rect x="3.4161%" y="549" width="0.0776%" height="15" fill="rgb(209,103,24)" fg:x="44" fg:w="1"/><text x="3.6661%" y="559.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="3.4161%" y="533" width="0.0776%" height="15" fill="rgb(229,88,8)" fg:x="44" fg:w="1"/><text x="3.6661%" y="543.50"></text></g><g><title>__errno_location (1 samples, 0.08%)</title><rect x="3.4161%" y="517" width="0.0776%" height="15" fill="rgb(213,181,19)" fg:x="44" fg:w="1"/><text x="3.6661%" y="527.50"></text></g><g><title>async-io (10 samples, 0.78%)</title><rect x="3.0280%" y="917" width="0.7764%" height="15" fill="rgb(254,191,54)" fg:x="39" fg:w="10"/><text x="3.2780%" y="927.50"></text></g><g><title>[libc.so.6] (10 samples, 0.78%)</title><rect x="3.0280%" y="901" width="0.7764%" height="15" fill="rgb(241,83,37)" fg:x="39" fg:w="10"/><text x="3.2780%" y="911.50"></text></g><g><title>[libc.so.6] (10 samples, 0.78%)</title><rect x="3.0280%" y="885" width="0.7764%" height="15" fill="rgb(233,36,39)" fg:x="39" fg:w="10"/><text x="3.2780%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.78%)</title><rect x="3.0280%" y="869" width="0.7764%" height="15" fill="rgb(226,3,54)" fg:x="39" fg:w="10"/><text x="3.2780%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.78%)</title><rect x="3.0280%" y="853" width="0.7764%" height="15" fill="rgb(245,192,40)" fg:x="39" fg:w="10"/><text x="3.2780%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.78%)</title><rect x="3.0280%" y="837" width="0.7764%" height="15" fill="rgb(238,167,29)" fg:x="39" fg:w="10"/><text x="3.2780%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.78%)</title><rect x="3.0280%" y="821" width="0.7764%" height="15" fill="rgb(232,182,51)" fg:x="39" fg:w="10"/><text x="3.2780%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10 samples, 0.78%)</title><rect x="3.0280%" y="805" width="0.7764%" height="15" fill="rgb(231,60,39)" fg:x="39" fg:w="10"/><text x="3.2780%" y="815.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.78%)</title><rect x="3.0280%" y="789" width="0.7764%" height="15" fill="rgb(208,69,12)" fg:x="39" fg:w="10"/><text x="3.2780%" y="799.50"></text></g><g><title>std::panicking::try (10 samples, 0.78%)</title><rect x="3.0280%" y="773" width="0.7764%" height="15" fill="rgb(235,93,37)" fg:x="39" fg:w="10"/><text x="3.2780%" y="783.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.78%)</title><rect x="3.0280%" y="757" width="0.7764%" height="15" fill="rgb(213,116,39)" fg:x="39" fg:w="10"/><text x="3.2780%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.78%)</title><rect x="3.0280%" y="741" width="0.7764%" height="15" fill="rgb(222,207,29)" fg:x="39" fg:w="10"/><text x="3.2780%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10 samples, 0.78%)</title><rect x="3.0280%" y="725" width="0.7764%" height="15" fill="rgb(206,96,30)" fg:x="39" fg:w="10"/><text x="3.2780%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.78%)</title><rect x="3.0280%" y="709" width="0.7764%" height="15" fill="rgb(218,138,4)" fg:x="39" fg:w="10"/><text x="3.2780%" y="719.50"></text></g><g><title>async_io::driver::unparker::{{closure}}::{{closure}} (10 samples, 0.78%)</title><rect x="3.0280%" y="693" width="0.7764%" height="15" fill="rgb(250,191,14)" fg:x="39" fg:w="10"/><text x="3.2780%" y="703.50"></text></g><g><title>async_io::driver::main_loop (10 samples, 0.78%)</title><rect x="3.0280%" y="677" width="0.7764%" height="15" fill="rgb(239,60,40)" fg:x="39" fg:w="10"/><text x="3.2780%" y="687.50"></text></g><g><title>parking::Inner::park (5 samples, 0.39%)</title><rect x="3.4161%" y="661" width="0.3882%" height="15" fill="rgb(206,27,48)" fg:x="44" fg:w="5"/><text x="3.6661%" y="671.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (5 samples, 0.39%)</title><rect x="3.4161%" y="645" width="0.3882%" height="15" fill="rgb(225,35,8)" fg:x="44" fg:w="5"/><text x="3.6661%" y="655.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (5 samples, 0.39%)</title><rect x="3.4161%" y="629" width="0.3882%" height="15" fill="rgb(250,213,24)" fg:x="44" fg:w="5"/><text x="3.6661%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (5 samples, 0.39%)</title><rect x="3.4161%" y="613" width="0.3882%" height="15" fill="rgb(247,123,22)" fg:x="44" fg:w="5"/><text x="3.6661%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (5 samples, 0.39%)</title><rect x="3.4161%" y="597" width="0.3882%" height="15" fill="rgb(231,138,38)" fg:x="44" fg:w="5"/><text x="3.6661%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (5 samples, 0.39%)</title><rect x="3.4161%" y="581" width="0.3882%" height="15" fill="rgb(231,145,46)" fg:x="44" fg:w="5"/><text x="3.6661%" y="591.50"></text></g><g><title>syscall (4 samples, 0.31%)</title><rect x="3.4938%" y="565" width="0.3106%" height="15" fill="rgb(251,118,11)" fg:x="45" fg:w="4"/><text x="3.7438%" y="575.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="3.9596%" y="501" width="0.0776%" height="15" fill="rgb(217,147,25)" fg:x="51" fg:w="1"/><text x="4.2096%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="3.9596%" y="485" width="0.0776%" height="15" fill="rgb(247,81,37)" fg:x="51" fg:w="1"/><text x="4.2096%" y="495.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.08%)</title><rect x="3.9596%" y="469" width="0.0776%" height="15" fill="rgb(209,12,38)" fg:x="51" fg:w="1"/><text x="4.2096%" y="479.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="3.9596%" y="453" width="0.0776%" height="15" fill="rgb(227,1,9)" fg:x="51" fg:w="1"/><text x="4.2096%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="3.9596%" y="437" width="0.0776%" height="15" fill="rgb(248,47,43)" fg:x="51" fg:w="1"/><text x="4.2096%" y="447.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="3.9596%" y="421" width="0.0776%" height="15" fill="rgb(221,10,30)" fg:x="51" fg:w="1"/><text x="4.2096%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="3.9596%" y="405" width="0.0776%" height="15" fill="rgb(210,229,1)" fg:x="51" fg:w="1"/><text x="4.2096%" y="415.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1 samples, 0.08%)</title><rect x="3.9596%" y="389" width="0.0776%" height="15" fill="rgb(222,148,37)" fg:x="51" fg:w="1"/><text x="4.2096%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="3.9596%" y="373" width="0.0776%" height="15" fill="rgb(234,67,33)" fg:x="51" fg:w="1"/><text x="4.2096%" y="383.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.08%)</title><rect x="3.9596%" y="357" width="0.0776%" height="15" fill="rgb(247,98,35)" fg:x="51" fg:w="1"/><text x="4.2096%" y="367.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="3.9596%" y="341" width="0.0776%" height="15" fill="rgb(247,138,52)" fg:x="51" fg:w="1"/><text x="4.2096%" y="351.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="3.9596%" y="325" width="0.0776%" height="15" fill="rgb(213,79,30)" fg:x="51" fg:w="1"/><text x="4.2096%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="3.9596%" y="309" width="0.0776%" height="15" fill="rgb(246,177,23)" fg:x="51" fg:w="1"/><text x="4.2096%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="3.9596%" y="293" width="0.0776%" height="15" fill="rgb(230,62,27)" fg:x="51" fg:w="1"/><text x="4.2096%" y="303.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.9596%" y="277" width="0.0776%" height="15" fill="rgb(216,154,8)" fg:x="51" fg:w="1"/><text x="4.2096%" y="287.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (1 samples, 0.08%)</title><rect x="3.9596%" y="261" width="0.0776%" height="15" fill="rgb(244,35,45)" fg:x="51" fg:w="1"/><text x="4.2096%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.08%)</title><rect x="3.9596%" y="245" width="0.0776%" height="15" fill="rgb(251,115,12)" fg:x="51" fg:w="1"/><text x="4.2096%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.08%)</title><rect x="3.9596%" y="229" width="0.0776%" height="15" fill="rgb(240,54,50)" fg:x="51" fg:w="1"/><text x="4.2096%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.08%)</title><rect x="3.9596%" y="213" width="0.0776%" height="15" fill="rgb(233,84,52)" fg:x="51" fg:w="1"/><text x="4.2096%" y="223.50"></text></g><g><title>&lt;async_lock::once_cell::Blocking as async_lock::once_cell::Strategy&gt;::poll (10 samples, 0.78%)</title><rect x="4.0373%" y="421" width="0.7764%" height="15" fill="rgb(207,117,47)" fg:x="52" fg:w="10"/><text x="4.2873%" y="431.50"></text></g><g><title>event_listener::EventListener::wait_internal (10 samples, 0.78%)</title><rect x="4.0373%" y="405" width="0.7764%" height="15" fill="rgb(249,43,39)" fg:x="52" fg:w="10"/><text x="4.2873%" y="415.50"></text></g><g><title>std::thread::park (10 samples, 0.78%)</title><rect x="4.0373%" y="389" width="0.7764%" height="15" fill="rgb(209,38,44)" fg:x="52" fg:w="10"/><text x="4.2873%" y="399.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (10 samples, 0.78%)</title><rect x="4.0373%" y="373" width="0.7764%" height="15" fill="rgb(236,212,23)" fg:x="52" fg:w="10"/><text x="4.2873%" y="383.50"></text></g><g><title>std::sys::unix::futex::futex_wait (10 samples, 0.78%)</title><rect x="4.0373%" y="357" width="0.7764%" height="15" fill="rgb(242,79,21)" fg:x="52" fg:w="10"/><text x="4.2873%" y="367.50"></text></g><g><title>syscall (10 samples, 0.78%)</title><rect x="4.0373%" y="341" width="0.7764%" height="15" fill="rgb(211,96,35)" fg:x="52" fg:w="10"/><text x="4.2873%" y="351.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.93%)</title><rect x="3.9596%" y="789" width="0.9317%" height="15" fill="rgb(253,215,40)" fg:x="51" fg:w="12"/><text x="4.2096%" y="799.50"></text></g><g><title>std::panicking::try (12 samples, 0.93%)</title><rect x="3.9596%" y="773" width="0.9317%" height="15" fill="rgb(211,81,21)" fg:x="51" fg:w="12"/><text x="4.2096%" y="783.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.93%)</title><rect x="3.9596%" y="757" width="0.9317%" height="15" fill="rgb(208,190,38)" fg:x="51" fg:w="12"/><text x="4.2096%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.93%)</title><rect x="3.9596%" y="741" width="0.9317%" height="15" fill="rgb(235,213,38)" fg:x="51" fg:w="12"/><text x="4.2096%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (12 samples, 0.93%)</title><rect x="3.9596%" y="725" width="0.9317%" height="15" fill="rgb(237,122,38)" fg:x="51" fg:w="12"/><text x="4.2096%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.93%)</title><rect x="3.9596%" y="709" width="0.9317%" height="15" fill="rgb(244,218,35)" fg:x="51" fg:w="12"/><text x="4.2096%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.93%)</title><rect x="3.9596%" y="693" width="0.9317%" height="15" fill="rgb(240,68,47)" fg:x="51" fg:w="12"/><text x="4.2096%" y="703.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (12 samples, 0.93%)</title><rect x="3.9596%" y="677" width="0.9317%" height="15" fill="rgb(210,16,53)" fg:x="51" fg:w="12"/><text x="4.2096%" y="687.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.93%)</title><rect x="3.9596%" y="661" width="0.9317%" height="15" fill="rgb(235,124,12)" fg:x="51" fg:w="12"/><text x="4.2096%" y="671.50"></text></g><g><title>std::panicking::try (12 samples, 0.93%)</title><rect x="3.9596%" y="645" width="0.9317%" height="15" fill="rgb(224,169,11)" fg:x="51" fg:w="12"/><text x="4.2096%" y="655.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.93%)</title><rect x="3.9596%" y="629" width="0.9317%" height="15" fill="rgb(250,166,2)" fg:x="51" fg:w="12"/><text x="4.2096%" y="639.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (12 samples, 0.93%)</title><rect x="3.9596%" y="613" width="0.9317%" height="15" fill="rgb(242,216,29)" fg:x="51" fg:w="12"/><text x="4.2096%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.93%)</title><rect x="3.9596%" y="597" width="0.9317%" height="15" fill="rgb(230,116,27)" fg:x="51" fg:w="12"/><text x="4.2096%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.93%)</title><rect x="3.9596%" y="581" width="0.9317%" height="15" fill="rgb(228,99,48)" fg:x="51" fg:w="12"/><text x="4.2096%" y="591.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (12 samples, 0.93%)</title><rect x="3.9596%" y="565" width="0.9317%" height="15" fill="rgb(253,11,6)" fg:x="51" fg:w="12"/><text x="4.2096%" y="575.50"></text></g><g><title>async_global_executor::reactor::block_on (12 samples, 0.93%)</title><rect x="3.9596%" y="549" width="0.9317%" height="15" fill="rgb(247,143,39)" fg:x="51" fg:w="12"/><text x="4.2096%" y="559.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (12 samples, 0.93%)</title><rect x="3.9596%" y="533" width="0.9317%" height="15" fill="rgb(236,97,10)" fg:x="51" fg:w="12"/><text x="4.2096%" y="543.50"></text></g><g><title>async_io::driver::block_on (12 samples, 0.93%)</title><rect x="3.9596%" y="517" width="0.9317%" height="15" fill="rgb(233,208,19)" fg:x="51" fg:w="12"/><text x="4.2096%" y="527.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (11 samples, 0.85%)</title><rect x="4.0373%" y="501" width="0.8540%" height="15" fill="rgb(216,164,2)" fg:x="52" fg:w="11"/><text x="4.2873%" y="511.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (11 samples, 0.85%)</title><rect x="4.0373%" y="485" width="0.8540%" height="15" fill="rgb(220,129,5)" fg:x="52" fg:w="11"/><text x="4.2873%" y="495.50"></text></g><g><title>async_lock::once_cell::now_or_never (11 samples, 0.85%)</title><rect x="4.0373%" y="469" width="0.8540%" height="15" fill="rgb(242,17,10)" fg:x="52" fg:w="11"/><text x="4.2873%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.85%)</title><rect x="4.0373%" y="453" width="0.8540%" height="15" fill="rgb(242,107,0)" fg:x="52" fg:w="11"/><text x="4.2873%" y="463.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::{{closure}} (11 samples, 0.85%)</title><rect x="4.0373%" y="437" width="0.8540%" height="15" fill="rgb(251,28,31)" fg:x="52" fg:w="11"/><text x="4.2873%" y="447.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking::{{closure}} (1 samples, 0.08%)</title><rect x="4.8137%" y="421" width="0.0776%" height="15" fill="rgb(233,223,10)" fg:x="62" fg:w="1"/><text x="5.0637%" y="431.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking::{{closure}} (1 samples, 0.08%)</title><rect x="4.8137%" y="405" width="0.0776%" height="15" fill="rgb(215,21,27)" fg:x="62" fg:w="1"/><text x="5.0637%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::get::{{closure}} (1 samples, 0.08%)</title><rect x="4.8137%" y="389" width="0.0776%" height="15" fill="rgb(232,23,21)" fg:x="62" fg:w="1"/><text x="5.0637%" y="399.50"></text></g><g><title>polling::Poller::new (1 samples, 0.08%)</title><rect x="4.8137%" y="373" width="0.0776%" height="15" fill="rgb(244,5,23)" fg:x="62" fg:w="1"/><text x="5.0637%" y="383.50"></text></g><g><title>polling::epoll::Events::new (1 samples, 0.08%)</title><rect x="4.8137%" y="357" width="0.0776%" height="15" fill="rgb(226,81,46)" fg:x="62" fg:w="1"/><text x="5.0637%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="4.8137%" y="341" width="0.0776%" height="15" fill="rgb(247,70,30)" fg:x="62" fg:w="1"/><text x="5.0637%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="4.8137%" y="325" width="0.0776%" height="15" fill="rgb(212,68,19)" fg:x="62" fg:w="1"/><text x="5.0637%" y="335.50"></text></g><g><title>[libc.so.6] (15 samples, 1.16%)</title><rect x="3.8043%" y="901" width="1.1646%" height="15" fill="rgb(240,187,13)" fg:x="49" fg:w="15"/><text x="4.0543%" y="911.50"></text></g><g><title>[libc.so.6] (14 samples, 1.09%)</title><rect x="3.8820%" y="885" width="1.0870%" height="15" fill="rgb(223,113,26)" fg:x="50" fg:w="14"/><text x="4.1320%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14 samples, 1.09%)</title><rect x="3.8820%" y="869" width="1.0870%" height="15" fill="rgb(206,192,2)" fg:x="50" fg:w="14"/><text x="4.1320%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 1.09%)</title><rect x="3.8820%" y="853" width="1.0870%" height="15" fill="rgb(241,108,4)" fg:x="50" fg:w="14"/><text x="4.1320%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 1.09%)</title><rect x="3.8820%" y="837" width="1.0870%" height="15" fill="rgb(247,173,49)" fg:x="50" fg:w="14"/><text x="4.1320%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14 samples, 1.09%)</title><rect x="3.8820%" y="821" width="1.0870%" height="15" fill="rgb(224,114,35)" fg:x="50" fg:w="14"/><text x="4.1320%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (14 samples, 1.09%)</title><rect x="3.8820%" y="805" width="1.0870%" height="15" fill="rgb(245,159,27)" fg:x="50" fg:w="14"/><text x="4.1320%" y="815.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.08%)</title><rect x="4.8913%" y="789" width="0.0776%" height="15" fill="rgb(245,172,44)" fg:x="63" fg:w="1"/><text x="5.1413%" y="799.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.08%)</title><rect x="4.8913%" y="773" width="0.0776%" height="15" fill="rgb(236,23,11)" fg:x="63" fg:w="1"/><text x="5.1413%" y="783.50"></text></g><g><title>pthread_getaffinity_np (1 samples, 0.08%)</title><rect x="4.8913%" y="757" width="0.0776%" height="15" fill="rgb(205,117,38)" fg:x="63" fg:w="1"/><text x="5.1413%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="4.8913%" y="741" width="0.0776%" height="15" fill="rgb(237,72,25)" fg:x="63" fg:w="1"/><text x="5.1413%" y="751.50"></text></g><g><title>async-std/runti (16 samples, 1.24%)</title><rect x="3.8043%" y="917" width="1.2422%" height="15" fill="rgb(244,70,9)" fg:x="49" fg:w="16"/><text x="4.0543%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9689%" y="901" width="0.0776%" height="15" fill="rgb(217,125,39)" fg:x="64" fg:w="1"/><text x="5.2189%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="4.9689%" y="885" width="0.0776%" height="15" fill="rgb(235,36,10)" fg:x="64" fg:w="1"/><text x="5.2189%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.0466%" y="885" width="0.1553%" height="15" fill="rgb(251,123,47)" fg:x="65" fg:w="2"/><text x="5.2966%" y="895.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="5.2019%" y="885" width="0.1553%" height="15" fill="rgb(221,13,13)" fg:x="67" fg:w="2"/><text x="5.4519%" y="895.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (2 samples, 0.16%)</title><rect x="5.2019%" y="869" width="0.1553%" height="15" fill="rgb(238,131,9)" fg:x="67" fg:w="2"/><text x="5.4519%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="5.3571%" y="885" width="0.0776%" height="15" fill="rgb(211,50,8)" fg:x="69" fg:w="1"/><text x="5.6071%" y="895.50"></text></g><g><title>[libc.so.6] (21 samples, 1.63%)</title><rect x="5.4348%" y="885" width="1.6304%" height="15" fill="rgb(245,182,24)" fg:x="70" fg:w="21"/><text x="5.6848%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (21 samples, 1.63%)</title><rect x="7.0652%" y="885" width="1.6304%" height="15" fill="rgb(242,14,37)" fg:x="91" fg:w="21"/><text x="7.3152%" y="895.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="8.6957%" y="885" width="0.0776%" height="15" fill="rgb(246,228,12)" fg:x="112" fg:w="1"/><text x="8.9457%" y="895.50"></text></g><g><title>_XEventsQueued (1 samples, 0.08%)</title><rect x="8.7733%" y="885" width="0.0776%" height="15" fill="rgb(213,55,15)" fg:x="113" fg:w="1"/><text x="9.0233%" y="895.50"></text></g><g><title>_XReply (2 samples, 0.16%)</title><rect x="8.8509%" y="885" width="0.1553%" height="15" fill="rgb(209,9,3)" fg:x="114" fg:w="2"/><text x="9.1009%" y="895.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="9.0062%" y="885" width="0.0776%" height="15" fill="rgb(230,59,30)" fg:x="116" fg:w="1"/><text x="9.2562%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.08%)</title><rect x="9.0839%" y="885" width="0.0776%" height="15" fill="rgb(209,121,21)" fg:x="117" fg:w="1"/><text x="9.3339%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="9.0839%" y="869" width="0.0776%" height="15" fill="rgb(220,109,13)" fg:x="117" fg:w="1"/><text x="9.3339%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.08%)</title><rect x="9.0839%" y="853" width="0.0776%" height="15" fill="rgb(232,18,1)" fg:x="117" fg:w="1"/><text x="9.3339%" y="863.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="9.0839%" y="837" width="0.0776%" height="15" fill="rgb(215,41,42)" fg:x="117" fg:w="1"/><text x="9.3339%" y="847.50"></text></g><g><title>msdfgen::EdgeHolder::operator msdfgen::EdgeSegment const* (1 samples, 0.08%)</title><rect x="9.1615%" y="885" width="0.0776%" height="15" fill="rgb(224,123,36)" fg:x="118" fg:w="1"/><text x="9.4115%" y="895.50"></text></g><g><title>msdfgen::LinearSegment::signedDistance (1 samples, 0.08%)</title><rect x="9.2391%" y="885" width="0.0776%" height="15" fill="rgb(240,125,3)" fg:x="119" fg:w="1"/><text x="9.4891%" y="895.50"></text></g><g><title>msdfgen::MultiDistanceSelector::addEdge (1 samples, 0.08%)</title><rect x="9.3168%" y="885" width="0.0776%" height="15" fill="rgb(205,98,50)" fg:x="120" fg:w="1"/><text x="9.5668%" y="895.50"></text></g><g><title>msdfgen::Vector2::normalize (2 samples, 0.16%)</title><rect x="9.3944%" y="885" width="0.1553%" height="15" fill="rgb(205,185,37)" fg:x="121" fg:w="2"/><text x="9.6444%" y="895.50"></text></g><g><title>msdfgen::hasDiagonalArtifactInner&lt;msdfgen::ShapeDistanceChecker&lt;msdfgen::OverlappingContourCombiner, 4&gt;::ArtifactClassifier&gt; (1 samples, 0.08%)</title><rect x="9.5497%" y="885" width="0.0776%" height="15" fill="rgb(238,207,15)" fg:x="123" fg:w="1"/><text x="9.7997%" y="895.50"></text></g><g><title>wgpu::Surface::configure (1 samples, 0.08%)</title><rect x="9.6273%" y="885" width="0.0776%" height="15" fill="rgb(213,199,42)" fg:x="124" fg:w="1"/><text x="9.8773%" y="895.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (1 samples, 0.08%)</title><rect x="9.7050%" y="885" width="0.0776%" height="15" fill="rgb(235,201,11)" fg:x="125" fg:w="1"/><text x="9.9550%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (1 samples, 0.08%)</title><rect x="9.7050%" y="869" width="0.0776%" height="15" fill="rgb(207,46,11)" fg:x="125" fg:w="1"/><text x="9.9550%" y="879.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (1 samples, 0.08%)</title><rect x="9.7050%" y="853" width="0.0776%" height="15" fill="rgb(241,35,35)" fg:x="125" fg:w="1"/><text x="9.9550%" y="863.50"></text></g><g><title>wgpu_core::command::bind::compute_nonoverlapping_ranges (1 samples, 0.08%)</title><rect x="9.7826%" y="885" width="0.0776%" height="15" fill="rgb(243,32,47)" fg:x="126" fg:w="1"/><text x="10.0326%" y="895.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_buffer_memory (1 samples, 0.08%)</title><rect x="9.8602%" y="885" width="0.0776%" height="15" fill="rgb(247,202,23)" fg:x="127" fg:w="1"/><text x="10.1102%" y="895.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::extend (1 samples, 0.08%)</title><rect x="9.9379%" y="885" width="0.0776%" height="15" fill="rgb(219,102,11)" fg:x="128" fg:w="1"/><text x="10.1879%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (3 samples, 0.23%)</title><rect x="10.0155%" y="885" width="0.2329%" height="15" fill="rgb(243,110,44)" fg:x="129" fg:w="3"/><text x="10.2655%" y="895.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (3 samples, 0.23%)</title><rect x="10.0155%" y="869" width="0.2329%" height="15" fill="rgb(222,74,54)" fg:x="129" fg:w="3"/><text x="10.2655%" y="879.50"></text></g><g><title>[[heap]] (69 samples, 5.36%)</title><rect x="5.0466%" y="901" width="5.3571%" height="15" fill="rgb(216,99,12)" fg:x="65" fg:w="69"/><text x="5.2966%" y="911.50">[[heap]]</text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (2 samples, 0.16%)</title><rect x="10.2484%" y="885" width="0.1553%" height="15" fill="rgb(226,22,26)" fg:x="132" fg:w="2"/><text x="10.4984%" y="895.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (1 samples, 0.08%)</title><rect x="10.4037%" y="885" width="0.0776%" height="15" fill="rgb(217,163,10)" fg:x="134" fg:w="1"/><text x="10.6537%" y="895.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (1 samples, 0.08%)</title><rect x="10.4814%" y="885" width="0.0776%" height="15" fill="rgb(213,25,53)" fg:x="135" fg:w="1"/><text x="10.7314%" y="895.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (1 samples, 0.08%)</title><rect x="10.5590%" y="885" width="0.0776%" height="15" fill="rgb(252,105,26)" fg:x="136" fg:w="1"/><text x="10.8090%" y="895.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1 samples, 0.08%)</title><rect x="10.5590%" y="869" width="0.0776%" height="15" fill="rgb(220,39,43)" fg:x="136" fg:w="1"/><text x="10.8090%" y="879.50"></text></g><g><title>XCheckIfEvent (2 samples, 0.16%)</title><rect x="10.6366%" y="885" width="0.1553%" height="15" fill="rgb(229,68,48)" fg:x="137" fg:w="2"/><text x="10.8866%" y="895.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="10.7919%" y="885" width="0.0776%" height="15" fill="rgb(252,8,32)" fg:x="139" fg:w="1"/><text x="11.0419%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="10.8696%" y="885" width="0.4658%" height="15" fill="rgb(223,20,43)" fg:x="140" fg:w="6"/><text x="11.1196%" y="895.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="11.3354%" y="885" width="0.0776%" height="15" fill="rgb(229,81,49)" fg:x="146" fg:w="1"/><text x="11.5854%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.4130%" y="885" width="0.0776%" height="15" fill="rgb(236,28,36)" fg:x="147" fg:w="1"/><text x="11.6630%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Texture&gt; (1 samples, 0.08%)</title><rect x="11.4907%" y="885" width="0.0776%" height="15" fill="rgb(249,185,26)" fg:x="148" fg:w="1"/><text x="11.7407%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5683%" y="885" width="0.0776%" height="15" fill="rgb(249,174,33)" fg:x="149" fg:w="1"/><text x="11.8183%" y="895.50"></text></g><g><title>msdfgen::EdgeSegment::distanceToPseudoDistance (1 samples, 0.08%)</title><rect x="11.6460%" y="885" width="0.0776%" height="15" fill="rgb(233,201,37)" fg:x="150" fg:w="1"/><text x="11.8960%" y="895.50"></text></g><g><title>msdfgen::MultiDistanceSelector::merge (1 samples, 0.08%)</title><rect x="11.7236%" y="885" width="0.0776%" height="15" fill="rgb(221,78,26)" fg:x="151" fg:w="1"/><text x="11.9736%" y="895.50"></text></g><g><title>msdfgen::MultiDistanceSelector::reset (2 samples, 0.16%)</title><rect x="11.8012%" y="885" width="0.1553%" height="15" fill="rgb(250,127,30)" fg:x="152" fg:w="2"/><text x="12.0512%" y="895.50"></text></g><g><title>msdfgen::PseudoDistanceSelectorBase::getPseudoDistance (1 samples, 0.08%)</title><rect x="11.9565%" y="885" width="0.0776%" height="15" fill="rgb(230,49,44)" fg:x="154" fg:w="1"/><text x="12.2065%" y="895.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (1 samples, 0.08%)</title><rect x="12.0342%" y="885" width="0.0776%" height="15" fill="rgb(229,67,23)" fg:x="155" fg:w="1"/><text x="12.2842%" y="895.50"></text></g><g><title>wgpu::Device::create_command_encoder (1 samples, 0.08%)</title><rect x="12.1118%" y="885" width="0.0776%" height="15" fill="rgb(249,83,47)" fg:x="156" fg:w="1"/><text x="12.3618%" y="895.50"></text></g><g><title>[[stack]] (24 samples, 1.86%)</title><rect x="10.4037%" y="901" width="1.8634%" height="15" fill="rgb(215,43,3)" fg:x="134" fg:w="24"/><text x="10.6537%" y="911.50">[..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::map_buffer (1 samples, 0.08%)</title><rect x="12.1894%" y="885" width="0.0776%" height="15" fill="rgb(238,154,13)" fg:x="157" fg:w="1"/><text x="12.4394%" y="895.50"></text></g><g><title>gpu_alloc::block::MemoryBlock&lt;M&gt;::map (1 samples, 0.08%)</title><rect x="12.1894%" y="869" width="0.0776%" height="15" fill="rgb(219,56,2)" fg:x="157" fg:w="1"/><text x="12.4394%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="12.2671%" y="885" width="0.0776%" height="15" fill="rgb(233,0,4)" fg:x="158" fg:w="1"/><text x="12.5171%" y="895.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="12.3447%" y="885" width="0.1553%" height="15" fill="rgb(235,30,7)" fg:x="159" fg:w="2"/><text x="12.5947%" y="895.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="12.5000%" y="885" width="0.0776%" height="15" fill="rgb(250,79,13)" fg:x="161" fg:w="1"/><text x="12.7500%" y="895.50"></text></g><g><title>[anon] (8 samples, 0.62%)</title><rect x="12.2671%" y="901" width="0.6211%" height="15" fill="rgb(211,146,34)" fg:x="158" fg:w="8"/><text x="12.5171%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="12.5776%" y="885" width="0.3106%" height="15" fill="rgb(228,22,38)" fg:x="162" fg:w="4"/><text x="12.8276%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.54%)</title><rect x="12.8882%" y="901" width="0.5435%" height="15" fill="rgb(235,168,5)" fg:x="166" fg:w="7"/><text x="13.1382%" y="911.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.16%)</title><rect x="13.2764%" y="885" width="0.1553%" height="15" fill="rgb(221,155,16)" fg:x="171" fg:w="2"/><text x="13.5264%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.16%)</title><rect x="13.2764%" y="869" width="0.1553%" height="15" fill="rgb(215,215,53)" fg:x="171" fg:w="2"/><text x="13.5264%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.16%)</title><rect x="13.2764%" y="853" width="0.1553%" height="15" fill="rgb(223,4,10)" fg:x="171" fg:w="2"/><text x="13.5264%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="13.3540%" y="837" width="0.0776%" height="15" fill="rgb(234,103,6)" fg:x="172" fg:w="1"/><text x="13.6040%" y="847.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="13.4317%" y="901" width="0.1553%" height="15" fill="rgb(227,97,0)" fg:x="173" fg:w="2"/><text x="13.6817%" y="911.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="13.5093%" y="885" width="0.0776%" height="15" fill="rgb(234,150,53)" fg:x="174" fg:w="1"/><text x="13.7593%" y="895.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="13.5093%" y="869" width="0.0776%" height="15" fill="rgb(228,201,54)" fg:x="174" fg:w="1"/><text x="13.7593%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="13.5093%" y="853" width="0.0776%" height="15" fill="rgb(222,22,37)" fg:x="174" fg:w="1"/><text x="13.7593%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="13.5093%" y="837" width="0.0776%" height="15" fill="rgb(237,53,32)" fg:x="174" fg:w="1"/><text x="13.7593%" y="847.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="14.2081%" y="885" width="0.0776%" height="15" fill="rgb(233,25,53)" fg:x="183" fg:w="1"/><text x="14.4581%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="14.5186%" y="821" width="0.0776%" height="15" fill="rgb(210,40,34)" fg:x="187" fg:w="1"/><text x="14.7686%" y="831.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="821" width="0.0776%" height="15" fill="rgb(241,220,44)" fg:x="188" fg:w="1"/><text x="14.8463%" y="831.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="805" width="0.0776%" height="15" fill="rgb(235,28,35)" fg:x="188" fg:w="1"/><text x="14.8463%" y="815.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="789" width="0.0776%" height="15" fill="rgb(210,56,17)" fg:x="188" fg:w="1"/><text x="14.8463%" y="799.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="773" width="0.0776%" height="15" fill="rgb(224,130,29)" fg:x="188" fg:w="1"/><text x="14.8463%" y="783.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="757" width="0.0776%" height="15" fill="rgb(235,212,8)" fg:x="188" fg:w="1"/><text x="14.8463%" y="767.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="741" width="0.0776%" height="15" fill="rgb(223,33,50)" fg:x="188" fg:w="1"/><text x="14.8463%" y="751.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="725" width="0.0776%" height="15" fill="rgb(219,149,13)" fg:x="188" fg:w="1"/><text x="14.8463%" y="735.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="709" width="0.0776%" height="15" fill="rgb(250,156,29)" fg:x="188" fg:w="1"/><text x="14.8463%" y="719.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="693" width="0.0776%" height="15" fill="rgb(216,193,19)" fg:x="188" fg:w="1"/><text x="14.8463%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="677" width="0.0776%" height="15" fill="rgb(216,135,14)" fg:x="188" fg:w="1"/><text x="14.8463%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="14.5963%" y="661" width="0.0776%" height="15" fill="rgb(241,47,5)" fg:x="188" fg:w="1"/><text x="14.8463%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (12 samples, 0.93%)</title><rect x="14.5186%" y="837" width="0.9317%" height="15" fill="rgb(233,42,35)" fg:x="187" fg:w="12"/><text x="14.7686%" y="847.50"></text></g><g><title>pthread_cond_timedwait (10 samples, 0.78%)</title><rect x="14.6739%" y="821" width="0.7764%" height="15" fill="rgb(231,13,6)" fg:x="189" fg:w="10"/><text x="14.9239%" y="831.50"></text></g><g><title>[libc.so.6] (10 samples, 0.78%)</title><rect x="14.6739%" y="805" width="0.7764%" height="15" fill="rgb(207,181,40)" fg:x="189" fg:w="10"/><text x="14.9239%" y="815.50"></text></g><g><title>pthread_cond_broadcast (1 samples, 0.08%)</title><rect x="15.4503%" y="837" width="0.0776%" height="15" fill="rgb(254,173,49)" fg:x="199" fg:w="1"/><text x="15.7003%" y="847.50"></text></g><g><title>pthread_cond_timedwait (5 samples, 0.39%)</title><rect x="15.5280%" y="837" width="0.3882%" height="15" fill="rgb(221,1,38)" fg:x="200" fg:w="5"/><text x="15.7780%" y="847.50"></text></g><g><title>[libc.so.6] (4 samples, 0.31%)</title><rect x="15.6056%" y="821" width="0.3106%" height="15" fill="rgb(206,124,46)" fg:x="201" fg:w="4"/><text x="15.8556%" y="831.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (20 samples, 1.55%)</title><rect x="14.4410%" y="869" width="1.5528%" height="15" fill="rgb(249,21,11)" fg:x="186" fg:w="20"/><text x="14.6910%" y="879.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (20 samples, 1.55%)</title><rect x="14.4410%" y="853" width="1.5528%" height="15" fill="rgb(222,201,40)" fg:x="186" fg:w="20"/><text x="14.6910%" y="863.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.08%)</title><rect x="15.9161%" y="837" width="0.0776%" height="15" fill="rgb(235,61,29)" fg:x="205" fg:w="1"/><text x="16.1661%" y="847.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="16.6925%" y="821" width="0.1553%" height="15" fill="rgb(219,207,3)" fg:x="215" fg:w="2"/><text x="16.9425%" y="831.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="18.7112%" y="805" width="0.1553%" height="15" fill="rgb(222,56,46)" fg:x="241" fg:w="2"/><text x="18.9612%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="19.1770%" y="789" width="0.4658%" height="15" fill="rgb(239,76,54)" fg:x="247" fg:w="6"/><text x="19.4270%" y="799.50"></text></g><g><title>clock_gettime (4 samples, 0.31%)</title><rect x="19.3323%" y="773" width="0.3106%" height="15" fill="rgb(231,124,27)" fg:x="249" fg:w="4"/><text x="19.5823%" y="783.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.16%)</title><rect x="19.4876%" y="757" width="0.1553%" height="15" fill="rgb(249,195,6)" fg:x="251" fg:w="2"/><text x="19.7376%" y="767.50"></text></g><g><title>[[vdso]] (1 samples, 0.08%)</title><rect x="19.5652%" y="741" width="0.0776%" height="15" fill="rgb(237,174,47)" fg:x="252" fg:w="1"/><text x="19.8152%" y="751.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.08%)</title><rect x="19.6429%" y="789" width="0.0776%" height="15" fill="rgb(206,201,31)" fg:x="253" fg:w="1"/><text x="19.8929%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (13 samples, 1.01%)</title><rect x="18.8665%" y="805" width="1.0093%" height="15" fill="rgb(231,57,52)" fg:x="243" fg:w="13"/><text x="19.1165%" y="815.50"></text></g><g><title>pthread_self (2 samples, 0.16%)</title><rect x="19.7205%" y="789" width="0.1553%" height="15" fill="rgb(248,177,22)" fg:x="254" fg:w="2"/><text x="19.9705%" y="799.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="19.8758%" y="805" width="0.0776%" height="15" fill="rgb(215,211,37)" fg:x="256" fg:w="1"/><text x="20.1258%" y="815.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="19.8758%" y="789" width="0.0776%" height="15" fill="rgb(241,128,51)" fg:x="256" fg:w="1"/><text x="20.1258%" y="799.50"></text></g><g><title>gettimeofday@plt (2 samples, 0.16%)</title><rect x="19.9534%" y="805" width="0.1553%" height="15" fill="rgb(227,165,31)" fg:x="257" fg:w="2"/><text x="20.2034%" y="815.50"></text></g><g><title>[libc.so.6] (69 samples, 5.36%)</title><rect x="20.2640%" y="789" width="5.3571%" height="15" fill="rgb(228,167,24)" fg:x="261" fg:w="69"/><text x="20.5140%" y="799.50">[libc.s..</text></g><g><title>[libc.so.6] (6 samples, 0.47%)</title><rect x="25.1553%" y="773" width="0.4658%" height="15" fill="rgb(228,143,12)" fg:x="324" fg:w="6"/><text x="25.4053%" y="783.50"></text></g><g><title>_pthread_cleanup_pop (1 samples, 0.08%)</title><rect x="25.6211%" y="789" width="0.0776%" height="15" fill="rgb(249,149,8)" fg:x="330" fg:w="1"/><text x="25.8711%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (115 samples, 8.93%)</title><rect x="16.8478%" y="821" width="8.9286%" height="15" fill="rgb(243,35,44)" fg:x="217" fg:w="115"/><text x="17.0978%" y="831.50">[libnvidia-gl..</text></g><g><title>pthread_cond_timedwait (73 samples, 5.67%)</title><rect x="20.1087%" y="805" width="5.6677%" height="15" fill="rgb(246,89,9)" fg:x="259" fg:w="73"/><text x="20.3587%" y="815.50">pthread..</text></g><g><title>_pthread_cleanup_push (1 samples, 0.08%)</title><rect x="25.6988%" y="789" width="0.0776%" height="15" fill="rgb(233,213,13)" fg:x="331" fg:w="1"/><text x="25.9488%" y="799.50"></text></g><g><title>__close (2 samples, 0.16%)</title><rect x="25.7764%" y="821" width="0.1553%" height="15" fill="rgb(233,141,41)" fg:x="332" fg:w="2"/><text x="26.0264%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="25.8540%" y="805" width="0.0776%" height="15" fill="rgb(239,167,4)" fg:x="333" fg:w="1"/><text x="26.1040%" y="815.50"></text></g><g><title>__nanosleep (20 samples, 1.55%)</title><rect x="25.9317%" y="821" width="1.5528%" height="15" fill="rgb(209,217,16)" fg:x="334" fg:w="20"/><text x="26.1817%" y="831.50"></text></g><g><title>clock_nanosleep (20 samples, 1.55%)</title><rect x="25.9317%" y="805" width="1.5528%" height="15" fill="rgb(219,88,35)" fg:x="334" fg:w="20"/><text x="26.1817%" y="815.50"></text></g><g><title>close@plt (1 samples, 0.08%)</title><rect x="27.4845%" y="821" width="0.0776%" height="15" fill="rgb(220,193,23)" fg:x="354" fg:w="1"/><text x="27.7345%" y="831.50"></text></g><g><title>read (3 samples, 0.23%)</title><rect x="27.5621%" y="821" width="0.2329%" height="15" fill="rgb(230,90,52)" fg:x="355" fg:w="3"/><text x="27.8121%" y="831.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="27.6398%" y="805" width="0.1553%" height="15" fill="rgb(252,106,19)" fg:x="356" fg:w="2"/><text x="27.8898%" y="815.50"></text></g><g><title>[libc.so.6] (6 samples, 0.47%)</title><rect x="28.6491%" y="789" width="0.4658%" height="15" fill="rgb(206,74,20)" fg:x="369" fg:w="6"/><text x="28.8991%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (169 samples, 13.12%)</title><rect x="16.0714%" y="837" width="13.1211%" height="15" fill="rgb(230,138,44)" fg:x="207" fg:w="169"/><text x="16.3214%" y="847.50">[libnvidia-glcore.so..</text></g><g><title>sscanf (18 samples, 1.40%)</title><rect x="27.7950%" y="821" width="1.3975%" height="15" fill="rgb(235,182,43)" fg:x="358" fg:w="18"/><text x="28.0450%" y="831.50"></text></g><g><title>[libc.so.6] (18 samples, 1.40%)</title><rect x="27.7950%" y="805" width="1.3975%" height="15" fill="rgb(242,16,51)" fg:x="358" fg:w="18"/><text x="28.0450%" y="815.50"></text></g><g><title>__strtoll_internal (1 samples, 0.08%)</title><rect x="29.1149%" y="789" width="0.0776%" height="15" fill="rgb(248,9,4)" fg:x="375" fg:w="1"/><text x="29.3649%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (171 samples, 13.28%)</title><rect x="15.9938%" y="869" width="13.2764%" height="15" fill="rgb(210,31,22)" fg:x="206" fg:w="171"/><text x="16.2438%" y="879.50">[libnvidia-glcore.so..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (171 samples, 13.28%)</title><rect x="15.9938%" y="853" width="13.2764%" height="15" fill="rgb(239,54,39)" fg:x="206" fg:w="171"/><text x="16.2438%" y="863.50">[libnvidia-glcore.so..</text></g><g><title>__vdso_gettimeofday (1 samples, 0.08%)</title><rect x="29.1925%" y="837" width="0.0776%" height="15" fill="rgb(230,99,41)" fg:x="376" fg:w="1"/><text x="29.4425%" y="847.50"></text></g><g><title>[libc.so.6] (203 samples, 15.76%)</title><rect x="13.5870%" y="901" width="15.7609%" height="15" fill="rgb(253,106,12)" fg:x="175" fg:w="203"/><text x="13.8370%" y="911.50">[libc.so.6]</text></g><g><title>[libc.so.6] (194 samples, 15.06%)</title><rect x="14.2857%" y="885" width="15.0621%" height="15" fill="rgb(213,46,41)" fg:x="184" fg:w="194"/><text x="14.5357%" y="895.50">[libc.so.6]</text></g><g><title>__ctype_init (1 samples, 0.08%)</title><rect x="29.2702%" y="869" width="0.0776%" height="15" fill="rgb(215,133,35)" fg:x="377" fg:w="1"/><text x="29.5202%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="29.3478%" y="901" width="0.1553%" height="15" fill="rgb(213,28,5)" fg:x="378" fg:w="2"/><text x="29.5978%" y="911.50"></text></g><g><title>[nvidiactl] (6 samples, 0.47%)</title><rect x="29.5031%" y="901" width="0.4658%" height="15" fill="rgb(215,77,49)" fg:x="380" fg:w="6"/><text x="29.7531%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="29.5031%" y="885" width="0.4658%" height="15" fill="rgb(248,100,22)" fg:x="380" fg:w="6"/><text x="29.7531%" y="895.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_get_mapped_range (1 samples, 0.08%)</title><rect x="29.9689%" y="885" width="0.0776%" height="15" fill="rgb(208,67,9)" fg:x="386" fg:w="1"/><text x="30.2189%" y="895.50"></text></g><g><title>khronos_egl::Instance&lt;khronos_egl::Dynamic&lt;libloading::safe::Library,khronos_egl::EGL1_4&gt;&gt;::load_required (1 samples, 0.08%)</title><rect x="30.0466%" y="661" width="0.0776%" height="15" fill="rgb(219,133,21)" fg:x="387" fg:w="1"/><text x="30.2966%" y="671.50"></text></g><g><title>khronos_egl::Instance&lt;khronos_egl::Dynamic&lt;libloading::safe::Library,khronos_egl::EGL1_4&gt;&gt;::load_required_from_filename (1 samples, 0.08%)</title><rect x="30.0466%" y="645" width="0.0776%" height="15" fill="rgb(246,46,29)" fg:x="387" fg:w="1"/><text x="30.2966%" y="655.50"></text></g><g><title>khronos_egl::Instance&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt;&gt;::load_required_from (1 samples, 0.08%)</title><rect x="30.0466%" y="629" width="0.0776%" height="15" fill="rgb(246,185,52)" fg:x="387" fg:w="1"/><text x="30.2966%" y="639.50"></text></g><g><title>khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt;::load_required (1 samples, 0.08%)</title><rect x="30.0466%" y="613" width="0.0776%" height="15" fill="rgb(252,136,11)" fg:x="387" fg:w="1"/><text x="30.2966%" y="623.50"></text></g><g><title>khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_0&gt;::load_from (1 samples, 0.08%)</title><rect x="30.0466%" y="597" width="0.0776%" height="15" fill="rgb(219,138,53)" fg:x="387" fg:w="1"/><text x="30.2966%" y="607.50"></text></g><g><title>khronos_egl::EGL1_0::load_from (1 samples, 0.08%)</title><rect x="30.0466%" y="581" width="0.0776%" height="15" fill="rgb(211,51,23)" fg:x="387" fg:w="1"/><text x="30.2966%" y="591.50"></text></g><g><title>libloading::safe::Library::get (1 samples, 0.08%)</title><rect x="30.0466%" y="565" width="0.0776%" height="15" fill="rgb(247,221,28)" fg:x="387" fg:w="1"/><text x="30.2966%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.08%)</title><rect x="30.0466%" y="549" width="0.0776%" height="15" fill="rgb(251,222,45)" fg:x="387" fg:w="1"/><text x="30.2966%" y="559.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.1242%" y="501" width="0.0776%" height="15" fill="rgb(217,162,53)" fg:x="388" fg:w="1"/><text x="30.3742%" y="511.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.1242%" y="485" width="0.0776%" height="15" fill="rgb(229,93,14)" fg:x="388" fg:w="1"/><text x="30.3742%" y="495.50"></text></g><g><title>NvGlEglApiInit (2 samples, 0.16%)</title><rect x="30.2019%" y="341" width="0.1553%" height="15" fill="rgb(209,67,49)" fg:x="389" fg:w="2"/><text x="30.4519%" y="351.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.2019%" y="325" width="0.1553%" height="15" fill="rgb(213,87,29)" fg:x="389" fg:w="2"/><text x="30.4519%" y="335.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.2019%" y="309" width="0.1553%" height="15" fill="rgb(205,151,52)" fg:x="389" fg:w="2"/><text x="30.4519%" y="319.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.2019%" y="293" width="0.1553%" height="15" fill="rgb(253,215,39)" fg:x="389" fg:w="2"/><text x="30.4519%" y="303.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.2019%" y="277" width="0.1553%" height="15" fill="rgb(221,220,41)" fg:x="389" fg:w="2"/><text x="30.4519%" y="287.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.2019%" y="261" width="0.1553%" height="15" fill="rgb(218,133,21)" fg:x="389" fg:w="2"/><text x="30.4519%" y="271.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.2019%" y="245" width="0.1553%" height="15" fill="rgb(221,193,43)" fg:x="389" fg:w="2"/><text x="30.4519%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="30.2795%" y="229" width="0.0776%" height="15" fill="rgb(240,128,52)" fg:x="390" fg:w="1"/><text x="30.5295%" y="239.50"></text></g><g><title>khronos_egl::egl1_0::&lt;impl khronos_egl::Instance&lt;T&gt;&gt;::query_string (4 samples, 0.31%)</title><rect x="30.1242%" y="661" width="0.3106%" height="15" fill="rgb(253,114,12)" fg:x="388" fg:w="4"/><text x="30.3742%" y="671.50"></text></g><g><title>&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt; as khronos_egl::api::EGL1_0&gt;::eglQueryString (4 samples, 0.31%)</title><rect x="30.1242%" y="645" width="0.3106%" height="15" fill="rgb(215,223,47)" fg:x="388" fg:w="4"/><text x="30.3742%" y="655.50"></text></g><g><title>eglQueryString (4 samples, 0.31%)</title><rect x="30.1242%" y="629" width="0.3106%" height="15" fill="rgb(248,225,23)" fg:x="388" fg:w="4"/><text x="30.3742%" y="639.50"></text></g><g><title>[libc.so.6] (4 samples, 0.31%)</title><rect x="30.1242%" y="613" width="0.3106%" height="15" fill="rgb(250,108,0)" fg:x="388" fg:w="4"/><text x="30.3742%" y="623.50"></text></g><g><title>[libEGL.so.1.1.0] (4 samples, 0.31%)</title><rect x="30.1242%" y="597" width="0.3106%" height="15" fill="rgb(228,208,7)" fg:x="388" fg:w="4"/><text x="30.3742%" y="607.50"></text></g><g><title>[libEGL.so.1.1.0] (4 samples, 0.31%)</title><rect x="30.1242%" y="581" width="0.3106%" height="15" fill="rgb(244,45,10)" fg:x="388" fg:w="4"/><text x="30.3742%" y="591.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="30.1242%" y="565" width="0.3106%" height="15" fill="rgb(207,125,25)" fg:x="388" fg:w="4"/><text x="30.3742%" y="575.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="30.1242%" y="549" width="0.3106%" height="15" fill="rgb(210,195,18)" fg:x="388" fg:w="4"/><text x="30.3742%" y="559.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="30.1242%" y="533" width="0.3106%" height="15" fill="rgb(249,80,12)" fg:x="388" fg:w="4"/><text x="30.3742%" y="543.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="30.1242%" y="517" width="0.3106%" height="15" fill="rgb(221,65,9)" fg:x="388" fg:w="4"/><text x="30.3742%" y="527.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="30.2019%" y="501" width="0.2329%" height="15" fill="rgb(235,49,36)" fg:x="389" fg:w="3"/><text x="30.4519%" y="511.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="30.2019%" y="485" width="0.2329%" height="15" fill="rgb(225,32,20)" fg:x="389" fg:w="3"/><text x="30.4519%" y="495.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="30.2019%" y="469" width="0.2329%" height="15" fill="rgb(215,141,46)" fg:x="389" fg:w="3"/><text x="30.4519%" y="479.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="30.2019%" y="453" width="0.2329%" height="15" fill="rgb(250,160,47)" fg:x="389" fg:w="3"/><text x="30.4519%" y="463.50"></text></g><g><title>loadEGLExternalPlatform (3 samples, 0.23%)</title><rect x="30.2019%" y="437" width="0.2329%" height="15" fill="rgb(216,222,40)" fg:x="389" fg:w="3"/><text x="30.4519%" y="447.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="30.2019%" y="421" width="0.2329%" height="15" fill="rgb(234,217,39)" fg:x="389" fg:w="3"/><text x="30.4519%" y="431.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="30.2019%" y="405" width="0.2329%" height="15" fill="rgb(207,178,40)" fg:x="389" fg:w="3"/><text x="30.4519%" y="415.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="30.2019%" y="389" width="0.2329%" height="15" fill="rgb(221,136,13)" fg:x="389" fg:w="3"/><text x="30.4519%" y="399.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="30.2019%" y="373" width="0.2329%" height="15" fill="rgb(249,199,10)" fg:x="389" fg:w="3"/><text x="30.4519%" y="383.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="30.2019%" y="357" width="0.2329%" height="15" fill="rgb(249,222,13)" fg:x="389" fg:w="3"/><text x="30.4519%" y="367.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.3571%" y="341" width="0.0776%" height="15" fill="rgb(244,185,38)" fg:x="391" fg:w="1"/><text x="30.6071%" y="351.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.3571%" y="325" width="0.0776%" height="15" fill="rgb(236,202,9)" fg:x="391" fg:w="1"/><text x="30.6071%" y="335.50"></text></g><g><title>dlopen (1 samples, 0.08%)</title><rect x="30.3571%" y="309" width="0.0776%" height="15" fill="rgb(250,229,37)" fg:x="391" fg:w="1"/><text x="30.6071%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="30.3571%" y="293" width="0.0776%" height="15" fill="rgb(206,174,23)" fg:x="391" fg:w="1"/><text x="30.6071%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.3571%" y="277" width="0.0776%" height="15" fill="rgb(211,33,43)" fg:x="391" fg:w="1"/><text x="30.6071%" y="287.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="30.3571%" y="261" width="0.0776%" height="15" fill="rgb(245,58,50)" fg:x="391" fg:w="1"/><text x="30.6071%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="30.3571%" y="245" width="0.0776%" height="15" fill="rgb(244,68,36)" fg:x="391" fg:w="1"/><text x="30.6071%" y="255.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.3571%" y="229" width="0.0776%" height="15" fill="rgb(232,229,15)" fg:x="391" fg:w="1"/><text x="30.6071%" y="239.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="30.3571%" y="213" width="0.0776%" height="15" fill="rgb(254,30,23)" fg:x="391" fg:w="1"/><text x="30.6071%" y="223.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.3571%" y="197" width="0.0776%" height="15" fill="rgb(235,160,14)" fg:x="391" fg:w="1"/><text x="30.6071%" y="207.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="30.3571%" y="181" width="0.0776%" height="15" fill="rgb(212,155,44)" fg:x="391" fg:w="1"/><text x="30.6071%" y="191.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.3571%" y="165" width="0.0776%" height="15" fill="rgb(226,2,50)" fg:x="391" fg:w="1"/><text x="30.6071%" y="175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.3571%" y="149" width="0.0776%" height="15" fill="rgb(234,177,6)" fg:x="391" fg:w="1"/><text x="30.6071%" y="159.50"></text></g><g><title>khronos_egl::egl1_0::&lt;impl khronos_egl::Instance&lt;T&gt;&gt;::create_context (1 samples, 0.08%)</title><rect x="30.4348%" y="645" width="0.0776%" height="15" fill="rgb(217,24,9)" fg:x="392" fg:w="1"/><text x="30.6848%" y="655.50"></text></g><g><title>&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt; as khronos_egl::api::EGL1_0&gt;::eglCreateContext (1 samples, 0.08%)</title><rect x="30.4348%" y="629" width="0.0776%" height="15" fill="rgb(220,13,46)" fg:x="392" fg:w="1"/><text x="30.6848%" y="639.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="613" width="0.0776%" height="15" fill="rgb(239,221,27)" fg:x="392" fg:w="1"/><text x="30.6848%" y="623.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="597" width="0.0776%" height="15" fill="rgb(222,198,25)" fg:x="392" fg:w="1"/><text x="30.6848%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="581" width="0.0776%" height="15" fill="rgb(211,99,13)" fg:x="392" fg:w="1"/><text x="30.6848%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="565" width="0.0776%" height="15" fill="rgb(232,111,31)" fg:x="392" fg:w="1"/><text x="30.6848%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="549" width="0.0776%" height="15" fill="rgb(245,82,37)" fg:x="392" fg:w="1"/><text x="30.6848%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="533" width="0.0776%" height="15" fill="rgb(227,149,46)" fg:x="392" fg:w="1"/><text x="30.6848%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="517" width="0.0776%" height="15" fill="rgb(218,36,50)" fg:x="392" fg:w="1"/><text x="30.6848%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="501" width="0.0776%" height="15" fill="rgb(226,80,48)" fg:x="392" fg:w="1"/><text x="30.6848%" y="511.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.4348%" y="485" width="0.0776%" height="15" fill="rgb(238,224,15)" fg:x="392" fg:w="1"/><text x="30.6848%" y="495.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="30.4348%" y="469" width="0.0776%" height="15" fill="rgb(241,136,10)" fg:x="392" fg:w="1"/><text x="30.6848%" y="479.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::init (8 samples, 0.62%)</title><rect x="30.0466%" y="677" width="0.6211%" height="15" fill="rgb(208,32,45)" fg:x="387" fg:w="8"/><text x="30.2966%" y="687.50"></text></g><g><title>wgpu_hal::gles::egl::Inner::create (3 samples, 0.23%)</title><rect x="30.4348%" y="661" width="0.2329%" height="15" fill="rgb(207,135,9)" fg:x="392" fg:w="3"/><text x="30.6848%" y="671.50"></text></g><g><title>khronos_egl::egl1_0::&lt;impl khronos_egl::Instance&lt;T&gt;&gt;::initialize (2 samples, 0.16%)</title><rect x="30.5124%" y="645" width="0.1553%" height="15" fill="rgb(206,86,44)" fg:x="393" fg:w="2"/><text x="30.7624%" y="655.50"></text></g><g><title>&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt; as khronos_egl::api::EGL1_0&gt;::eglInitialize (2 samples, 0.16%)</title><rect x="30.5124%" y="629" width="0.1553%" height="15" fill="rgb(245,177,15)" fg:x="393" fg:w="2"/><text x="30.7624%" y="639.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="613" width="0.1553%" height="15" fill="rgb(206,64,50)" fg:x="393" fg:w="2"/><text x="30.7624%" y="623.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="597" width="0.1553%" height="15" fill="rgb(234,36,40)" fg:x="393" fg:w="2"/><text x="30.7624%" y="607.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="581" width="0.1553%" height="15" fill="rgb(213,64,8)" fg:x="393" fg:w="2"/><text x="30.7624%" y="591.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="565" width="0.1553%" height="15" fill="rgb(210,75,36)" fg:x="393" fg:w="2"/><text x="30.7624%" y="575.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="549" width="0.1553%" height="15" fill="rgb(229,88,21)" fg:x="393" fg:w="2"/><text x="30.7624%" y="559.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="533" width="0.1553%" height="15" fill="rgb(252,204,47)" fg:x="393" fg:w="2"/><text x="30.7624%" y="543.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="517" width="0.1553%" height="15" fill="rgb(208,77,27)" fg:x="393" fg:w="2"/><text x="30.7624%" y="527.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="501" width="0.1553%" height="15" fill="rgb(221,76,26)" fg:x="393" fg:w="2"/><text x="30.7624%" y="511.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="485" width="0.1553%" height="15" fill="rgb(225,139,18)" fg:x="393" fg:w="2"/><text x="30.7624%" y="495.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="469" width="0.1553%" height="15" fill="rgb(230,137,11)" fg:x="393" fg:w="2"/><text x="30.7624%" y="479.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="453" width="0.1553%" height="15" fill="rgb(212,28,1)" fg:x="393" fg:w="2"/><text x="30.7624%" y="463.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.5124%" y="437" width="0.1553%" height="15" fill="rgb(248,164,17)" fg:x="393" fg:w="2"/><text x="30.7624%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.6677%" y="469" width="0.0776%" height="15" fill="rgb(222,171,42)" fg:x="395" fg:w="1"/><text x="30.9177%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="30.6677%" y="453" width="0.0776%" height="15" fill="rgb(243,84,45)" fg:x="395" fg:w="1"/><text x="30.9177%" y="463.50"></text></g><g><title>dlopen (1 samples, 0.08%)</title><rect x="30.6677%" y="437" width="0.0776%" height="15" fill="rgb(252,49,23)" fg:x="395" fg:w="1"/><text x="30.9177%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="30.6677%" y="421" width="0.0776%" height="15" fill="rgb(215,19,7)" fg:x="395" fg:w="1"/><text x="30.9177%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.6677%" y="405" width="0.0776%" height="15" fill="rgb(238,81,41)" fg:x="395" fg:w="1"/><text x="30.9177%" y="415.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="30.6677%" y="389" width="0.0776%" height="15" fill="rgb(210,199,37)" fg:x="395" fg:w="1"/><text x="30.9177%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="30.6677%" y="373" width="0.0776%" height="15" fill="rgb(244,192,49)" fg:x="395" fg:w="1"/><text x="30.9177%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.6677%" y="357" width="0.0776%" height="15" fill="rgb(226,211,11)" fg:x="395" fg:w="1"/><text x="30.9177%" y="367.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="30.6677%" y="341" width="0.0776%" height="15" fill="rgb(236,162,54)" fg:x="395" fg:w="1"/><text x="30.9177%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.6677%" y="325" width="0.0776%" height="15" fill="rgb(220,229,9)" fg:x="395" fg:w="1"/><text x="30.9177%" y="335.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="30.6677%" y="309" width="0.0776%" height="15" fill="rgb(250,87,22)" fg:x="395" fg:w="1"/><text x="30.9177%" y="319.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.6677%" y="293" width="0.0776%" height="15" fill="rgb(239,43,17)" fg:x="395" fg:w="1"/><text x="30.9177%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.6677%" y="277" width="0.0776%" height="15" fill="rgb(231,177,25)" fg:x="395" fg:w="1"/><text x="30.9177%" y="287.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="30.6677%" y="261" width="0.0776%" height="15" fill="rgb(219,179,1)" fg:x="395" fg:w="1"/><text x="30.9177%" y="271.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.78%)</title><rect x="30.0466%" y="789" width="0.7764%" height="15" fill="rgb(238,219,53)" fg:x="387" fg:w="10"/><text x="30.2966%" y="799.50"></text></g><g><title>framer::renderer::State::new::{{closure}} (10 samples, 0.78%)</title><rect x="30.0466%" y="773" width="0.7764%" height="15" fill="rgb(232,167,36)" fg:x="387" fg:w="10"/><text x="30.2966%" y="783.50"></text></g><g><title>wgpu::Instance::new (10 samples, 0.78%)</title><rect x="30.0466%" y="757" width="0.7764%" height="15" fill="rgb(244,19,51)" fg:x="387" fg:w="10"/><text x="30.2966%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (10 samples, 0.78%)</title><rect x="30.0466%" y="741" width="0.7764%" height="15" fill="rgb(224,6,22)" fg:x="387" fg:w="10"/><text x="30.2966%" y="751.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (10 samples, 0.78%)</title><rect x="30.0466%" y="725" width="0.7764%" height="15" fill="rgb(224,145,5)" fg:x="387" fg:w="10"/><text x="30.2966%" y="735.50"></text></g><g><title>wgpu_core::instance::Instance::new (10 samples, 0.78%)</title><rect x="30.0466%" y="709" width="0.7764%" height="15" fill="rgb(234,130,49)" fg:x="387" fg:w="10"/><text x="30.2966%" y="719.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (10 samples, 0.78%)</title><rect x="30.0466%" y="693" width="0.7764%" height="15" fill="rgb(254,6,2)" fg:x="387" fg:w="10"/><text x="30.2966%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (2 samples, 0.16%)</title><rect x="30.6677%" y="677" width="0.1553%" height="15" fill="rgb(208,96,46)" fg:x="395" fg:w="2"/><text x="30.9177%" y="687.50"></text></g><g><title>ash::entry::Entry::create_instance (2 samples, 0.16%)</title><rect x="30.6677%" y="661" width="0.1553%" height="15" fill="rgb(239,3,39)" fg:x="395" fg:w="2"/><text x="30.9177%" y="671.50"></text></g><g><title>vkCreateInstance (2 samples, 0.16%)</title><rect x="30.6677%" y="645" width="0.1553%" height="15" fill="rgb(233,210,1)" fg:x="395" fg:w="2"/><text x="30.9177%" y="655.50"></text></g><g><title>[libvulkan.so.1.3.245] (2 samples, 0.16%)</title><rect x="30.6677%" y="629" width="0.1553%" height="15" fill="rgb(244,137,37)" fg:x="395" fg:w="2"/><text x="30.9177%" y="639.50"></text></g><g><title>[libvulkan.so.1.3.245] (2 samples, 0.16%)</title><rect x="30.6677%" y="613" width="0.1553%" height="15" fill="rgb(240,136,2)" fg:x="395" fg:w="2"/><text x="30.9177%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.6677%" y="597" width="0.1553%" height="15" fill="rgb(239,18,37)" fg:x="395" fg:w="2"/><text x="30.9177%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.6677%" y="581" width="0.1553%" height="15" fill="rgb(218,185,22)" fg:x="395" fg:w="2"/><text x="30.9177%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.6677%" y="565" width="0.1553%" height="15" fill="rgb(225,218,4)" fg:x="395" fg:w="2"/><text x="30.9177%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.6677%" y="549" width="0.1553%" height="15" fill="rgb(230,182,32)" fg:x="395" fg:w="2"/><text x="30.9177%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.6677%" y="533" width="0.1553%" height="15" fill="rgb(242,56,43)" fg:x="395" fg:w="2"/><text x="30.9177%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.6677%" y="517" width="0.1553%" height="15" fill="rgb(233,99,24)" fg:x="395" fg:w="2"/><text x="30.9177%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.6677%" y="501" width="0.1553%" height="15" fill="rgb(234,209,42)" fg:x="395" fg:w="2"/><text x="30.9177%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="30.6677%" y="485" width="0.1553%" height="15" fill="rgb(227,7,12)" fg:x="395" fg:w="2"/><text x="30.9177%" y="495.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.08%)</title><rect x="30.7453%" y="469" width="0.0776%" height="15" fill="rgb(245,203,43)" fg:x="396" fg:w="1"/><text x="30.9953%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="30.7453%" y="453" width="0.0776%" height="15" fill="rgb(238,205,33)" fg:x="396" fg:w="1"/><text x="30.9953%" y="463.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (1 samples, 0.08%)</title><rect x="30.8230%" y="565" width="0.0776%" height="15" fill="rgb(231,56,7)" fg:x="397" fg:w="1"/><text x="31.0730%" y="575.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (1 samples, 0.08%)</title><rect x="30.8230%" y="549" width="0.0776%" height="15" fill="rgb(244,186,29)" fg:x="397" fg:w="1"/><text x="31.0730%" y="559.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (1 samples, 0.08%)</title><rect x="30.8230%" y="533" width="0.0776%" height="15" fill="rgb(234,111,31)" fg:x="397" fg:w="1"/><text x="31.0730%" y="543.50"></text></g><g><title>wgpu_core::track::texture::insert (1 samples, 0.08%)</title><rect x="30.8230%" y="517" width="0.0776%" height="15" fill="rgb(241,149,10)" fg:x="397" fg:w="1"/><text x="31.0730%" y="527.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (1 samples, 0.08%)</title><rect x="30.9006%" y="565" width="0.0776%" height="15" fill="rgb(249,206,44)" fg:x="398" fg:w="1"/><text x="31.1506%" y="575.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (1 samples, 0.08%)</title><rect x="30.9006%" y="549" width="0.0776%" height="15" fill="rgb(251,153,30)" fg:x="398" fg:w="1"/><text x="31.1506%" y="559.50"></text></g><g><title>wgpu_core::track::texture::insert_or_merge (1 samples, 0.08%)</title><rect x="30.9006%" y="533" width="0.0776%" height="15" fill="rgb(239,152,38)" fg:x="398" fg:w="1"/><text x="31.1506%" y="543.50"></text></g><g><title>wgpu_core::track::texture::insert (1 samples, 0.08%)</title><rect x="30.9006%" y="517" width="0.0776%" height="15" fill="rgb(249,139,47)" fg:x="398" fg:w="1"/><text x="31.1506%" y="527.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadataProvider&lt;A&gt;::get_own (1 samples, 0.08%)</title><rect x="30.9006%" y="501" width="0.0776%" height="15" fill="rgb(244,64,35)" fg:x="398" fg:w="1"/><text x="31.1506%" y="511.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (1 samples, 0.08%)</title><rect x="30.9006%" y="485" width="0.0776%" height="15" fill="rgb(216,46,15)" fg:x="398" fg:w="1"/><text x="31.1506%" y="495.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.08%)</title><rect x="30.9006%" y="469" width="0.0776%" height="15" fill="rgb(250,74,19)" fg:x="398" fg:w="1"/><text x="31.1506%" y="479.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9006%" y="453" width="0.0776%" height="15" fill="rgb(249,42,33)" fg:x="398" fg:w="1"/><text x="31.1506%" y="463.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (2 samples, 0.16%)</title><rect x="31.0559%" y="549" width="0.1553%" height="15" fill="rgb(242,149,17)" fg:x="400" fg:w="2"/><text x="31.3059%" y="559.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::set_size (2 samples, 0.16%)</title><rect x="31.0559%" y="533" width="0.1553%" height="15" fill="rgb(244,29,21)" fg:x="400" fg:w="2"/><text x="31.3059%" y="543.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (2 samples, 0.16%)</title><rect x="31.0559%" y="517" width="0.1553%" height="15" fill="rgb(220,130,37)" fg:x="400" fg:w="2"/><text x="31.3059%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.16%)</title><rect x="31.0559%" y="501" width="0.1553%" height="15" fill="rgb(211,67,2)" fg:x="400" fg:w="2"/><text x="31.3059%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.16%)</title><rect x="31.0559%" y="485" width="0.1553%" height="15" fill="rgb(235,68,52)" fg:x="400" fg:w="2"/><text x="31.3059%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="31.0559%" y="469" width="0.1553%" height="15" fill="rgb(246,142,3)" fg:x="400" fg:w="2"/><text x="31.3059%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="31.0559%" y="453" width="0.1553%" height="15" fill="rgb(241,25,7)" fg:x="400" fg:w="2"/><text x="31.3059%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="31.0559%" y="437" width="0.1553%" height="15" fill="rgb(242,119,39)" fg:x="400" fg:w="2"/><text x="31.3059%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="31.0559%" y="421" width="0.1553%" height="15" fill="rgb(241,98,45)" fg:x="400" fg:w="2"/><text x="31.3059%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="31.0559%" y="405" width="0.1553%" height="15" fill="rgb(254,28,30)" fg:x="400" fg:w="2"/><text x="31.3059%" y="415.50"></text></g><g><title>malloc (2 samples, 0.16%)</title><rect x="31.0559%" y="389" width="0.1553%" height="15" fill="rgb(241,142,54)" fg:x="400" fg:w="2"/><text x="31.3059%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="31.0559%" y="373" width="0.1553%" height="15" fill="rgb(222,85,15)" fg:x="400" fg:w="2"/><text x="31.3059%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (7 samples, 0.54%)</title><rect x="30.8230%" y="661" width="0.5435%" height="15" fill="rgb(210,85,47)" fg:x="397" fg:w="7"/><text x="31.0730%" y="671.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (7 samples, 0.54%)</title><rect x="30.8230%" y="645" width="0.5435%" height="15" fill="rgb(224,206,25)" fg:x="397" fg:w="7"/><text x="31.0730%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (7 samples, 0.54%)</title><rect x="30.8230%" y="629" width="0.5435%" height="15" fill="rgb(243,201,19)" fg:x="397" fg:w="7"/><text x="31.0730%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (7 samples, 0.54%)</title><rect x="30.8230%" y="613" width="0.5435%" height="15" fill="rgb(236,59,4)" fg:x="397" fg:w="7"/><text x="31.0730%" y="623.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (7 samples, 0.54%)</title><rect x="30.8230%" y="597" width="0.5435%" height="15" fill="rgb(254,179,45)" fg:x="397" fg:w="7"/><text x="31.0730%" y="607.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (7 samples, 0.54%)</title><rect x="30.8230%" y="581" width="0.5435%" height="15" fill="rgb(226,14,10)" fg:x="397" fg:w="7"/><text x="31.0730%" y="591.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (5 samples, 0.39%)</title><rect x="30.9783%" y="565" width="0.3882%" height="15" fill="rgb(244,27,41)" fg:x="399" fg:w="5"/><text x="31.2283%" y="575.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (2 samples, 0.16%)</title><rect x="31.2112%" y="549" width="0.1553%" height="15" fill="rgb(235,35,32)" fg:x="402" fg:w="2"/><text x="31.4612%" y="559.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::allow_index (2 samples, 0.16%)</title><rect x="31.2112%" y="533" width="0.1553%" height="15" fill="rgb(218,68,31)" fg:x="402" fg:w="2"/><text x="31.4612%" y="543.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::set_size (1 samples, 0.08%)</title><rect x="31.2888%" y="517" width="0.0776%" height="15" fill="rgb(207,120,37)" fg:x="403" fg:w="1"/><text x="31.5388%" y="527.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (1 samples, 0.08%)</title><rect x="31.2888%" y="501" width="0.0776%" height="15" fill="rgb(227,98,0)" fg:x="403" fg:w="1"/><text x="31.5388%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.08%)</title><rect x="31.2888%" y="485" width="0.0776%" height="15" fill="rgb(207,7,3)" fg:x="403" fg:w="1"/><text x="31.5388%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.08%)</title><rect x="31.2888%" y="469" width="0.0776%" height="15" fill="rgb(206,98,19)" fg:x="403" fg:w="1"/><text x="31.5388%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.2888%" y="453" width="0.0776%" height="15" fill="rgb(217,5,26)" fg:x="403" fg:w="1"/><text x="31.5388%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.2888%" y="437" width="0.0776%" height="15" fill="rgb(235,190,38)" fg:x="403" fg:w="1"/><text x="31.5388%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.2888%" y="421" width="0.0776%" height="15" fill="rgb(247,86,24)" fg:x="403" fg:w="1"/><text x="31.5388%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="31.2888%" y="405" width="0.0776%" height="15" fill="rgb(205,101,16)" fg:x="403" fg:w="1"/><text x="31.5388%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.08%)</title><rect x="31.2888%" y="389" width="0.0776%" height="15" fill="rgb(246,168,33)" fg:x="403" fg:w="1"/><text x="31.5388%" y="399.50"></text></g><g><title>framer::renderer::text::TextState::create_buffers (2 samples, 0.16%)</title><rect x="31.3665%" y="661" width="0.1553%" height="15" fill="rgb(231,114,1)" fg:x="404" fg:w="2"/><text x="31.6165%" y="671.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2 samples, 0.16%)</title><rect x="31.3665%" y="645" width="0.1553%" height="15" fill="rgb(207,184,53)" fg:x="404" fg:w="2"/><text x="31.6165%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (2 samples, 0.16%)</title><rect x="31.3665%" y="629" width="0.1553%" height="15" fill="rgb(224,95,51)" fg:x="404" fg:w="2"/><text x="31.6165%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_unmap (2 samples, 0.16%)</title><rect x="31.3665%" y="613" width="0.1553%" height="15" fill="rgb(212,188,45)" fg:x="404" fg:w="2"/><text x="31.6165%" y="623.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (2 samples, 0.16%)</title><rect x="31.3665%" y="597" width="0.1553%" height="15" fill="rgb(223,154,38)" fg:x="404" fg:w="2"/><text x="31.6165%" y="607.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (2 samples, 0.16%)</title><rect x="31.3665%" y="581" width="0.1553%" height="15" fill="rgb(251,22,52)" fg:x="404" fg:w="2"/><text x="31.6165%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (2 samples, 0.16%)</title><rect x="31.3665%" y="565" width="0.1553%" height="15" fill="rgb(229,209,22)" fg:x="404" fg:w="2"/><text x="31.6165%" y="575.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (2 samples, 0.16%)</title><rect x="31.3665%" y="549" width="0.1553%" height="15" fill="rgb(234,138,34)" fg:x="404" fg:w="2"/><text x="31.6165%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="31.3665%" y="533" width="0.1553%" height="15" fill="rgb(212,95,11)" fg:x="404" fg:w="2"/><text x="31.6165%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="31.3665%" y="517" width="0.1553%" height="15" fill="rgb(240,179,47)" fg:x="404" fg:w="2"/><text x="31.6165%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="31.3665%" y="501" width="0.1553%" height="15" fill="rgb(240,163,11)" fg:x="404" fg:w="2"/><text x="31.6165%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="31.4441%" y="485" width="0.0776%" height="15" fill="rgb(236,37,12)" fg:x="405" fg:w="1"/><text x="31.6941%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="31.4441%" y="469" width="0.0776%" height="15" fill="rgb(232,164,16)" fg:x="405" fg:w="1"/><text x="31.6941%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="31.4441%" y="453" width="0.0776%" height="15" fill="rgb(244,205,15)" fg:x="405" fg:w="1"/><text x="31.6941%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="31.4441%" y="437" width="0.0776%" height="15" fill="rgb(223,117,47)" fg:x="405" fg:w="1"/><text x="31.6941%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="31.4441%" y="421" width="0.0776%" height="15" fill="rgb(244,107,35)" fg:x="405" fg:w="1"/><text x="31.6941%" y="431.50"></text></g><g><title>wgpu::Device::create_command_encoder (1 samples, 0.08%)</title><rect x="31.5217%" y="661" width="0.0776%" height="15" fill="rgb(205,140,8)" fg:x="406" fg:w="1"/><text x="31.7717%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (1 samples, 0.08%)</title><rect x="31.5217%" y="645" width="0.0776%" height="15" fill="rgb(228,84,46)" fg:x="406" fg:w="1"/><text x="31.7717%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_command_encoder (1 samples, 0.08%)</title><rect x="31.5217%" y="629" width="0.0776%" height="15" fill="rgb(254,188,9)" fg:x="406" fg:w="1"/><text x="31.7717%" y="639.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (1 samples, 0.08%)</title><rect x="31.5217%" y="613" width="0.0776%" height="15" fill="rgb(206,112,54)" fg:x="406" fg:w="1"/><text x="31.7717%" y="623.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::new (1 samples, 0.08%)</title><rect x="31.5217%" y="597" width="0.0776%" height="15" fill="rgb(216,84,49)" fg:x="406" fg:w="1"/><text x="31.7717%" y="607.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::new (1 samples, 0.08%)</title><rect x="31.5217%" y="581" width="0.0776%" height="15" fill="rgb(214,194,35)" fg:x="406" fg:w="1"/><text x="31.7717%" y="591.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::new (1 samples, 0.08%)</title><rect x="31.5217%" y="565" width="0.0776%" height="15" fill="rgb(249,28,3)" fg:x="406" fg:w="1"/><text x="31.7717%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="31.5217%" y="549" width="0.0776%" height="15" fill="rgb(222,56,52)" fg:x="406" fg:w="1"/><text x="31.7717%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="32.2981%" y="405" width="0.0776%" height="15" fill="rgb(245,217,50)" fg:x="416" fg:w="1"/><text x="32.5481%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="32.3758%" y="405" width="0.3882%" height="15" fill="rgb(213,201,24)" fg:x="417" fg:w="5"/><text x="32.6258%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="32.6087%" y="389" width="0.1553%" height="15" fill="rgb(248,116,28)" fg:x="420" fg:w="2"/><text x="32.8587%" y="399.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (16 samples, 1.24%)</title><rect x="31.5994%" y="597" width="1.2422%" height="15" fill="rgb(219,72,43)" fg:x="407" fg:w="16"/><text x="31.8494%" y="607.50"></text></g><g><title>ash::device::Device::queue_submit (16 samples, 1.24%)</title><rect x="31.5994%" y="581" width="1.2422%" height="15" fill="rgb(209,138,14)" fg:x="407" fg:w="16"/><text x="31.8494%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (16 samples, 1.24%)</title><rect x="31.5994%" y="565" width="1.2422%" height="15" fill="rgb(222,18,33)" fg:x="407" fg:w="16"/><text x="31.8494%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (16 samples, 1.24%)</title><rect x="31.5994%" y="549" width="1.2422%" height="15" fill="rgb(213,199,7)" fg:x="407" fg:w="16"/><text x="31.8494%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (16 samples, 1.24%)</title><rect x="31.5994%" y="533" width="1.2422%" height="15" fill="rgb(250,110,10)" fg:x="407" fg:w="16"/><text x="31.8494%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (14 samples, 1.09%)</title><rect x="31.7547%" y="517" width="1.0870%" height="15" fill="rgb(248,123,6)" fg:x="409" fg:w="14"/><text x="32.0047%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (13 samples, 1.01%)</title><rect x="31.8323%" y="501" width="1.0093%" height="15" fill="rgb(206,91,31)" fg:x="410" fg:w="13"/><text x="32.0823%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (11 samples, 0.85%)</title><rect x="31.9876%" y="485" width="0.8540%" height="15" fill="rgb(211,154,13)" fg:x="412" fg:w="11"/><text x="32.2376%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (11 samples, 0.85%)</title><rect x="31.9876%" y="469" width="0.8540%" height="15" fill="rgb(225,148,7)" fg:x="412" fg:w="11"/><text x="32.2376%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (10 samples, 0.78%)</title><rect x="32.0652%" y="453" width="0.7764%" height="15" fill="rgb(220,160,43)" fg:x="413" fg:w="10"/><text x="32.3152%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (10 samples, 0.78%)</title><rect x="32.0652%" y="437" width="0.7764%" height="15" fill="rgb(213,52,39)" fg:x="413" fg:w="10"/><text x="32.3152%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (8 samples, 0.62%)</title><rect x="32.2205%" y="421" width="0.6211%" height="15" fill="rgb(243,137,7)" fg:x="415" fg:w="8"/><text x="32.4705%" y="431.50"></text></g><g><title>pthread_equal (1 samples, 0.08%)</title><rect x="32.7640%" y="405" width="0.0776%" height="15" fill="rgb(230,79,13)" fg:x="422" fg:w="1"/><text x="33.0140%" y="415.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (1 samples, 0.08%)</title><rect x="32.8416%" y="581" width="0.0776%" height="15" fill="rgb(247,105,23)" fg:x="423" fg:w="1"/><text x="33.0916%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (1 samples, 0.08%)</title><rect x="32.8416%" y="565" width="0.0776%" height="15" fill="rgb(223,179,41)" fg:x="423" fg:w="1"/><text x="33.0916%" y="575.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (1 samples, 0.08%)</title><rect x="32.8416%" y="549" width="0.0776%" height="15" fill="rgb(218,9,34)" fg:x="423" fg:w="1"/><text x="33.0916%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="32.8416%" y="533" width="0.0776%" height="15" fill="rgb(222,106,8)" fg:x="423" fg:w="1"/><text x="33.0916%" y="543.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (2 samples, 0.16%)</title><rect x="32.8416%" y="597" width="0.1553%" height="15" fill="rgb(211,220,0)" fg:x="423" fg:w="2"/><text x="33.0916%" y="607.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (1 samples, 0.08%)</title><rect x="32.9193%" y="581" width="0.0776%" height="15" fill="rgb(229,52,16)" fg:x="424" fg:w="1"/><text x="33.1693%" y="591.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (1 samples, 0.08%)</title><rect x="32.9193%" y="565" width="0.0776%" height="15" fill="rgb(212,155,18)" fg:x="424" fg:w="1"/><text x="33.1693%" y="575.50"></text></g><g><title>wgpu_core::track::texture::update (1 samples, 0.08%)</title><rect x="32.9193%" y="549" width="0.0776%" height="15" fill="rgb(242,21,14)" fg:x="424" fg:w="1"/><text x="33.1693%" y="559.50"></text></g><g><title>&lt;wgpu_hal::TextureUses as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="32.9193%" y="533" width="0.0776%" height="15" fill="rgb(222,19,48)" fg:x="424" fg:w="1"/><text x="33.1693%" y="543.50"></text></g><g><title>&lt;wgpu_hal::_::InternalBitFlags as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="32.9193%" y="517" width="0.0776%" height="15" fill="rgb(232,45,27)" fg:x="424" fg:w="1"/><text x="33.1693%" y="527.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::extend (1 samples, 0.08%)</title><rect x="33.0745%" y="565" width="0.0776%" height="15" fill="rgb(249,103,42)" fg:x="426" fg:w="1"/><text x="33.3245%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="33.0745%" y="549" width="0.0776%" height="15" fill="rgb(246,81,33)" fg:x="426" fg:w="1"/><text x="33.3245%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.08%)</title><rect x="33.0745%" y="533" width="0.0776%" height="15" fill="rgb(252,33,42)" fg:x="426" fg:w="1"/><text x="33.3245%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="33.0745%" y="517" width="0.0776%" height="15" fill="rgb(209,212,41)" fg:x="426" fg:w="1"/><text x="33.3245%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.08%)</title><rect x="33.0745%" y="501" width="0.0776%" height="15" fill="rgb(207,154,6)" fg:x="426" fg:w="1"/><text x="33.3245%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="33.1522%" y="533" width="0.0776%" height="15" fill="rgb(223,64,47)" fg:x="427" fg:w="1"/><text x="33.4022%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="33.1522%" y="517" width="0.0776%" height="15" fill="rgb(211,161,38)" fg:x="427" fg:w="1"/><text x="33.4022%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.08%)</title><rect x="33.1522%" y="501" width="0.0776%" height="15" fill="rgb(219,138,40)" fg:x="427" fg:w="1"/><text x="33.4022%" y="511.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="33.1522%" y="485" width="0.0776%" height="15" fill="rgb(241,228,46)" fg:x="427" fg:w="1"/><text x="33.4022%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="33.1522%" y="469" width="0.0776%" height="15" fill="rgb(223,209,38)" fg:x="427" fg:w="1"/><text x="33.4022%" y="479.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (10 samples, 0.78%)</title><rect x="32.9969%" y="581" width="0.7764%" height="15" fill="rgb(236,164,45)" fg:x="425" fg:w="10"/><text x="33.2469%" y="591.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (8 samples, 0.62%)</title><rect x="33.1522%" y="565" width="0.6211%" height="15" fill="rgb(231,15,5)" fg:x="427" fg:w="8"/><text x="33.4022%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (8 samples, 0.62%)</title><rect x="33.1522%" y="549" width="0.6211%" height="15" fill="rgb(252,35,15)" fg:x="427" fg:w="8"/><text x="33.4022%" y="559.50"></text></g><g><title>ash::device::Device::reset_command_pool (7 samples, 0.54%)</title><rect x="33.2298%" y="533" width="0.5435%" height="15" fill="rgb(248,181,18)" fg:x="428" fg:w="7"/><text x="33.4798%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (7 samples, 0.54%)</title><rect x="33.2298%" y="517" width="0.5435%" height="15" fill="rgb(233,39,42)" fg:x="428" fg:w="7"/><text x="33.4798%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (7 samples, 0.54%)</title><rect x="33.2298%" y="501" width="0.5435%" height="15" fill="rgb(238,110,33)" fg:x="428" fg:w="7"/><text x="33.4798%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="33.5404%" y="485" width="0.2329%" height="15" fill="rgb(233,195,10)" fg:x="432" fg:w="3"/><text x="33.7904%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="33.6180%" y="469" width="0.1553%" height="15" fill="rgb(254,105,3)" fg:x="433" fg:w="2"/><text x="33.8680%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="33.8509%" y="565" width="0.0776%" height="15" fill="rgb(221,225,9)" fg:x="436" fg:w="1"/><text x="34.1009%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.08%)</title><rect x="33.8509%" y="549" width="0.0776%" height="15" fill="rgb(224,227,45)" fg:x="436" fg:w="1"/><text x="34.1009%" y="559.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.9286%" y="565" width="0.0776%" height="15" fill="rgb(229,198,43)" fg:x="437" fg:w="1"/><text x="34.1786%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.9286%" y="549" width="0.0776%" height="15" fill="rgb(206,209,35)" fg:x="437" fg:w="1"/><text x="34.1786%" y="559.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (14 samples, 1.09%)</title><rect x="32.9969%" y="597" width="1.0870%" height="15" fill="rgb(245,195,53)" fg:x="425" fg:w="14"/><text x="33.2469%" y="607.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (4 samples, 0.31%)</title><rect x="33.7733%" y="581" width="0.3106%" height="15" fill="rgb(240,92,26)" fg:x="435" fg:w="4"/><text x="34.0233%" y="591.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (1 samples, 0.08%)</title><rect x="34.0062%" y="565" width="0.0776%" height="15" fill="rgb(207,40,23)" fg:x="438" fg:w="1"/><text x="34.2562%" y="575.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::free (1 samples, 0.08%)</title><rect x="34.0062%" y="549" width="0.0776%" height="15" fill="rgb(223,111,35)" fg:x="438" fg:w="1"/><text x="34.2562%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt;&gt; (1 samples, 0.08%)</title><rect x="34.0062%" y="533" width="0.0776%" height="15" fill="rgb(229,147,28)" fg:x="438" fg:w="1"/><text x="34.2562%" y="543.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.0062%" y="517" width="0.0776%" height="15" fill="rgb(211,29,28)" fg:x="438" fg:w="1"/><text x="34.2562%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.08%)</title><rect x="34.0062%" y="501" width="0.0776%" height="15" fill="rgb(228,72,33)" fg:x="438" fg:w="1"/><text x="34.2562%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.08%)</title><rect x="34.0062%" y="485" width="0.0776%" height="15" fill="rgb(205,214,31)" fg:x="438" fg:w="1"/><text x="34.2562%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.08%)</title><rect x="34.0062%" y="469" width="0.0776%" height="15" fill="rgb(224,111,15)" fg:x="438" fg:w="1"/><text x="34.2562%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadataProvider&lt;wgpu_hal::vulkan::Api&gt;&gt; (1 samples, 0.08%)</title><rect x="34.0839%" y="565" width="0.0776%" height="15" fill="rgb(253,21,26)" fg:x="439" fg:w="1"/><text x="34.3339%" y="575.50"></text></g><g><title>wgpu::Queue::submit (35 samples, 2.72%)</title><rect x="31.5994%" y="661" width="2.7174%" height="15" fill="rgb(245,139,43)" fg:x="407" fg:w="35"/><text x="31.8494%" y="671.50">wg..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (35 samples, 2.72%)</title><rect x="31.5994%" y="645" width="2.7174%" height="15" fill="rgb(252,170,7)" fg:x="407" fg:w="35"/><text x="31.8494%" y="655.50">&lt;T..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (35 samples, 2.72%)</title><rect x="31.5994%" y="629" width="2.7174%" height="15" fill="rgb(231,118,14)" fg:x="407" fg:w="35"/><text x="31.8494%" y="639.50">&lt;w..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (35 samples, 2.72%)</title><rect x="31.5994%" y="613" width="2.7174%" height="15" fill="rgb(238,83,0)" fg:x="407" fg:w="35"/><text x="31.8494%" y="623.50">wg..</text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (3 samples, 0.23%)</title><rect x="34.0839%" y="597" width="0.2329%" height="15" fill="rgb(221,39,39)" fg:x="439" fg:w="3"/><text x="34.3339%" y="607.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (3 samples, 0.23%)</title><rect x="34.0839%" y="581" width="0.2329%" height="15" fill="rgb(222,119,46)" fg:x="439" fg:w="3"/><text x="34.3339%" y="591.50"></text></g><g><title>wgpu_core::track::texture::update (2 samples, 0.16%)</title><rect x="34.1615%" y="565" width="0.1553%" height="15" fill="rgb(222,165,49)" fg:x="440" fg:w="2"/><text x="34.4115%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (7 samples, 0.54%)</title><rect x="38.6646%" y="421" width="0.5435%" height="15" fill="rgb(219,113,52)" fg:x="498" fg:w="7"/><text x="38.9146%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (35 samples, 2.72%)</title><rect x="39.4410%" y="405" width="2.7174%" height="15" fill="rgb(214,7,15)" fg:x="508" fg:w="35"/><text x="39.6910%" y="415.50">[l..</text></g><g><title>__sched_yield (47 samples, 3.65%)</title><rect x="42.1584%" y="405" width="3.6491%" height="15" fill="rgb(235,32,4)" fg:x="543" fg:w="47"/><text x="42.4084%" y="415.50">__sc..</text></g><g><title>[libGLX_nvidia.so.530.41.03] (151 samples, 11.72%)</title><rect x="34.3168%" y="453" width="11.7236%" height="15" fill="rgb(238,90,54)" fg:x="442" fg:w="151"/><text x="34.5668%" y="463.50">[libGLX_nvidia.so..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (151 samples, 11.72%)</title><rect x="34.3168%" y="437" width="11.7236%" height="15" fill="rgb(213,208,19)" fg:x="442" fg:w="151"/><text x="34.5668%" y="447.50">[libnvidia-glcore..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (88 samples, 6.83%)</title><rect x="39.2081%" y="421" width="6.8323%" height="15" fill="rgb(233,156,4)" fg:x="505" fg:w="88"/><text x="39.4581%" y="431.50">[libnvidi..</text></g><g><title>sched_yield@plt (3 samples, 0.23%)</title><rect x="45.8075%" y="405" width="0.2329%" height="15" fill="rgb(207,194,5)" fg:x="590" fg:w="3"/><text x="46.0575%" y="415.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="46.0404%" y="437" width="0.0776%" height="15" fill="rgb(206,111,30)" fg:x="593" fg:w="1"/><text x="46.2904%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="46.0404%" y="421" width="0.0776%" height="15" fill="rgb(243,70,54)" fg:x="593" fg:w="1"/><text x="46.2904%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="46.0404%" y="405" width="0.0776%" height="15" fill="rgb(242,28,8)" fg:x="593" fg:w="1"/><text x="46.2904%" y="415.50"></text></g><g><title>__sched_yield (1 samples, 0.08%)</title><rect x="46.0404%" y="389" width="0.0776%" height="15" fill="rgb(219,106,18)" fg:x="593" fg:w="1"/><text x="46.2904%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="46.1180%" y="437" width="0.1553%" height="15" fill="rgb(244,222,10)" fg:x="594" fg:w="2"/><text x="46.3680%" y="447.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="46.3509%" y="357" width="0.0776%" height="15" fill="rgb(236,179,52)" fg:x="597" fg:w="1"/><text x="46.6009%" y="367.50"></text></g><g><title>__poll (1 samples, 0.08%)</title><rect x="46.3509%" y="341" width="0.0776%" height="15" fill="rgb(213,23,39)" fg:x="597" fg:w="1"/><text x="46.6009%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="46.3509%" y="325" width="0.0776%" height="15" fill="rgb(238,48,10)" fg:x="597" fg:w="1"/><text x="46.6009%" y="335.50"></text></g><g><title>_XReply (3 samples, 0.23%)</title><rect x="46.4286%" y="357" width="0.2329%" height="15" fill="rgb(251,196,23)" fg:x="598" fg:w="3"/><text x="46.6786%" y="367.50"></text></g><g><title>xcb_wait_for_reply64 (3 samples, 0.23%)</title><rect x="46.4286%" y="341" width="0.2329%" height="15" fill="rgb(250,152,24)" fg:x="598" fg:w="3"/><text x="46.6786%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.16%)</title><rect x="46.5062%" y="325" width="0.1553%" height="15" fill="rgb(209,150,17)" fg:x="599" fg:w="2"/><text x="46.7562%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="46.5839%" y="309" width="0.0776%" height="15" fill="rgb(234,202,34)" fg:x="600" fg:w="1"/><text x="46.8339%" y="319.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="46.5839%" y="293" width="0.0776%" height="15" fill="rgb(253,148,53)" fg:x="600" fg:w="1"/><text x="46.8339%" y="303.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="46.5839%" y="277" width="0.0776%" height="15" fill="rgb(218,129,16)" fg:x="600" fg:w="1"/><text x="46.8339%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="46.5839%" y="261" width="0.0776%" height="15" fill="rgb(216,85,19)" fg:x="600" fg:w="1"/><text x="46.8339%" y="271.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (5 samples, 0.39%)</title><rect x="46.3509%" y="421" width="0.3882%" height="15" fill="rgb(235,228,7)" fg:x="597" fg:w="5"/><text x="46.6009%" y="431.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (5 samples, 0.39%)</title><rect x="46.3509%" y="405" width="0.3882%" height="15" fill="rgb(245,175,0)" fg:x="597" fg:w="5"/><text x="46.6009%" y="415.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (5 samples, 0.39%)</title><rect x="46.3509%" y="389" width="0.3882%" height="15" fill="rgb(208,168,36)" fg:x="597" fg:w="5"/><text x="46.6009%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (5 samples, 0.39%)</title><rect x="46.3509%" y="373" width="0.3882%" height="15" fill="rgb(246,171,24)" fg:x="597" fg:w="5"/><text x="46.6009%" y="383.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="46.6615%" y="357" width="0.0776%" height="15" fill="rgb(215,142,24)" fg:x="601" fg:w="1"/><text x="46.9115%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="49.2236%" y="325" width="0.2329%" height="15" fill="rgb(250,187,7)" fg:x="634" fg:w="3"/><text x="49.4736%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="49.3789%" y="309" width="0.0776%" height="15" fill="rgb(228,66,33)" fg:x="636" fg:w="1"/><text x="49.6289%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (8 samples, 0.62%)</title><rect x="48.9130%" y="341" width="0.6211%" height="15" fill="rgb(234,215,21)" fg:x="630" fg:w="8"/><text x="49.1630%" y="351.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="49.4565%" y="325" width="0.0776%" height="15" fill="rgb(222,191,20)" fg:x="637" fg:w="1"/><text x="49.7065%" y="335.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="49.5342%" y="341" width="0.0776%" height="15" fill="rgb(245,79,54)" fg:x="638" fg:w="1"/><text x="49.7842%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (11 samples, 0.85%)</title><rect x="48.8354%" y="357" width="0.8540%" height="15" fill="rgb(240,10,37)" fg:x="629" fg:w="11"/><text x="49.0854%" y="367.50"></text></g><g><title>pthread_rwlock_wrlock (1 samples, 0.08%)</title><rect x="49.6118%" y="341" width="0.0776%" height="15" fill="rgb(214,192,32)" fg:x="639" fg:w="1"/><text x="49.8618%" y="351.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (244 samples, 18.94%)</title><rect x="30.8230%" y="709" width="18.9441%" height="15" fill="rgb(209,36,54)" fg:x="397" fg:w="244"/><text x="31.0730%" y="719.50">winit::platform_impl::platform..</text></g><g><title>framer::window::Window::launch::{{closure}}::{{closure}} (244 samples, 18.94%)</title><rect x="30.8230%" y="693" width="18.9441%" height="15" fill="rgb(220,10,11)" fg:x="397" fg:w="244"/><text x="31.0730%" y="703.50">framer::window::Window::launch..</text></g><g><title>framer::renderer::State::render (244 samples, 18.94%)</title><rect x="30.8230%" y="677" width="18.9441%" height="15" fill="rgb(221,106,17)" fg:x="397" fg:w="244"/><text x="31.0730%" y="687.50">framer::renderer::State::render</text></g><g><title>wgpu::SurfaceTexture::present (199 samples, 15.45%)</title><rect x="34.3168%" y="661" width="15.4503%" height="15" fill="rgb(251,142,44)" fg:x="442" fg:w="199"/><text x="34.5668%" y="671.50">wgpu::SurfaceTexture::pr..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (199 samples, 15.45%)</title><rect x="34.3168%" y="645" width="15.4503%" height="15" fill="rgb(238,13,15)" fg:x="442" fg:w="199"/><text x="34.5668%" y="655.50">&lt;T as wgpu::context::Dyn..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (199 samples, 15.45%)</title><rect x="34.3168%" y="629" width="15.4503%" height="15" fill="rgb(208,107,27)" fg:x="442" fg:w="199"/><text x="34.5668%" y="639.50">&lt;wgpu::backend::direct::..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (199 samples, 15.45%)</title><rect x="34.3168%" y="613" width="15.4503%" height="15" fill="rgb(205,136,37)" fg:x="442" fg:w="199"/><text x="34.5668%" y="623.50">wgpu_core::present::&lt;imp..</text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (199 samples, 15.45%)</title><rect x="34.3168%" y="597" width="15.4503%" height="15" fill="rgb(250,205,27)" fg:x="442" fg:w="199"/><text x="34.5668%" y="607.50">&lt;wgpu_hal::vulkan::Queue..</text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (199 samples, 15.45%)</title><rect x="34.3168%" y="581" width="15.4503%" height="15" fill="rgb(210,80,43)" fg:x="442" fg:w="199"/><text x="34.5668%" y="591.50">ash::extensions::khr::sw..</text></g><g><title>[libGLX_nvidia.so.530.41.03] (199 samples, 15.45%)</title><rect x="34.3168%" y="565" width="15.4503%" height="15" fill="rgb(247,160,36)" fg:x="442" fg:w="199"/><text x="34.5668%" y="575.50">[libGLX_nvidia.so.530.41..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (199 samples, 15.45%)</title><rect x="34.3168%" y="549" width="15.4503%" height="15" fill="rgb(234,13,49)" fg:x="442" fg:w="199"/><text x="34.5668%" y="559.50">[libnvidia-glcore.so.530..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (199 samples, 15.45%)</title><rect x="34.3168%" y="533" width="15.4503%" height="15" fill="rgb(234,122,0)" fg:x="442" fg:w="199"/><text x="34.5668%" y="543.50">[libnvidia-glcore.so.530..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (199 samples, 15.45%)</title><rect x="34.3168%" y="517" width="15.4503%" height="15" fill="rgb(207,146,38)" fg:x="442" fg:w="199"/><text x="34.5668%" y="527.50">[libnvidia-glcore.so.530..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (199 samples, 15.45%)</title><rect x="34.3168%" y="501" width="15.4503%" height="15" fill="rgb(207,177,25)" fg:x="442" fg:w="199"/><text x="34.5668%" y="511.50">[libnvidia-glcore.so.530..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (199 samples, 15.45%)</title><rect x="34.3168%" y="485" width="15.4503%" height="15" fill="rgb(211,178,42)" fg:x="442" fg:w="199"/><text x="34.5668%" y="495.50">[libnvidia-glcore.so.530..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (199 samples, 15.45%)</title><rect x="34.3168%" y="469" width="15.4503%" height="15" fill="rgb(230,69,54)" fg:x="442" fg:w="199"/><text x="34.5668%" y="479.50">[libnvidia-glcore.so.530..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (48 samples, 3.73%)</title><rect x="46.0404%" y="453" width="3.7267%" height="15" fill="rgb(214,135,41)" fg:x="593" fg:w="48"/><text x="46.2904%" y="463.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (45 samples, 3.49%)</title><rect x="46.2733%" y="437" width="3.4938%" height="15" fill="rgb(237,67,25)" fg:x="596" fg:w="45"/><text x="46.5233%" y="447.50">[li..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (39 samples, 3.03%)</title><rect x="46.7391%" y="421" width="3.0280%" height="15" fill="rgb(222,189,50)" fg:x="602" fg:w="39"/><text x="46.9891%" y="431.50">[li..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (38 samples, 2.95%)</title><rect x="46.8168%" y="405" width="2.9503%" height="15" fill="rgb(245,148,34)" fg:x="603" fg:w="38"/><text x="47.0668%" y="415.50">[li..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (36 samples, 2.80%)</title><rect x="46.9720%" y="389" width="2.7950%" height="15" fill="rgb(222,29,6)" fg:x="605" fg:w="36"/><text x="47.2220%" y="399.50">[l..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (36 samples, 2.80%)</title><rect x="46.9720%" y="373" width="2.7950%" height="15" fill="rgb(221,189,43)" fg:x="605" fg:w="36"/><text x="47.2220%" y="383.50">[l..</text></g><g><title>pthread_equal (1 samples, 0.08%)</title><rect x="49.6894%" y="357" width="0.0776%" height="15" fill="rgb(207,36,27)" fg:x="640" fg:w="1"/><text x="49.9394%" y="367.50"></text></g><g><title>_XReply (1 samples, 0.08%)</title><rect x="49.7671%" y="277" width="0.0776%" height="15" fill="rgb(217,90,24)" fg:x="641" fg:w="1"/><text x="50.0171%" y="287.50"></text></g><g><title>xcb_wait_for_reply64 (1 samples, 0.08%)</title><rect x="49.7671%" y="261" width="0.0776%" height="15" fill="rgb(224,66,35)" fg:x="641" fg:w="1"/><text x="50.0171%" y="271.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="49.7671%" y="245" width="0.0776%" height="15" fill="rgb(221,13,50)" fg:x="641" fg:w="1"/><text x="50.0171%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="49.7671%" y="229" width="0.0776%" height="15" fill="rgb(236,68,49)" fg:x="641" fg:w="1"/><text x="50.0171%" y="239.50"></text></g><g><title>__poll (1 samples, 0.08%)</title><rect x="49.7671%" y="213" width="0.0776%" height="15" fill="rgb(229,146,28)" fg:x="641" fg:w="1"/><text x="50.0171%" y="223.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="49.7671%" y="373" width="0.1553%" height="15" fill="rgb(225,31,38)" fg:x="641" fg:w="2"/><text x="50.0171%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="49.7671%" y="357" width="0.1553%" height="15" fill="rgb(250,208,3)" fg:x="641" fg:w="2"/><text x="50.0171%" y="367.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="49.7671%" y="341" width="0.1553%" height="15" fill="rgb(246,54,23)" fg:x="641" fg:w="2"/><text x="50.0171%" y="351.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="49.7671%" y="325" width="0.1553%" height="15" fill="rgb(243,76,11)" fg:x="641" fg:w="2"/><text x="50.0171%" y="335.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="49.7671%" y="309" width="0.1553%" height="15" fill="rgb(245,21,50)" fg:x="641" fg:w="2"/><text x="50.0171%" y="319.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="49.7671%" y="293" width="0.1553%" height="15" fill="rgb(228,9,43)" fg:x="641" fg:w="2"/><text x="50.0171%" y="303.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="49.8447%" y="277" width="0.0776%" height="15" fill="rgb(208,100,47)" fg:x="642" fg:w="1"/><text x="50.0947%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="49.9224%" y="373" width="0.0776%" height="15" fill="rgb(232,26,8)" fg:x="643" fg:w="1"/><text x="50.1724%" y="383.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="50.0000%" y="245" width="0.0776%" height="15" fill="rgb(216,166,38)" fg:x="644" fg:w="1"/><text x="50.2500%" y="255.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="50.0000%" y="229" width="0.0776%" height="15" fill="rgb(251,202,51)" fg:x="644" fg:w="1"/><text x="50.2500%" y="239.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="50.0000%" y="213" width="0.0776%" height="15" fill="rgb(254,216,34)" fg:x="644" fg:w="1"/><text x="50.2500%" y="223.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="50.0000%" y="197" width="0.0776%" height="15" fill="rgb(251,32,27)" fg:x="644" fg:w="1"/><text x="50.2500%" y="207.50"></text></g><g><title>recvmsg (1 samples, 0.08%)</title><rect x="50.0000%" y="181" width="0.0776%" height="15" fill="rgb(208,127,28)" fg:x="644" fg:w="1"/><text x="50.2500%" y="191.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.16%)</title><rect x="50.0776%" y="197" width="0.1553%" height="15" fill="rgb(224,137,22)" fg:x="645" fg:w="2"/><text x="50.3276%" y="207.50"></text></g><g><title>malloc (2 samples, 0.16%)</title><rect x="50.0776%" y="181" width="0.1553%" height="15" fill="rgb(254,70,32)" fg:x="645" fg:w="2"/><text x="50.3276%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="50.1553%" y="165" width="0.0776%" height="15" fill="rgb(229,75,37)" fg:x="646" fg:w="1"/><text x="50.4053%" y="175.50"></text></g><g><title>_XReply (8 samples, 0.62%)</title><rect x="50.0000%" y="261" width="0.6211%" height="15" fill="rgb(252,64,23)" fg:x="644" fg:w="8"/><text x="50.2500%" y="271.50"></text></g><g><title>xcb_wait_for_reply64 (7 samples, 0.54%)</title><rect x="50.0776%" y="245" width="0.5435%" height="15" fill="rgb(232,162,48)" fg:x="645" fg:w="7"/><text x="50.3276%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.54%)</title><rect x="50.0776%" y="229" width="0.5435%" height="15" fill="rgb(246,160,12)" fg:x="645" fg:w="7"/><text x="50.3276%" y="239.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.54%)</title><rect x="50.0776%" y="213" width="0.5435%" height="15" fill="rgb(247,166,0)" fg:x="645" fg:w="7"/><text x="50.3276%" y="223.50"></text></g><g><title>__poll (5 samples, 0.39%)</title><rect x="50.2329%" y="197" width="0.3882%" height="15" fill="rgb(249,219,21)" fg:x="647" fg:w="5"/><text x="50.4829%" y="207.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (9 samples, 0.70%)</title><rect x="50.0000%" y="293" width="0.6988%" height="15" fill="rgb(205,209,3)" fg:x="644" fg:w="9"/><text x="50.2500%" y="303.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (9 samples, 0.70%)</title><rect x="50.0000%" y="277" width="0.6988%" height="15" fill="rgb(243,44,1)" fg:x="644" fg:w="9"/><text x="50.2500%" y="287.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="50.6211%" y="261" width="0.0776%" height="15" fill="rgb(206,159,16)" fg:x="652" fg:w="1"/><text x="50.8711%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="50.6211%" y="245" width="0.0776%" height="15" fill="rgb(244,77,30)" fg:x="652" fg:w="1"/><text x="50.8711%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="50.9317%" y="245" width="0.1553%" height="15" fill="rgb(218,69,12)" fg:x="656" fg:w="2"/><text x="51.1817%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="50.9317%" y="229" width="0.1553%" height="15" fill="rgb(212,87,7)" fg:x="656" fg:w="2"/><text x="51.1817%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="50.9317%" y="213" width="0.1553%" height="15" fill="rgb(245,114,25)" fg:x="656" fg:w="2"/><text x="51.1817%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="50.9317%" y="197" width="0.1553%" height="15" fill="rgb(210,61,42)" fg:x="656" fg:w="2"/><text x="51.1817%" y="207.50"></text></g><g><title>ioctl (1 samples, 0.08%)</title><rect x="51.0093%" y="181" width="0.0776%" height="15" fill="rgb(211,52,33)" fg:x="657" fg:w="1"/><text x="51.2593%" y="191.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (15 samples, 1.16%)</title><rect x="50.0000%" y="357" width="1.1646%" height="15" fill="rgb(234,58,33)" fg:x="644" fg:w="15"/><text x="50.2500%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (15 samples, 1.16%)</title><rect x="50.0000%" y="341" width="1.1646%" height="15" fill="rgb(220,115,36)" fg:x="644" fg:w="15"/><text x="50.2500%" y="351.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (15 samples, 1.16%)</title><rect x="50.0000%" y="325" width="1.1646%" height="15" fill="rgb(243,153,54)" fg:x="644" fg:w="15"/><text x="50.2500%" y="335.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (15 samples, 1.16%)</title><rect x="50.0000%" y="309" width="1.1646%" height="15" fill="rgb(251,47,18)" fg:x="644" fg:w="15"/><text x="50.2500%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="50.6988%" y="293" width="0.4658%" height="15" fill="rgb(242,102,42)" fg:x="653" fg:w="6"/><text x="50.9488%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="50.7764%" y="277" width="0.3882%" height="15" fill="rgb(234,31,38)" fg:x="654" fg:w="5"/><text x="51.0264%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="50.9317%" y="261" width="0.2329%" height="15" fill="rgb(221,117,51)" fg:x="656" fg:w="3"/><text x="51.1817%" y="271.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="51.0870%" y="245" width="0.0776%" height="15" fill="rgb(212,20,18)" fg:x="658" fg:w="1"/><text x="51.3370%" y="255.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 21.27%)</title><rect x="30.0466%" y="885" width="21.2733%" height="15" fill="rgb(245,133,36)" fg:x="387" fg:w="274"/><text x="30.2966%" y="895.50">&lt;core::future::from_generator::Gen..</text></g><g><title>window::main::{{closure}} (274 samples, 21.27%)</title><rect x="30.0466%" y="869" width="21.2733%" height="15" fill="rgb(212,6,19)" fg:x="387" fg:w="274"/><text x="30.2966%" y="879.50">window::main::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 21.27%)</title><rect x="30.0466%" y="853" width="21.2733%" height="15" fill="rgb(218,1,36)" fg:x="387" fg:w="274"/><text x="30.2966%" y="863.50">&lt;core::future::from_generator::Gen..</text></g><g><title>window::main::main::{{closure}} (274 samples, 21.27%)</title><rect x="30.0466%" y="837" width="21.2733%" height="15" fill="rgb(246,84,54)" fg:x="387" fg:w="274"/><text x="30.2966%" y="847.50">window::main::main::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 21.27%)</title><rect x="30.0466%" y="821" width="21.2733%" height="15" fill="rgb(242,110,6)" fg:x="387" fg:w="274"/><text x="30.2966%" y="831.50">&lt;core::future::from_generator::Gen..</text></g><g><title>framer::window::Window::launch::{{closure}} (274 samples, 21.27%)</title><rect x="30.0466%" y="805" width="21.2733%" height="15" fill="rgb(214,47,5)" fg:x="387" fg:w="274"/><text x="30.2966%" y="815.50">framer::window::Window::launch::{{..</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (264 samples, 20.50%)</title><rect x="30.8230%" y="789" width="20.4969%" height="15" fill="rgb(218,159,25)" fg:x="397" fg:w="264"/><text x="31.0730%" y="799.50">winit::event_loop::EventLoop&lt;T&gt;:..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (264 samples, 20.50%)</title><rect x="30.8230%" y="773" width="20.4969%" height="15" fill="rgb(215,211,28)" fg:x="397" fg:w="264"/><text x="31.0730%" y="783.50">winit::platform_impl::platform::..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (264 samples, 20.50%)</title><rect x="30.8230%" y="757" width="20.4969%" height="15" fill="rgb(238,59,32)" fg:x="397" fg:w="264"/><text x="31.0730%" y="767.50">winit::platform_impl::platform::..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (264 samples, 20.50%)</title><rect x="30.8230%" y="741" width="20.4969%" height="15" fill="rgb(226,82,3)" fg:x="397" fg:w="264"/><text x="31.0730%" y="751.50">winit::platform_impl::platform::..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (264 samples, 20.50%)</title><rect x="30.8230%" y="725" width="20.4969%" height="15" fill="rgb(240,164,32)" fg:x="397" fg:w="264"/><text x="31.0730%" y="735.50">winit::platform_impl::platform::..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (20 samples, 1.55%)</title><rect x="49.7671%" y="709" width="1.5528%" height="15" fill="rgb(232,46,7)" fg:x="641" fg:w="20"/><text x="50.0171%" y="719.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (20 samples, 1.55%)</title><rect x="49.7671%" y="693" width="1.5528%" height="15" fill="rgb(229,129,53)" fg:x="641" fg:w="20"/><text x="50.0171%" y="703.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}} (20 samples, 1.55%)</title><rect x="49.7671%" y="677" width="1.5528%" height="15" fill="rgb(234,188,29)" fg:x="641" fg:w="20"/><text x="50.0171%" y="687.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (20 samples, 1.55%)</title><rect x="49.7671%" y="661" width="1.5528%" height="15" fill="rgb(246,141,4)" fg:x="641" fg:w="20"/><text x="50.0171%" y="671.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}}::{{closure}} (20 samples, 1.55%)</title><rect x="49.7671%" y="645" width="1.5528%" height="15" fill="rgb(229,23,39)" fg:x="641" fg:w="20"/><text x="50.0171%" y="655.50"></text></g><g><title>framer::window::Window::launch::{{closure}}::{{closure}} (20 samples, 1.55%)</title><rect x="49.7671%" y="629" width="1.5528%" height="15" fill="rgb(206,12,3)" fg:x="641" fg:w="20"/><text x="50.0171%" y="639.50"></text></g><g><title>wgpu::Surface::configure (20 samples, 1.55%)</title><rect x="49.7671%" y="613" width="1.5528%" height="15" fill="rgb(252,226,20)" fg:x="641" fg:w="20"/><text x="50.0171%" y="623.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (20 samples, 1.55%)</title><rect x="49.7671%" y="597" width="1.5528%" height="15" fill="rgb(216,123,35)" fg:x="641" fg:w="20"/><text x="50.0171%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (20 samples, 1.55%)</title><rect x="49.7671%" y="581" width="1.5528%" height="15" fill="rgb(212,68,40)" fg:x="641" fg:w="20"/><text x="50.0171%" y="591.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (20 samples, 1.55%)</title><rect x="49.7671%" y="565" width="1.5528%" height="15" fill="rgb(254,125,32)" fg:x="641" fg:w="20"/><text x="50.0171%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (20 samples, 1.55%)</title><rect x="49.7671%" y="549" width="1.5528%" height="15" fill="rgb(253,97,22)" fg:x="641" fg:w="20"/><text x="50.0171%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (20 samples, 1.55%)</title><rect x="49.7671%" y="533" width="1.5528%" height="15" fill="rgb(241,101,14)" fg:x="641" fg:w="20"/><text x="50.0171%" y="543.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (20 samples, 1.55%)</title><rect x="49.7671%" y="517" width="1.5528%" height="15" fill="rgb(238,103,29)" fg:x="641" fg:w="20"/><text x="50.0171%" y="527.50"></text></g><g><title>[libvulkan.so.1.3.245] (20 samples, 1.55%)</title><rect x="49.7671%" y="501" width="1.5528%" height="15" fill="rgb(233,195,47)" fg:x="641" fg:w="20"/><text x="50.0171%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (20 samples, 1.55%)</title><rect x="49.7671%" y="485" width="1.5528%" height="15" fill="rgb(246,218,30)" fg:x="641" fg:w="20"/><text x="50.0171%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (20 samples, 1.55%)</title><rect x="49.7671%" y="469" width="1.5528%" height="15" fill="rgb(219,145,47)" fg:x="641" fg:w="20"/><text x="50.0171%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (20 samples, 1.55%)</title><rect x="49.7671%" y="453" width="1.5528%" height="15" fill="rgb(243,12,26)" fg:x="641" fg:w="20"/><text x="50.0171%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (20 samples, 1.55%)</title><rect x="49.7671%" y="437" width="1.5528%" height="15" fill="rgb(214,87,16)" fg:x="641" fg:w="20"/><text x="50.0171%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (20 samples, 1.55%)</title><rect x="49.7671%" y="421" width="1.5528%" height="15" fill="rgb(208,99,42)" fg:x="641" fg:w="20"/><text x="50.0171%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (20 samples, 1.55%)</title><rect x="49.7671%" y="405" width="1.5528%" height="15" fill="rgb(253,99,2)" fg:x="641" fg:w="20"/><text x="50.0171%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (20 samples, 1.55%)</title><rect x="49.7671%" y="389" width="1.5528%" height="15" fill="rgb(220,168,23)" fg:x="641" fg:w="20"/><text x="50.0171%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (17 samples, 1.32%)</title><rect x="50.0000%" y="373" width="1.3199%" height="15" fill="rgb(242,38,24)" fg:x="644" fg:w="17"/><text x="50.2500%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="51.1646%" y="357" width="0.1553%" height="15" fill="rgb(225,182,9)" fg:x="659" fg:w="2"/><text x="51.4146%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="51.1646%" y="341" width="0.1553%" height="15" fill="rgb(243,178,37)" fg:x="659" fg:w="2"/><text x="51.4146%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="51.1646%" y="325" width="0.1553%" height="15" fill="rgb(232,139,19)" fg:x="659" fg:w="2"/><text x="51.4146%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="51.1646%" y="309" width="0.1553%" height="15" fill="rgb(225,201,24)" fg:x="659" fg:w="2"/><text x="51.4146%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="51.1646%" y="293" width="0.1553%" height="15" fill="rgb(221,47,46)" fg:x="659" fg:w="2"/><text x="51.4146%" y="303.50"></text></g><g><title>pthread_rwlock_wrlock (1 samples, 0.08%)</title><rect x="51.2422%" y="277" width="0.0776%" height="15" fill="rgb(249,23,13)" fg:x="660" fg:w="1"/><text x="51.4922%" y="287.50"></text></g><g><title>&lt;glow::native::Context as glow::HasContext&gt;::get_parameter_i32 (1 samples, 0.08%)</title><rect x="51.3199%" y="837" width="0.0776%" height="15" fill="rgb(219,9,5)" fg:x="661" fg:w="1"/><text x="51.5699%" y="847.50"></text></g><g><title>glow::gl46::struct_commands::GlFns::GetIntegerv (1 samples, 0.08%)</title><rect x="51.3199%" y="821" width="0.0776%" height="15" fill="rgb(254,171,16)" fg:x="661" fg:w="1"/><text x="51.5699%" y="831.50"></text></g><g><title>glow::gl46::call_atomic_ptr_2arg (1 samples, 0.08%)</title><rect x="51.3199%" y="805" width="0.0776%" height="15" fill="rgb(230,171,20)" fg:x="661" fg:w="1"/><text x="51.5699%" y="815.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="51.3199%" y="789" width="0.0776%" height="15" fill="rgb(210,71,41)" fg:x="661" fg:w="1"/><text x="51.5699%" y="799.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="51.3199%" y="773" width="0.0776%" height="15" fill="rgb(206,173,20)" fg:x="661" fg:w="1"/><text x="51.5699%" y="783.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="51.3199%" y="757" width="0.0776%" height="15" fill="rgb(233,88,34)" fg:x="661" fg:w="1"/><text x="51.5699%" y="767.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="51.3199%" y="741" width="0.0776%" height="15" fill="rgb(223,209,46)" fg:x="661" fg:w="1"/><text x="51.5699%" y="751.50"></text></g><g><title>pthread_cond_broadcast (1 samples, 0.08%)</title><rect x="51.3199%" y="725" width="0.0776%" height="15" fill="rgb(250,43,18)" fg:x="661" fg:w="1"/><text x="51.5699%" y="735.50"></text></g><g><title>glow::gl46::struct_commands::GlFns::DeleteFramebuffers_load_with_dyn (1 samples, 0.08%)</title><rect x="51.3975%" y="805" width="0.0776%" height="15" fill="rgb(208,13,10)" fg:x="662" fg:w="1"/><text x="51.6475%" y="815.50"></text></g><g><title>glow::gl46::load_dyn_name_atomic_ptr (1 samples, 0.08%)</title><rect x="51.3975%" y="789" width="0.0776%" height="15" fill="rgb(212,200,36)" fg:x="662" fg:w="1"/><text x="51.6475%" y="799.50"></text></g><g><title>khronos_egl::egl1_0::&lt;impl khronos_egl::Instance&lt;T&gt;&gt;::get_proc_address (1 samples, 0.08%)</title><rect x="51.3975%" y="773" width="0.0776%" height="15" fill="rgb(225,90,30)" fg:x="662" fg:w="1"/><text x="51.6475%" y="783.50"></text></g><g><title>&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt; as khronos_egl::api::EGL1_0&gt;::eglGetProcAddress (1 samples, 0.08%)</title><rect x="51.3975%" y="757" width="0.0776%" height="15" fill="rgb(236,182,39)" fg:x="662" fg:w="1"/><text x="51.6475%" y="767.50"></text></g><g><title>eglGetProcAddress (1 samples, 0.08%)</title><rect x="51.3975%" y="741" width="0.0776%" height="15" fill="rgb(212,144,35)" fg:x="662" fg:w="1"/><text x="51.6475%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="51.3975%" y="725" width="0.0776%" height="15" fill="rgb(228,63,44)" fg:x="662" fg:w="1"/><text x="51.6475%" y="735.50"></text></g><g><title>glow::gl46::struct_commands::GlFns::GetNamedBufferParameteri64v_load_with_dyn (1 samples, 0.08%)</title><rect x="51.4752%" y="805" width="0.0776%" height="15" fill="rgb(228,109,6)" fg:x="663" fg:w="1"/><text x="51.7252%" y="815.50"></text></g><g><title>glow::gl46::load_dyn_name_atomic_ptr (1 samples, 0.08%)</title><rect x="51.4752%" y="789" width="0.0776%" height="15" fill="rgb(238,117,24)" fg:x="663" fg:w="1"/><text x="51.7252%" y="799.50"></text></g><g><title>glow::native::Context::from_loader_function_cstr::{{closure}} (1 samples, 0.08%)</title><rect x="51.4752%" y="773" width="0.0776%" height="15" fill="rgb(242,26,26)" fg:x="663" fg:w="1"/><text x="51.7252%" y="783.50"></text></g><g><title>core::ffi::c_str::CStr::from_ptr (1 samples, 0.08%)</title><rect x="51.4752%" y="757" width="0.0776%" height="15" fill="rgb(221,92,48)" fg:x="663" fg:w="1"/><text x="51.7252%" y="767.50"></text></g><g><title>core::ffi::c_str::CStr::from_ptr::strlen_rt (1 samples, 0.08%)</title><rect x="51.4752%" y="741" width="0.0776%" height="15" fill="rgb(209,209,32)" fg:x="663" fg:w="1"/><text x="51.7252%" y="751.50"></text></g><g><title>glow::native::Context::from_loader_function (4 samples, 0.31%)</title><rect x="51.3199%" y="869" width="0.3106%" height="15" fill="rgb(221,70,22)" fg:x="661" fg:w="4"/><text x="51.5699%" y="879.50"></text></g><g><title>glow::native::Context::from_loader_function_cstr (4 samples, 0.31%)</title><rect x="51.3199%" y="853" width="0.3106%" height="15" fill="rgb(248,145,5)" fg:x="661" fg:w="4"/><text x="51.5699%" y="863.50"></text></g><g><title>glow::gl46::struct_commands::GlFns::load_with (3 samples, 0.23%)</title><rect x="51.3975%" y="837" width="0.2329%" height="15" fill="rgb(226,116,26)" fg:x="662" fg:w="3"/><text x="51.6475%" y="847.50"></text></g><g><title>glow::gl46::struct_commands::GlFns::load_all_with_dyn (3 samples, 0.23%)</title><rect x="51.3975%" y="821" width="0.2329%" height="15" fill="rgb(244,5,17)" fg:x="662" fg:w="3"/><text x="51.6475%" y="831.50"></text></g><g><title>glow::gl46::struct_commands::GlFns::ScissorIndexed_load_with_dyn (1 samples, 0.08%)</title><rect x="51.5528%" y="805" width="0.0776%" height="15" fill="rgb(252,159,33)" fg:x="664" fg:w="1"/><text x="51.8028%" y="815.50"></text></g><g><title>glow::gl46::load_dyn_name_atomic_ptr (1 samples, 0.08%)</title><rect x="51.5528%" y="789" width="0.0776%" height="15" fill="rgb(206,71,0)" fg:x="664" fg:w="1"/><text x="51.8028%" y="799.50"></text></g><g><title>khronos_egl::egl1_0::&lt;impl khronos_egl::Instance&lt;T&gt;&gt;::get_proc_address (1 samples, 0.08%)</title><rect x="51.5528%" y="773" width="0.0776%" height="15" fill="rgb(233,118,54)" fg:x="664" fg:w="1"/><text x="51.8028%" y="783.50"></text></g><g><title>&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt; as khronos_egl::api::EGL1_0&gt;::eglGetProcAddress (1 samples, 0.08%)</title><rect x="51.5528%" y="757" width="0.0776%" height="15" fill="rgb(234,83,48)" fg:x="664" fg:w="1"/><text x="51.8028%" y="767.50"></text></g><g><title>eglGetProcAddress (1 samples, 0.08%)</title><rect x="51.5528%" y="741" width="0.0776%" height="15" fill="rgb(228,3,54)" fg:x="664" fg:w="1"/><text x="51.8028%" y="751.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="51.9410%" y="693" width="0.2329%" height="15" fill="rgb(226,155,13)" fg:x="669" fg:w="3"/><text x="52.1910%" y="703.50"></text></g><g><title>[libEGL.so.1.1.0] (17 samples, 1.32%)</title><rect x="51.6304%" y="805" width="1.3199%" height="15" fill="rgb(241,28,37)" fg:x="665" fg:w="17"/><text x="51.8804%" y="815.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (17 samples, 1.32%)</title><rect x="51.6304%" y="789" width="1.3199%" height="15" fill="rgb(233,93,10)" fg:x="665" fg:w="17"/><text x="51.8804%" y="799.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (17 samples, 1.32%)</title><rect x="51.6304%" y="773" width="1.3199%" height="15" fill="rgb(225,113,19)" fg:x="665" fg:w="17"/><text x="51.8804%" y="783.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (17 samples, 1.32%)</title><rect x="51.6304%" y="757" width="1.3199%" height="15" fill="rgb(241,2,18)" fg:x="665" fg:w="17"/><text x="51.8804%" y="767.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (16 samples, 1.24%)</title><rect x="51.7081%" y="741" width="1.2422%" height="15" fill="rgb(228,207,21)" fg:x="666" fg:w="16"/><text x="51.9581%" y="751.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (16 samples, 1.24%)</title><rect x="51.7081%" y="725" width="1.2422%" height="15" fill="rgb(213,211,35)" fg:x="666" fg:w="16"/><text x="51.9581%" y="735.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (14 samples, 1.09%)</title><rect x="51.8634%" y="709" width="1.0870%" height="15" fill="rgb(209,83,10)" fg:x="668" fg:w="14"/><text x="52.1134%" y="719.50"></text></g><g><title>__sched_yield (10 samples, 0.78%)</title><rect x="52.1739%" y="693" width="0.7764%" height="15" fill="rgb(209,164,1)" fg:x="672" fg:w="10"/><text x="52.4239%" y="703.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="52.9503%" y="725" width="0.0776%" height="15" fill="rgb(213,184,43)" fg:x="682" fg:w="1"/><text x="53.2003%" y="735.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="52.9503%" y="709" width="0.0776%" height="15" fill="rgb(231,61,34)" fg:x="682" fg:w="1"/><text x="53.2003%" y="719.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="52.9503%" y="693" width="0.0776%" height="15" fill="rgb(235,75,3)" fg:x="682" fg:w="1"/><text x="53.2003%" y="703.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::enumerate_adapters (23 samples, 1.79%)</title><rect x="51.3199%" y="885" width="1.7857%" height="15" fill="rgb(220,106,47)" fg:x="661" fg:w="23"/><text x="51.5699%" y="895.50">&lt;..</text></g><g><title>wgpu_hal::gles::egl::EglContext::make_current (19 samples, 1.48%)</title><rect x="51.6304%" y="869" width="1.4752%" height="15" fill="rgb(210,196,33)" fg:x="665" fg:w="19"/><text x="51.8804%" y="879.50"></text></g><g><title>khronos_egl::egl1_0::&lt;impl khronos_egl::Instance&lt;T&gt;&gt;::make_current (19 samples, 1.48%)</title><rect x="51.6304%" y="853" width="1.4752%" height="15" fill="rgb(229,154,42)" fg:x="665" fg:w="19"/><text x="51.8804%" y="863.50"></text></g><g><title>&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt; as khronos_egl::api::EGL1_0&gt;::eglMakeCurrent (19 samples, 1.48%)</title><rect x="51.6304%" y="837" width="1.4752%" height="15" fill="rgb(228,114,26)" fg:x="665" fg:w="19"/><text x="51.8804%" y="847.50"></text></g><g><title>[libEGL.so.1.1.0] (19 samples, 1.48%)</title><rect x="51.6304%" y="821" width="1.4752%" height="15" fill="rgb(208,144,1)" fg:x="665" fg:w="19"/><text x="51.8804%" y="831.50"></text></g><g><title>__glDispatchMakeCurrent (2 samples, 0.16%)</title><rect x="52.9503%" y="805" width="0.1553%" height="15" fill="rgb(239,112,37)" fg:x="682" fg:w="2"/><text x="53.2003%" y="815.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (2 samples, 0.16%)</title><rect x="52.9503%" y="789" width="0.1553%" height="15" fill="rgb(210,96,50)" fg:x="682" fg:w="2"/><text x="53.2003%" y="799.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="52.9503%" y="773" width="0.1553%" height="15" fill="rgb(222,178,2)" fg:x="682" fg:w="2"/><text x="53.2003%" y="783.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="52.9503%" y="757" width="0.1553%" height="15" fill="rgb(226,74,18)" fg:x="682" fg:w="2"/><text x="53.2003%" y="767.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="52.9503%" y="741" width="0.1553%" height="15" fill="rgb(225,67,54)" fg:x="682" fg:w="2"/><text x="53.2003%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="53.0280%" y="725" width="0.0776%" height="15" fill="rgb(251,92,32)" fg:x="683" fg:w="1"/><text x="53.2780%" y="735.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="53.1056%" y="885" width="0.0776%" height="15" fill="rgb(228,149,22)" fg:x="684" fg:w="1"/><text x="53.3556%" y="895.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="53.1832%" y="885" width="0.0776%" height="15" fill="rgb(243,54,13)" fg:x="685" fg:w="1"/><text x="53.4332%" y="895.50"></text></g><g><title>[libc.so.6] (6 samples, 0.47%)</title><rect x="53.2609%" y="885" width="0.4658%" height="15" fill="rgb(243,180,28)" fg:x="686" fg:w="6"/><text x="53.5109%" y="895.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="53.7267%" y="885" width="0.0776%" height="15" fill="rgb(208,167,24)" fg:x="692" fg:w="1"/><text x="53.9767%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (22 samples, 1.71%)</title><rect x="53.8043%" y="885" width="1.7081%" height="15" fill="rgb(245,73,45)" fg:x="693" fg:w="22"/><text x="54.0543%" y="895.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (1 samples, 0.08%)</title><rect x="55.5124%" y="885" width="0.0776%" height="15" fill="rgb(237,203,48)" fg:x="715" fg:w="1"/><text x="55.7624%" y="895.50"></text></g><g><title>[libnvidia-glsi.so.530.41.03] (1 samples, 0.08%)</title><rect x="55.5124%" y="869" width="0.0776%" height="15" fill="rgb(211,197,16)" fg:x="715" fg:w="1"/><text x="55.7624%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="55.5124%" y="853" width="0.0776%" height="15" fill="rgb(243,99,51)" fg:x="715" fg:w="1"/><text x="55.7624%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="55.5901%" y="885" width="0.0776%" height="15" fill="rgb(215,123,29)" fg:x="716" fg:w="1"/><text x="55.8401%" y="895.50"></text></g><g><title>__sched_yield (11 samples, 0.85%)</title><rect x="55.6677%" y="885" width="0.8540%" height="15" fill="rgb(239,186,37)" fg:x="717" fg:w="11"/><text x="55.9177%" y="895.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="56.5217%" y="885" width="0.0776%" height="15" fill="rgb(252,136,39)" fg:x="728" fg:w="1"/><text x="56.7717%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="56.5994%" y="885" width="0.0776%" height="15" fill="rgb(223,213,32)" fg:x="729" fg:w="1"/><text x="56.8494%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="56.6770%" y="277" width="0.0776%" height="15" fill="rgb(233,115,5)" fg:x="730" fg:w="1"/><text x="56.9270%" y="287.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="56.6770%" y="341" width="0.1553%" height="15" fill="rgb(207,226,44)" fg:x="730" fg:w="2"/><text x="56.9270%" y="351.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="56.6770%" y="325" width="0.1553%" height="15" fill="rgb(208,126,0)" fg:x="730" fg:w="2"/><text x="56.9270%" y="335.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="56.6770%" y="309" width="0.1553%" height="15" fill="rgb(244,66,21)" fg:x="730" fg:w="2"/><text x="56.9270%" y="319.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="56.6770%" y="293" width="0.1553%" height="15" fill="rgb(222,97,12)" fg:x="730" fg:w="2"/><text x="56.9270%" y="303.50"></text></g><g><title>__strtok_r (1 samples, 0.08%)</title><rect x="56.7547%" y="277" width="0.0776%" height="15" fill="rgb(219,213,19)" fg:x="731" fg:w="1"/><text x="57.0047%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="56.7547%" y="261" width="0.0776%" height="15" fill="rgb(252,169,30)" fg:x="731" fg:w="1"/><text x="57.0047%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="56.8323%" y="277" width="0.0776%" height="15" fill="rgb(206,32,51)" fg:x="732" fg:w="1"/><text x="57.0823%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="56.8323%" y="261" width="0.0776%" height="15" fill="rgb(250,172,42)" fg:x="732" fg:w="1"/><text x="57.0823%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="56.8323%" y="245" width="0.0776%" height="15" fill="rgb(209,34,43)" fg:x="732" fg:w="1"/><text x="57.0823%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="56.8323%" y="229" width="0.0776%" height="15" fill="rgb(223,11,35)" fg:x="732" fg:w="1"/><text x="57.0823%" y="239.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="56.8323%" y="325" width="0.1553%" height="15" fill="rgb(251,219,26)" fg:x="732" fg:w="2"/><text x="57.0823%" y="335.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="56.8323%" y="309" width="0.1553%" height="15" fill="rgb(231,119,3)" fg:x="732" fg:w="2"/><text x="57.0823%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="56.8323%" y="293" width="0.1553%" height="15" fill="rgb(216,97,11)" fg:x="732" fg:w="2"/><text x="57.0823%" y="303.50"></text></g><g><title>__snprintf (1 samples, 0.08%)</title><rect x="56.9099%" y="277" width="0.0776%" height="15" fill="rgb(223,59,9)" fg:x="733" fg:w="1"/><text x="57.1599%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="56.9099%" y="261" width="0.0776%" height="15" fill="rgb(233,93,31)" fg:x="733" fg:w="1"/><text x="57.1599%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="56.9099%" y="245" width="0.0776%" height="15" fill="rgb(239,81,33)" fg:x="733" fg:w="1"/><text x="57.1599%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="56.9099%" y="229" width="0.0776%" height="15" fill="rgb(213,120,34)" fg:x="733" fg:w="1"/><text x="57.1599%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="56.9099%" y="213" width="0.0776%" height="15" fill="rgb(243,49,53)" fg:x="733" fg:w="1"/><text x="57.1599%" y="223.50"></text></g><g><title>wgpu::Instance::request_adapter (5 samples, 0.39%)</title><rect x="56.6770%" y="565" width="0.3882%" height="15" fill="rgb(247,216,33)" fg:x="730" fg:w="5"/><text x="56.9270%" y="575.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (5 samples, 0.39%)</title><rect x="56.6770%" y="549" width="0.3882%" height="15" fill="rgb(226,26,14)" fg:x="730" fg:w="5"/><text x="56.9270%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (5 samples, 0.39%)</title><rect x="56.6770%" y="533" width="0.3882%" height="15" fill="rgb(215,49,53)" fg:x="730" fg:w="5"/><text x="56.9270%" y="543.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (5 samples, 0.39%)</title><rect x="56.6770%" y="517" width="0.3882%" height="15" fill="rgb(245,162,40)" fg:x="730" fg:w="5"/><text x="56.9270%" y="527.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (5 samples, 0.39%)</title><rect x="56.6770%" y="501" width="0.3882%" height="15" fill="rgb(229,68,17)" fg:x="730" fg:w="5"/><text x="56.9270%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (5 samples, 0.39%)</title><rect x="56.6770%" y="485" width="0.3882%" height="15" fill="rgb(213,182,10)" fg:x="730" fg:w="5"/><text x="56.9270%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (5 samples, 0.39%)</title><rect x="56.6770%" y="469" width="0.3882%" height="15" fill="rgb(245,125,30)" fg:x="730" fg:w="5"/><text x="56.9270%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (5 samples, 0.39%)</title><rect x="56.6770%" y="453" width="0.3882%" height="15" fill="rgb(232,202,2)" fg:x="730" fg:w="5"/><text x="56.9270%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (5 samples, 0.39%)</title><rect x="56.6770%" y="437" width="0.3882%" height="15" fill="rgb(237,140,51)" fg:x="730" fg:w="5"/><text x="56.9270%" y="447.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather::{{closure}} (5 samples, 0.39%)</title><rect x="56.6770%" y="421" width="0.3882%" height="15" fill="rgb(236,157,25)" fg:x="730" fg:w="5"/><text x="56.9270%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (5 samples, 0.39%)</title><rect x="56.6770%" y="405" width="0.3882%" height="15" fill="rgb(219,209,0)" fg:x="730" fg:w="5"/><text x="56.9270%" y="415.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (5 samples, 0.39%)</title><rect x="56.6770%" y="389" width="0.3882%" height="15" fill="rgb(240,116,54)" fg:x="730" fg:w="5"/><text x="56.9270%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="56.6770%" y="373" width="0.3882%" height="15" fill="rgb(216,10,36)" fg:x="730" fg:w="5"/><text x="56.9270%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="56.6770%" y="357" width="0.3882%" height="15" fill="rgb(222,72,44)" fg:x="730" fg:w="5"/><text x="56.9270%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="56.8323%" y="341" width="0.2329%" height="15" fill="rgb(232,159,9)" fg:x="732" fg:w="3"/><text x="57.0823%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="56.9876%" y="325" width="0.0776%" height="15" fill="rgb(210,39,32)" fg:x="734" fg:w="1"/><text x="57.2376%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="56.9876%" y="309" width="0.0776%" height="15" fill="rgb(216,194,45)" fg:x="734" fg:w="1"/><text x="57.2376%" y="319.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="325" width="0.0776%" height="15" fill="rgb(218,18,35)" fg:x="735" fg:w="1"/><text x="57.3152%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="309" width="0.0776%" height="15" fill="rgb(207,83,51)" fg:x="735" fg:w="1"/><text x="57.3152%" y="319.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="293" width="0.0776%" height="15" fill="rgb(225,63,43)" fg:x="735" fg:w="1"/><text x="57.3152%" y="303.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="277" width="0.0776%" height="15" fill="rgb(207,57,36)" fg:x="735" fg:w="1"/><text x="57.3152%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="261" width="0.0776%" height="15" fill="rgb(216,99,33)" fg:x="735" fg:w="1"/><text x="57.3152%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="245" width="0.0776%" height="15" fill="rgb(225,42,16)" fg:x="735" fg:w="1"/><text x="57.3152%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="229" width="0.0776%" height="15" fill="rgb(220,201,45)" fg:x="735" fg:w="1"/><text x="57.3152%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="213" width="0.0776%" height="15" fill="rgb(225,33,4)" fg:x="735" fg:w="1"/><text x="57.3152%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="197" width="0.0776%" height="15" fill="rgb(224,33,50)" fg:x="735" fg:w="1"/><text x="57.3152%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="181" width="0.0776%" height="15" fill="rgb(246,198,51)" fg:x="735" fg:w="1"/><text x="57.3152%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.0652%" y="165" width="0.0776%" height="15" fill="rgb(205,22,4)" fg:x="735" fg:w="1"/><text x="57.3152%" y="175.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.62%)</title><rect x="56.6770%" y="597" width="0.6211%" height="15" fill="rgb(206,3,8)" fg:x="730" fg:w="8"/><text x="56.9270%" y="607.50"></text></g><g><title>framer::renderer::State::new::{{closure}} (8 samples, 0.62%)</title><rect x="56.6770%" y="581" width="0.6211%" height="15" fill="rgb(251,23,15)" fg:x="730" fg:w="8"/><text x="56.9270%" y="591.50"></text></g><g><title>wgpu::Surface::configure (3 samples, 0.23%)</title><rect x="57.0652%" y="565" width="0.2329%" height="15" fill="rgb(252,88,28)" fg:x="735" fg:w="3"/><text x="57.3152%" y="575.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (3 samples, 0.23%)</title><rect x="57.0652%" y="549" width="0.2329%" height="15" fill="rgb(212,127,14)" fg:x="735" fg:w="3"/><text x="57.3152%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (3 samples, 0.23%)</title><rect x="57.0652%" y="533" width="0.2329%" height="15" fill="rgb(247,145,37)" fg:x="735" fg:w="3"/><text x="57.3152%" y="543.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (3 samples, 0.23%)</title><rect x="57.0652%" y="517" width="0.2329%" height="15" fill="rgb(209,117,53)" fg:x="735" fg:w="3"/><text x="57.3152%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (3 samples, 0.23%)</title><rect x="57.0652%" y="501" width="0.2329%" height="15" fill="rgb(212,90,42)" fg:x="735" fg:w="3"/><text x="57.3152%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (3 samples, 0.23%)</title><rect x="57.0652%" y="485" width="0.2329%" height="15" fill="rgb(218,164,37)" fg:x="735" fg:w="3"/><text x="57.3152%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (3 samples, 0.23%)</title><rect x="57.0652%" y="469" width="0.2329%" height="15" fill="rgb(246,65,34)" fg:x="735" fg:w="3"/><text x="57.3152%" y="479.50"></text></g><g><title>[libvulkan.so.1.3.245] (3 samples, 0.23%)</title><rect x="57.0652%" y="453" width="0.2329%" height="15" fill="rgb(231,100,33)" fg:x="735" fg:w="3"/><text x="57.3152%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="57.0652%" y="437" width="0.2329%" height="15" fill="rgb(228,126,14)" fg:x="735" fg:w="3"/><text x="57.3152%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="57.0652%" y="421" width="0.2329%" height="15" fill="rgb(215,173,21)" fg:x="735" fg:w="3"/><text x="57.3152%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="57.0652%" y="405" width="0.2329%" height="15" fill="rgb(210,6,40)" fg:x="735" fg:w="3"/><text x="57.3152%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="57.0652%" y="389" width="0.2329%" height="15" fill="rgb(212,48,18)" fg:x="735" fg:w="3"/><text x="57.3152%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="57.0652%" y="373" width="0.2329%" height="15" fill="rgb(230,214,11)" fg:x="735" fg:w="3"/><text x="57.3152%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="57.0652%" y="357" width="0.2329%" height="15" fill="rgb(254,105,39)" fg:x="735" fg:w="3"/><text x="57.3152%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="57.0652%" y="341" width="0.2329%" height="15" fill="rgb(245,158,5)" fg:x="735" fg:w="3"/><text x="57.3152%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="57.1429%" y="325" width="0.1553%" height="15" fill="rgb(249,208,11)" fg:x="736" fg:w="2"/><text x="57.3929%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.2205%" y="309" width="0.0776%" height="15" fill="rgb(210,39,28)" fg:x="737" fg:w="1"/><text x="57.4705%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="57.2205%" y="293" width="0.0776%" height="15" fill="rgb(211,56,53)" fg:x="737" fg:w="1"/><text x="57.4705%" y="303.50"></text></g><g><title>framer::renderer::text::TextState::new (1 samples, 0.08%)</title><rect x="57.2981%" y="597" width="0.0776%" height="15" fill="rgb(226,201,30)" fg:x="738" fg:w="1"/><text x="57.5481%" y="607.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.08%)</title><rect x="57.2981%" y="581" width="0.0776%" height="15" fill="rgb(239,101,34)" fg:x="738" fg:w="1"/><text x="57.5481%" y="591.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.08%)</title><rect x="57.2981%" y="565" width="0.0776%" height="15" fill="rgb(226,209,5)" fg:x="738" fg:w="1"/><text x="57.5481%" y="575.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.08%)</title><rect x="57.2981%" y="549" width="0.0776%" height="15" fill="rgb(250,105,47)" fg:x="738" fg:w="1"/><text x="57.5481%" y="559.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.08%)</title><rect x="57.2981%" y="533" width="0.0776%" height="15" fill="rgb(230,72,3)" fg:x="738" fg:w="1"/><text x="57.5481%" y="543.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_shader_module (1 samples, 0.08%)</title><rect x="57.2981%" y="517" width="0.0776%" height="15" fill="rgb(232,218,39)" fg:x="738" fg:w="1"/><text x="57.5481%" y="527.50"></text></g><g><title>naga::valid::Validator::validate (1 samples, 0.08%)</title><rect x="57.2981%" y="501" width="0.0776%" height="15" fill="rgb(248,166,6)" fg:x="738" fg:w="1"/><text x="57.5481%" y="511.50"></text></g><g><title>naga::valid::function::&lt;impl naga::valid::Validator&gt;::validate_function (1 samples, 0.08%)</title><rect x="57.2981%" y="485" width="0.0776%" height="15" fill="rgb(247,89,20)" fg:x="738" fg:w="1"/><text x="57.5481%" y="495.50"></text></g><g><title>naga::valid::analyzer::&lt;impl naga::valid::ModuleInfo&gt;::process_function (1 samples, 0.08%)</title><rect x="57.2981%" y="469" width="0.0776%" height="15" fill="rgb(248,130,54)" fg:x="738" fg:w="1"/><text x="57.5481%" y="479.50"></text></g><g><title>naga::valid::analyzer::FunctionInfo::process_expression (1 samples, 0.08%)</title><rect x="57.2981%" y="453" width="0.0776%" height="15" fill="rgb(234,196,4)" fg:x="738" fg:w="1"/><text x="57.5481%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="57.3758%" y="357" width="0.0776%" height="15" fill="rgb(250,143,31)" fg:x="739" fg:w="1"/><text x="57.6258%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.08%)</title><rect x="57.3758%" y="341" width="0.0776%" height="15" fill="rgb(211,110,34)" fg:x="739" fg:w="1"/><text x="57.6258%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.08%)</title><rect x="57.3758%" y="325" width="0.0776%" height="15" fill="rgb(215,124,48)" fg:x="739" fg:w="1"/><text x="57.6258%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.16%)</title><rect x="57.3758%" y="485" width="0.1553%" height="15" fill="rgb(216,46,13)" fg:x="739" fg:w="2"/><text x="57.6258%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="57.3758%" y="469" width="0.1553%" height="15" fill="rgb(205,184,25)" fg:x="739" fg:w="2"/><text x="57.6258%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.16%)</title><rect x="57.3758%" y="453" width="0.1553%" height="15" fill="rgb(228,1,10)" fg:x="739" fg:w="2"/><text x="57.6258%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.16%)</title><rect x="57.3758%" y="437" width="0.1553%" height="15" fill="rgb(213,116,27)" fg:x="739" fg:w="2"/><text x="57.6258%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.16%)</title><rect x="57.3758%" y="421" width="0.1553%" height="15" fill="rgb(241,95,50)" fg:x="739" fg:w="2"/><text x="57.6258%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.16%)</title><rect x="57.3758%" y="405" width="0.1553%" height="15" fill="rgb(238,48,32)" fg:x="739" fg:w="2"/><text x="57.6258%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.16%)</title><rect x="57.3758%" y="389" width="0.1553%" height="15" fill="rgb(235,113,49)" fg:x="739" fg:w="2"/><text x="57.6258%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.16%)</title><rect x="57.3758%" y="373" width="0.1553%" height="15" fill="rgb(205,127,43)" fg:x="739" fg:w="2"/><text x="57.6258%" y="383.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.08%)</title><rect x="57.4534%" y="357" width="0.0776%" height="15" fill="rgb(250,162,2)" fg:x="740" fg:w="1"/><text x="57.7034%" y="367.50"></text></g><g><title>&lt;framer::renderer::atlas::ImageExporterF32S8&lt;T&gt; as texture_packer::exporter::Exporter&lt;T&gt;&gt;::export (3 samples, 0.23%)</title><rect x="57.3758%" y="565" width="0.2329%" height="15" fill="rgb(220,13,41)" fg:x="739" fg:w="3"/><text x="57.6258%" y="575.50"></text></g><g><title>&lt;texture_packer::texture_packer::TexturePacker&lt;T,K&gt; as texture_packer::texture::Texture&gt;::get (3 samples, 0.23%)</title><rect x="57.3758%" y="549" width="0.2329%" height="15" fill="rgb(249,221,25)" fg:x="739" fg:w="3"/><text x="57.6258%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.23%)</title><rect x="57.3758%" y="533" width="0.2329%" height="15" fill="rgb(215,208,19)" fg:x="739" fg:w="3"/><text x="57.6258%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.23%)</title><rect x="57.3758%" y="517" width="0.2329%" height="15" fill="rgb(236,175,2)" fg:x="739" fg:w="3"/><text x="57.6258%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.23%)</title><rect x="57.3758%" y="501" width="0.2329%" height="15" fill="rgb(241,52,2)" fg:x="739" fg:w="3"/><text x="57.6258%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.08%)</title><rect x="57.5311%" y="485" width="0.0776%" height="15" fill="rgb(248,140,14)" fg:x="741" fg:w="1"/><text x="57.7811%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.08%)</title><rect x="57.5311%" y="469" width="0.0776%" height="15" fill="rgb(253,22,42)" fg:x="741" fg:w="1"/><text x="57.7811%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.08%)</title><rect x="57.5311%" y="453" width="0.0776%" height="15" fill="rgb(234,61,47)" fg:x="741" fg:w="1"/><text x="57.7811%" y="463.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.08%)</title><rect x="57.5311%" y="437" width="0.0776%" height="15" fill="rgb(208,226,15)" fg:x="741" fg:w="1"/><text x="57.7811%" y="447.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,alloc::vec::Vec&lt;&lt;P as image::traits::Pixel&gt;::Subpixel&gt;&gt;::new (1 samples, 0.08%)</title><rect x="57.6087%" y="549" width="0.0776%" height="15" fill="rgb(217,221,4)" fg:x="742" fg:w="1"/><text x="57.8587%" y="559.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.08%)</title><rect x="57.6087%" y="533" width="0.0776%" height="15" fill="rgb(212,174,34)" fg:x="742" fg:w="1"/><text x="57.8587%" y="543.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.08%)</title><rect x="57.6087%" y="517" width="0.0776%" height="15" fill="rgb(253,83,4)" fg:x="742" fg:w="1"/><text x="57.8587%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.08%)</title><rect x="57.6087%" y="501" width="0.0776%" height="15" fill="rgb(250,195,49)" fg:x="742" fg:w="1"/><text x="57.8587%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.6087%" y="485" width="0.0776%" height="15" fill="rgb(241,192,25)" fg:x="742" fg:w="1"/><text x="57.8587%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1 samples, 0.08%)</title><rect x="57.6087%" y="469" width="0.0776%" height="15" fill="rgb(208,124,10)" fg:x="742" fg:w="1"/><text x="57.8587%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.6087%" y="453" width="0.0776%" height="15" fill="rgb(222,33,0)" fg:x="742" fg:w="1"/><text x="57.8587%" y="463.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1 samples, 0.08%)</title><rect x="57.6087%" y="437" width="0.0776%" height="15" fill="rgb(234,209,28)" fg:x="742" fg:w="1"/><text x="57.8587%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="57.6087%" y="421" width="0.0776%" height="15" fill="rgb(224,11,23)" fg:x="742" fg:w="1"/><text x="57.8587%" y="431.50"></text></g><g><title>msdfgen::LinearSegment::signedDistance (4 samples, 0.31%)</title><rect x="58.4627%" y="485" width="0.3106%" height="15" fill="rgb(232,99,1)" fg:x="753" fg:w="4"/><text x="58.7127%" y="495.50"></text></g><g><title>msdfgen::Vector2::normalize (2 samples, 0.16%)</title><rect x="58.6180%" y="469" width="0.1553%" height="15" fill="rgb(237,95,45)" fg:x="755" fg:w="2"/><text x="58.8680%" y="479.50"></text></g><g><title>msdfgen::Vector2::length (5 samples, 0.39%)</title><rect x="59.1615%" y="469" width="0.3882%" height="15" fill="rgb(208,109,11)" fg:x="762" fg:w="5"/><text x="59.4115%" y="479.50"></text></g><g><title>msdfgen::PseudoDistanceSelectorBase::isEdgeRelevant (11 samples, 0.85%)</title><rect x="58.7733%" y="485" width="0.8540%" height="15" fill="rgb(216,190,48)" fg:x="757" fg:w="11"/><text x="59.0233%" y="495.50"></text></g><g><title>msdfgen::Vector2::operator- (1 samples, 0.08%)</title><rect x="59.5497%" y="469" width="0.0776%" height="15" fill="rgb(251,171,36)" fg:x="767" fg:w="1"/><text x="59.7997%" y="479.50"></text></g><g><title>msdfgen::Vector2::Vector2 (1 samples, 0.08%)</title><rect x="59.5497%" y="453" width="0.0776%" height="15" fill="rgb(230,62,22)" fg:x="767" fg:w="1"/><text x="59.7997%" y="463.50"></text></g><g><title>msdfgen::Vector2::operator+ (2 samples, 0.16%)</title><rect x="59.7050%" y="469" width="0.1553%" height="15" fill="rgb(225,114,35)" fg:x="769" fg:w="2"/><text x="59.9550%" y="479.50"></text></g><g><title>msdfgen::Vector2::operator- (1 samples, 0.08%)</title><rect x="59.8602%" y="469" width="0.0776%" height="15" fill="rgb(215,118,42)" fg:x="771" fg:w="1"/><text x="60.1102%" y="479.50"></text></g><g><title>msdfgen::QuadraticSegment::direction (5 samples, 0.39%)</title><rect x="59.6273%" y="485" width="0.3882%" height="15" fill="rgb(243,119,21)" fg:x="768" fg:w="5"/><text x="59.8773%" y="495.50"></text></g><g><title>msdfgen::operator* (1 samples, 0.08%)</title><rect x="59.9379%" y="469" width="0.0776%" height="15" fill="rgb(252,177,53)" fg:x="772" fg:w="1"/><text x="60.1879%" y="479.50"></text></g><g><title>msdfgen::Vector2::Vector2 (1 samples, 0.08%)</title><rect x="59.9379%" y="453" width="0.0776%" height="15" fill="rgb(237,209,29)" fg:x="772" fg:w="1"/><text x="60.1879%" y="463.50"></text></g><g><title>msdfgen::QuadraticSegment::point (3 samples, 0.23%)</title><rect x="60.0155%" y="485" width="0.2329%" height="15" fill="rgb(212,65,23)" fg:x="773" fg:w="3"/><text x="60.2655%" y="495.50"></text></g><g><title>msdfgen::operator* (1 samples, 0.08%)</title><rect x="60.1708%" y="469" width="0.0776%" height="15" fill="rgb(230,222,46)" fg:x="775" fg:w="1"/><text x="60.4208%" y="479.50"></text></g><g><title>msdfgen::Vector2::length (2 samples, 0.16%)</title><rect x="60.2484%" y="469" width="0.1553%" height="15" fill="rgb(215,135,32)" fg:x="776" fg:w="2"/><text x="60.4984%" y="479.50"></text></g><g><title>msdfgen::Vector2::operator- (1 samples, 0.08%)</title><rect x="60.4037%" y="469" width="0.0776%" height="15" fill="rgb(246,101,22)" fg:x="778" fg:w="1"/><text x="60.6537%" y="479.50"></text></g><g><title>msdfgen::crossProduct (1 samples, 0.08%)</title><rect x="60.4814%" y="469" width="0.0776%" height="15" fill="rgb(206,107,13)" fg:x="779" fg:w="1"/><text x="60.7314%" y="479.50"></text></g><g><title>[libm.so.6] (1 samples, 0.08%)</title><rect x="60.6366%" y="453" width="0.0776%" height="15" fill="rgb(250,100,44)" fg:x="781" fg:w="1"/><text x="60.8866%" y="463.50"></text></g><g><title>msdfgen::QuadraticSegment::signedDistance (7 samples, 0.54%)</title><rect x="60.2484%" y="485" width="0.5435%" height="15" fill="rgb(231,147,38)" fg:x="776" fg:w="7"/><text x="60.4984%" y="495.50"></text></g><g><title>msdfgen::solveCubic (3 samples, 0.23%)</title><rect x="60.5590%" y="469" width="0.2329%" height="15" fill="rgb(229,8,40)" fg:x="780" fg:w="3"/><text x="60.8090%" y="479.50"></text></g><g><title>pow (1 samples, 0.08%)</title><rect x="60.7143%" y="453" width="0.0776%" height="15" fill="rgb(221,135,30)" fg:x="782" fg:w="1"/><text x="60.9643%" y="463.50"></text></g><g><title>[libm.so.6] (1 samples, 0.08%)</title><rect x="60.7143%" y="437" width="0.0776%" height="15" fill="rgb(249,193,18)" fg:x="782" fg:w="1"/><text x="60.9643%" y="447.50"></text></g><g><title>msdfgen::Vector2::normalize (11 samples, 0.85%)</title><rect x="60.7919%" y="485" width="0.8540%" height="15" fill="rgb(209,133,39)" fg:x="783" fg:w="11"/><text x="61.0419%" y="495.50"></text></g><g><title>msdfgen::Vector2::length (5 samples, 0.39%)</title><rect x="61.2578%" y="469" width="0.3882%" height="15" fill="rgb(232,100,14)" fg:x="789" fg:w="5"/><text x="61.5078%" y="479.50"></text></g><g><title>msdfgen::Vector2::operator+ (1 samples, 0.08%)</title><rect x="61.6460%" y="485" width="0.0776%" height="15" fill="rgb(224,185,1)" fg:x="794" fg:w="1"/><text x="61.8960%" y="495.50"></text></g><g><title>msdfgen::MultiDistanceSelector::addEdge (53 samples, 4.11%)</title><rect x="57.7640%" y="501" width="4.1149%" height="15" fill="rgb(223,139,8)" fg:x="744" fg:w="53"/><text x="58.0140%" y="511.50">msdf..</text></g><g><title>msdfgen::Vector2::operator- (2 samples, 0.16%)</title><rect x="61.7236%" y="485" width="0.1553%" height="15" fill="rgb(232,213,38)" fg:x="795" fg:w="2"/><text x="61.9736%" y="495.50"></text></g><g><title>msdfgen::QuadraticSegment::direction (1 samples, 0.08%)</title><rect x="62.5000%" y="421" width="0.0776%" height="15" fill="rgb(207,94,22)" fg:x="805" fg:w="1"/><text x="62.7500%" y="431.50"></text></g><g><title>msdfgen::Vector2::operator! (1 samples, 0.08%)</title><rect x="62.5000%" y="405" width="0.0776%" height="15" fill="rgb(219,183,54)" fg:x="805" fg:w="1"/><text x="62.7500%" y="415.50"></text></g><g><title>msdfgen::QuadraticSegment::point (1 samples, 0.08%)</title><rect x="62.5776%" y="421" width="0.0776%" height="15" fill="rgb(216,185,54)" fg:x="806" fg:w="1"/><text x="62.8276%" y="431.50"></text></g><g><title>msdfgen::Vector2::operator+ (1 samples, 0.08%)</title><rect x="62.5776%" y="405" width="0.0776%" height="15" fill="rgb(254,217,39)" fg:x="806" fg:w="1"/><text x="62.8276%" y="415.50"></text></g><g><title>msdfgen::Vector2::normalize (2 samples, 0.16%)</title><rect x="62.6553%" y="421" width="0.1553%" height="15" fill="rgb(240,178,23)" fg:x="807" fg:w="2"/><text x="62.9053%" y="431.50"></text></g><g><title>msdfgen::Vector2::length (1 samples, 0.08%)</title><rect x="62.7329%" y="405" width="0.0776%" height="15" fill="rgb(218,11,47)" fg:x="808" fg:w="1"/><text x="62.9829%" y="415.50"></text></g><g><title>msdfgen::MultiAndTrueDistanceSelector::distance (10 samples, 0.78%)</title><rect x="62.1118%" y="485" width="0.7764%" height="15" fill="rgb(218,51,51)" fg:x="800" fg:w="10"/><text x="62.3618%" y="495.50"></text></g><g><title>msdfgen::MultiDistanceSelector::distance (10 samples, 0.78%)</title><rect x="62.1118%" y="469" width="0.7764%" height="15" fill="rgb(238,126,27)" fg:x="800" fg:w="10"/><text x="62.3618%" y="479.50"></text></g><g><title>msdfgen::PseudoDistanceSelectorBase::computeDistance (10 samples, 0.78%)</title><rect x="62.1118%" y="453" width="0.7764%" height="15" fill="rgb(249,202,22)" fg:x="800" fg:w="10"/><text x="62.3618%" y="463.50"></text></g><g><title>msdfgen::EdgeSegment::distanceToPseudoDistance (9 samples, 0.70%)</title><rect x="62.1894%" y="437" width="0.6988%" height="15" fill="rgb(254,195,49)" fg:x="801" fg:w="9"/><text x="62.4394%" y="447.50"></text></g><g><title>msdfgen::dotProduct (1 samples, 0.08%)</title><rect x="62.8106%" y="421" width="0.0776%" height="15" fill="rgb(208,123,14)" fg:x="809" fg:w="1"/><text x="63.0606%" y="431.50"></text></g><g><title>msdfgen::MultiDistanceSelector::reset (6 samples, 0.47%)</title><rect x="62.8882%" y="485" width="0.4658%" height="15" fill="rgb(224,200,8)" fg:x="810" fg:w="6"/><text x="63.1382%" y="495.50"></text></g><g><title>msdfgen::Vector2::length (3 samples, 0.23%)</title><rect x="63.1211%" y="469" width="0.2329%" height="15" fill="rgb(217,61,36)" fg:x="813" fg:w="3"/><text x="63.3711%" y="479.50"></text></g><g><title>msdfgen::generateMTSDF (74 samples, 5.75%)</title><rect x="57.6863%" y="549" width="5.7453%" height="15" fill="rgb(206,35,45)" fg:x="743" fg:w="74"/><text x="57.9363%" y="559.50">msdfgen..</text></g><g><title>msdfgen::generateDistanceField&lt;msdfgen::OverlappingContourCombiner&lt;msdfgen::MultiAndTrueDistanceSelector&gt; &gt; (74 samples, 5.75%)</title><rect x="57.6863%" y="533" width="5.7453%" height="15" fill="rgb(217,65,33)" fg:x="743" fg:w="74"/><text x="57.9363%" y="543.50">msdfgen..</text></g><g><title>msdfgen::ShapeDistanceFinder&lt;msdfgen::OverlappingContourCombiner&lt;msdfgen::MultiAndTrueDistanceSelector&gt; &gt;::distance (73 samples, 5.67%)</title><rect x="57.7640%" y="517" width="5.6677%" height="15" fill="rgb(222,158,48)" fg:x="744" fg:w="73"/><text x="58.0140%" y="527.50">msdfgen..</text></g><g><title>msdfgen::OverlappingContourCombiner&lt;msdfgen::MultiAndTrueDistanceSelector&gt;::distance (20 samples, 1.55%)</title><rect x="61.8789%" y="501" width="1.5528%" height="15" fill="rgb(254,2,54)" fg:x="797" fg:w="20"/><text x="62.1289%" y="511.50"></text></g><g><title>msdfgen::PseudoDistanceSelectorBase::PseudoDistanceSelectorBase (1 samples, 0.08%)</title><rect x="63.3540%" y="485" width="0.0776%" height="15" fill="rgb(250,143,38)" fg:x="816" fg:w="1"/><text x="63.6040%" y="495.50"></text></g><g><title>msdfgen::MSDFErrorCorrection::findErrors&lt;4&gt; (5 samples, 0.39%)</title><rect x="63.4317%" y="533" width="0.3882%" height="15" fill="rgb(248,25,0)" fg:x="817" fg:w="5"/><text x="63.6817%" y="543.50"></text></g><g><title>msdfgen::hasDiagonalArtifact&lt;msdfgen::BaseArtifactClassifier&gt; (5 samples, 0.39%)</title><rect x="63.4317%" y="517" width="0.3882%" height="15" fill="rgb(206,152,27)" fg:x="817" fg:w="5"/><text x="63.6817%" y="527.50"></text></g><g><title>msdfgen::hasDiagonalArtifactInner&lt;msdfgen::BaseArtifactClassifier&gt; (2 samples, 0.16%)</title><rect x="63.6646%" y="501" width="0.1553%" height="15" fill="rgb(240,77,30)" fg:x="820" fg:w="2"/><text x="63.9146%" y="511.50"></text></g><g><title>msdfgen::solveQuadratic (1 samples, 0.08%)</title><rect x="63.7422%" y="485" width="0.0776%" height="15" fill="rgb(231,5,3)" fg:x="821" fg:w="1"/><text x="63.9922%" y="495.50"></text></g><g><title>msdfgen::hasDiagonalArtifact&lt;msdfgen::ShapeDistanceChecker&lt;msdfgen::OverlappingContourCombiner, 4&gt;::ArtifactClassifier&gt; (2 samples, 0.16%)</title><rect x="63.8975%" y="517" width="0.1553%" height="15" fill="rgb(207,226,32)" fg:x="823" fg:w="2"/><text x="64.1475%" y="527.50"></text></g><g><title>msdfgen::hasDiagonalArtifactInner&lt;msdfgen::ShapeDistanceChecker&lt;msdfgen::OverlappingContourCombiner, 4&gt;::ArtifactClassifier&gt; (1 samples, 0.08%)</title><rect x="63.9752%" y="501" width="0.0776%" height="15" fill="rgb(222,207,47)" fg:x="824" fg:w="1"/><text x="64.2252%" y="511.50"></text></g><g><title>framer::renderer::text::TextState::push (87 samples, 6.75%)</title><rect x="57.3758%" y="597" width="6.7547%" height="15" fill="rgb(229,115,45)" fg:x="739" fg:w="87"/><text x="57.6258%" y="607.50">framer::r..</text></g><g><title>framer::renderer::atlas::FontAtlasGenerator::generate (87 samples, 6.75%)</title><rect x="57.3758%" y="581" width="6.7547%" height="15" fill="rgb(224,191,6)" fg:x="739" fg:w="87"/><text x="57.6258%" y="591.50">framer::r..</text></g><g><title>msdf::ColoredShape::generate_mtsdf (84 samples, 6.52%)</title><rect x="57.6087%" y="565" width="6.5217%" height="15" fill="rgb(230,227,24)" fg:x="742" fg:w="84"/><text x="57.8587%" y="575.50">msdf::Col..</text></g><g><title>msdfgen::msdfErrorCorrection (9 samples, 0.70%)</title><rect x="63.4317%" y="549" width="0.6988%" height="15" fill="rgb(228,80,19)" fg:x="817" fg:w="9"/><text x="63.6817%" y="559.50"></text></g><g><title>msdfgen::MSDFErrorCorrection::findErrors&lt;msdfgen::OverlappingContourCombiner, 4&gt; (4 samples, 0.31%)</title><rect x="63.8199%" y="533" width="0.3106%" height="15" fill="rgb(247,229,0)" fg:x="822" fg:w="4"/><text x="64.0699%" y="543.50"></text></g><g><title>msdfgen::hasLinearArtifact&lt;msdfgen::ShapeDistanceChecker&lt;msdfgen::OverlappingContourCombiner, 4&gt;::ArtifactClassifier&gt; (1 samples, 0.08%)</title><rect x="64.0528%" y="517" width="0.0776%" height="15" fill="rgb(237,194,15)" fg:x="825" fg:w="1"/><text x="64.3028%" y="527.50"></text></g><g><title>msdfgen::ShapeDistanceFinder&lt;msdfgen::OverlappingContourCombiner&lt;msdfgen::PseudoDistanceSelector&gt; &gt;::distance (1 samples, 0.08%)</title><rect x="64.0528%" y="501" width="0.0776%" height="15" fill="rgb(219,203,20)" fg:x="825" fg:w="1"/><text x="64.3028%" y="511.50"></text></g><g><title>msdfgen::PseudoDistanceSelector::addEdge (1 samples, 0.08%)</title><rect x="64.0528%" y="485" width="0.0776%" height="15" fill="rgb(234,128,8)" fg:x="825" fg:w="1"/><text x="64.3028%" y="495.50"></text></g><g><title>msdfgen::Vector2::normalize (1 samples, 0.08%)</title><rect x="64.0528%" y="469" width="0.0776%" height="15" fill="rgb(248,202,8)" fg:x="825" fg:w="1"/><text x="64.3028%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu::BindGroup&gt;&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="533" width="0.0776%" height="15" fill="rgb(206,104,37)" fg:x="826" fg:w="1"/><text x="64.3804%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BindGroup&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="517" width="0.0776%" height="15" fill="rgb(223,8,27)" fg:x="826" fg:w="1"/><text x="64.3804%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wgpu::context::DynContext&gt;&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="501" width="0.0776%" height="15" fill="rgb(216,217,28)" fg:x="826" fg:w="1"/><text x="64.3804%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.1304%" y="485" width="0.0776%" height="15" fill="rgb(249,199,1)" fg:x="826" fg:w="1"/><text x="64.3804%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="64.1304%" y="469" width="0.0776%" height="15" fill="rgb(240,85,17)" fg:x="826" fg:w="1"/><text x="64.3804%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn wgpu::context::DynContext&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="453" width="0.0776%" height="15" fill="rgb(206,108,45)" fg:x="826" fg:w="1"/><text x="64.3804%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::hub::Global&lt;wgpu_core::hub::IdentityManagerFactory&gt;&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="437" width="0.0776%" height="15" fill="rgb(245,210,41)" fg:x="826" fg:w="1"/><text x="64.3804%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::instance::Instance&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="421" width="0.0776%" height="15" fill="rgb(206,13,37)" fg:x="826" fg:w="1"/><text x="64.3804%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_hal::gles::egl::Instance&gt;&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="405" width="0.0776%" height="15" fill="rgb(250,61,18)" fg:x="826" fg:w="1"/><text x="64.3804%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_hal::gles::egl::Instance&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="389" width="0.0776%" height="15" fill="rgb(235,172,48)" fg:x="826" fg:w="1"/><text x="64.3804%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_hal::gles::egl::Inner&gt;&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="373" width="0.0776%" height="15" fill="rgb(249,201,17)" fg:x="826" fg:w="1"/><text x="64.3804%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;wgpu_hal::gles::egl::Inner&gt;&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="357" width="0.0776%" height="15" fill="rgb(219,208,6)" fg:x="826" fg:w="1"/><text x="64.3804%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_hal::gles::egl::Inner&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="341" width="0.0776%" height="15" fill="rgb(248,31,23)" fg:x="826" fg:w="1"/><text x="64.3804%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_hal::gles::egl::EglContext&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="325" width="0.0776%" height="15" fill="rgb(245,15,42)" fg:x="826" fg:w="1"/><text x="64.3804%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;khronos_egl::Instance&lt;khronos_egl::Dynamic&lt;libloading::safe::Library,khronos_egl::EGL1_4&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="64.1304%" y="309" width="0.0776%" height="15" fill="rgb(222,217,39)" fg:x="826" fg:w="1"/><text x="64.3804%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.1304%" y="293" width="0.0776%" height="15" fill="rgb(210,219,27)" fg:x="826" fg:w="1"/><text x="64.3804%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.08%)</title><rect x="64.1304%" y="277" width="0.0776%" height="15" fill="rgb(252,166,36)" fg:x="826" fg:w="1"/><text x="64.3804%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.08%)</title><rect x="64.1304%" y="261" width="0.0776%" height="15" fill="rgb(245,132,34)" fg:x="826" fg:w="1"/><text x="64.3804%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;framer::window::Window::launch::{{closure}}::{{closure}}&gt; (22 samples, 1.71%)</title><rect x="64.2081%" y="533" width="1.7081%" height="15" fill="rgb(236,54,3)" fg:x="827" fg:w="22"/><text x="64.4581%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;framer::renderer::State&gt; (22 samples, 1.71%)</title><rect x="64.2081%" y="517" width="1.7081%" height="15" fill="rgb(241,173,43)" fg:x="827" fg:w="22"/><text x="64.4581%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Surface&gt; (22 samples, 1.71%)</title><rect x="64.2081%" y="501" width="1.7081%" height="15" fill="rgb(215,190,9)" fg:x="827" fg:w="22"/><text x="64.4581%" y="511.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_drop (22 samples, 1.71%)</title><rect x="64.2081%" y="485" width="1.7081%" height="15" fill="rgb(242,101,16)" fg:x="827" fg:w="22"/><text x="64.4581%" y="495.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_drop::unconfigure (22 samples, 1.71%)</title><rect x="64.2081%" y="469" width="1.7081%" height="15" fill="rgb(223,190,21)" fg:x="827" fg:w="22"/><text x="64.4581%" y="479.50"></text></g><g><title>wgpu_core::hub::Hub&lt;A,F&gt;::surface_unconfigure (22 samples, 1.71%)</title><rect x="64.2081%" y="453" width="1.7081%" height="15" fill="rgb(215,228,25)" fg:x="827" fg:w="22"/><text x="64.4581%" y="463.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::unconfigure (22 samples, 1.71%)</title><rect x="64.2081%" y="437" width="1.7081%" height="15" fill="rgb(225,36,22)" fg:x="827" fg:w="22"/><text x="64.4581%" y="447.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::destroy_swapchain (22 samples, 1.71%)</title><rect x="64.2081%" y="421" width="1.7081%" height="15" fill="rgb(251,106,46)" fg:x="827" fg:w="22"/><text x="64.4581%" y="431.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (22 samples, 1.71%)</title><rect x="64.2081%" y="405" width="1.7081%" height="15" fill="rgb(208,90,1)" fg:x="827" fg:w="22"/><text x="64.4581%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (22 samples, 1.71%)</title><rect x="64.2081%" y="389" width="1.7081%" height="15" fill="rgb(243,10,4)" fg:x="827" fg:w="22"/><text x="64.4581%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (22 samples, 1.71%)</title><rect x="64.2081%" y="373" width="1.7081%" height="15" fill="rgb(212,137,27)" fg:x="827" fg:w="22"/><text x="64.4581%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (22 samples, 1.71%)</title><rect x="64.2081%" y="357" width="1.7081%" height="15" fill="rgb(231,220,49)" fg:x="827" fg:w="22"/><text x="64.4581%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (22 samples, 1.71%)</title><rect x="64.2081%" y="341" width="1.7081%" height="15" fill="rgb(237,96,20)" fg:x="827" fg:w="22"/><text x="64.4581%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (22 samples, 1.71%)</title><rect x="64.2081%" y="325" width="1.7081%" height="15" fill="rgb(239,229,30)" fg:x="827" fg:w="22"/><text x="64.4581%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="65.8385%" y="309" width="0.0776%" height="15" fill="rgb(219,65,33)" fg:x="848" fg:w="1"/><text x="66.0885%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="65.8385%" y="293" width="0.0776%" height="15" fill="rgb(243,134,7)" fg:x="848" fg:w="1"/><text x="66.0885%" y="303.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="65.8385%" y="277" width="0.0776%" height="15" fill="rgb(216,177,54)" fg:x="848" fg:w="1"/><text x="66.0885%" y="287.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="65.8385%" y="261" width="0.0776%" height="15" fill="rgb(211,160,20)" fg:x="848" fg:w="1"/><text x="66.0885%" y="271.50"></text></g><g><title>[[vdso]] (1 samples, 0.08%)</title><rect x="65.8385%" y="245" width="0.0776%" height="15" fill="rgb(239,85,39)" fg:x="848" fg:w="1"/><text x="66.0885%" y="255.50"></text></g><g><title>mio::poll::Poll::poll (1 samples, 0.08%)</title><rect x="65.9161%" y="533" width="0.0776%" height="15" fill="rgb(232,125,22)" fg:x="849" fg:w="1"/><text x="66.1661%" y="543.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.08%)</title><rect x="65.9161%" y="517" width="0.0776%" height="15" fill="rgb(244,57,34)" fg:x="849" fg:w="1"/><text x="66.1661%" y="527.50"></text></g><g><title>epoll_wait (1 samples, 0.08%)</title><rect x="65.9161%" y="501" width="0.0776%" height="15" fill="rgb(214,203,32)" fg:x="849" fg:w="1"/><text x="66.1661%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3 samples, 0.23%)</title><rect x="65.9938%" y="517" width="0.2329%" height="15" fill="rgb(207,58,43)" fg:x="850" fg:w="3"/><text x="66.2438%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.23%)</title><rect x="65.9938%" y="501" width="0.2329%" height="15" fill="rgb(215,193,15)" fg:x="850" fg:w="3"/><text x="66.2438%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.23%)</title><rect x="65.9938%" y="485" width="0.2329%" height="15" fill="rgb(232,15,44)" fg:x="850" fg:w="3"/><text x="66.2438%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.23%)</title><rect x="65.9938%" y="469" width="0.2329%" height="15" fill="rgb(212,3,48)" fg:x="850" fg:w="3"/><text x="66.2438%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.1491%" y="453" width="0.0776%" height="15" fill="rgb(218,128,7)" fg:x="852" fg:w="1"/><text x="66.3991%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="66.1491%" y="437" width="0.0776%" height="15" fill="rgb(226,216,39)" fg:x="852" fg:w="1"/><text x="66.3991%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.08%)</title><rect x="66.1491%" y="421" width="0.0776%" height="15" fill="rgb(243,47,51)" fg:x="852" fg:w="1"/><text x="66.3991%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.08%)</title><rect x="66.1491%" y="405" width="0.0776%" height="15" fill="rgb(241,183,40)" fg:x="852" fg:w="1"/><text x="66.3991%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.08%)</title><rect x="66.1491%" y="389" width="0.0776%" height="15" fill="rgb(231,217,32)" fg:x="852" fg:w="1"/><text x="66.3991%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.08%)</title><rect x="66.1491%" y="373" width="0.0776%" height="15" fill="rgb(229,61,38)" fg:x="852" fg:w="1"/><text x="66.3991%" y="383.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="66.2267%" y="517" width="0.0776%" height="15" fill="rgb(225,210,5)" fg:x="853" fg:w="1"/><text x="66.4767%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="66.2267%" y="501" width="0.0776%" height="15" fill="rgb(231,79,45)" fg:x="853" fg:w="1"/><text x="66.4767%" y="511.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="66.2267%" y="485" width="0.0776%" height="15" fill="rgb(224,100,7)" fg:x="853" fg:w="1"/><text x="66.4767%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="66.2267%" y="469" width="0.0776%" height="15" fill="rgb(241,198,18)" fg:x="853" fg:w="1"/><text x="66.4767%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="66.2267%" y="453" width="0.0776%" height="15" fill="rgb(252,97,53)" fg:x="853" fg:w="1"/><text x="66.4767%" y="463.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.08%)</title><rect x="66.2267%" y="437" width="0.0776%" height="15" fill="rgb(220,88,7)" fg:x="853" fg:w="1"/><text x="66.4767%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.08%)</title><rect x="66.2267%" y="421" width="0.0776%" height="15" fill="rgb(213,176,14)" fg:x="853" fg:w="1"/><text x="66.4767%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.08%)</title><rect x="66.2267%" y="405" width="0.0776%" height="15" fill="rgb(246,73,7)" fg:x="853" fg:w="1"/><text x="66.4767%" y="415.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 0.08%)</title><rect x="66.2267%" y="389" width="0.0776%" height="15" fill="rgb(245,64,36)" fg:x="853" fg:w="1"/><text x="66.4767%" y="399.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.08%)</title><rect x="66.2267%" y="373" width="0.0776%" height="15" fill="rgb(245,80,10)" fg:x="853" fg:w="1"/><text x="66.4767%" y="383.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.08%)</title><rect x="66.2267%" y="357" width="0.0776%" height="15" fill="rgb(232,107,50)" fg:x="853" fg:w="1"/><text x="66.4767%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.08%)</title><rect x="66.2267%" y="341" width="0.0776%" height="15" fill="rgb(253,3,0)" fg:x="853" fg:w="1"/><text x="66.4767%" y="351.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.08%)</title><rect x="66.3043%" y="469" width="0.0776%" height="15" fill="rgb(212,99,53)" fg:x="854" fg:w="1"/><text x="66.5543%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.08%)</title><rect x="66.3043%" y="453" width="0.0776%" height="15" fill="rgb(249,111,54)" fg:x="854" fg:w="1"/><text x="66.5543%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (1 samples, 0.08%)</title><rect x="66.3820%" y="469" width="0.0776%" height="15" fill="rgb(249,55,30)" fg:x="855" fg:w="1"/><text x="66.6320%" y="479.50"></text></g><g><title>[window] (1 samples, 0.08%)</title><rect x="66.3820%" y="453" width="0.0776%" height="15" fill="rgb(237,47,42)" fg:x="855" fg:w="1"/><text x="66.6320%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_drop (1 samples, 0.08%)</title><rect x="66.3820%" y="437" width="0.0776%" height="15" fill="rgb(211,20,18)" fg:x="855" fg:w="1"/><text x="66.6320%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="66.4596%" y="373" width="0.0776%" height="15" fill="rgb(231,203,46)" fg:x="856" fg:w="1"/><text x="66.7096%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="66.5373%" y="373" width="0.3106%" height="15" fill="rgb(237,142,3)" fg:x="857" fg:w="4"/><text x="66.7873%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="66.6149%" y="357" width="0.2329%" height="15" fill="rgb(241,107,1)" fg:x="858" fg:w="3"/><text x="66.8649%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="66.7702%" y="341" width="0.0776%" height="15" fill="rgb(229,83,13)" fg:x="860" fg:w="1"/><text x="67.0202%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (1 samples, 0.08%)</title><rect x="66.8478%" y="309" width="0.0776%" height="15" fill="rgb(241,91,40)" fg:x="861" fg:w="1"/><text x="67.0978%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (1 samples, 0.08%)</title><rect x="66.8478%" y="293" width="0.0776%" height="15" fill="rgb(225,3,45)" fg:x="861" fg:w="1"/><text x="67.0978%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.8478%" y="277" width="0.0776%" height="15" fill="rgb(244,223,14)" fg:x="861" fg:w="1"/><text x="67.0978%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::render::State&gt; (2 samples, 0.16%)</title><rect x="66.8478%" y="373" width="0.1553%" height="15" fill="rgb(224,124,37)" fg:x="861" fg:w="2"/><text x="67.0978%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::Binder&gt; (2 samples, 0.16%)</title><rect x="66.8478%" y="357" width="0.1553%" height="15" fill="rgb(251,171,30)" fg:x="861" fg:w="2"/><text x="67.0978%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wgpu_core::command::bind::EntryPayload: 8]&gt; (2 samples, 0.16%)</title><rect x="66.8478%" y="341" width="0.1553%" height="15" fill="rgb(236,46,54)" fg:x="861" fg:w="2"/><text x="67.0978%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::EntryPayload&gt; (2 samples, 0.16%)</title><rect x="66.8478%" y="325" width="0.1553%" height="15" fill="rgb(245,213,5)" fg:x="861" fg:w="2"/><text x="67.0978%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu_core::command::bind::LateBufferBinding&gt;&gt; (1 samples, 0.08%)</title><rect x="66.9255%" y="309" width="0.0776%" height="15" fill="rgb(230,144,27)" fg:x="862" fg:w="1"/><text x="67.1755%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu_core::command::bind::LateBufferBinding&gt;&gt; (1 samples, 0.08%)</title><rect x="66.9255%" y="293" width="0.0776%" height="15" fill="rgb(220,86,6)" fg:x="862" fg:w="1"/><text x="67.1755%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.9255%" y="277" width="0.0776%" height="15" fill="rgb(240,20,13)" fg:x="862" fg:w="1"/><text x="67.1755%" y="287.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (1 samples, 0.08%)</title><rect x="67.0031%" y="373" width="0.0776%" height="15" fill="rgb(217,89,34)" fg:x="863" fg:w="1"/><text x="67.2531%" y="383.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (1 samples, 0.08%)</title><rect x="67.0031%" y="357" width="0.0776%" height="15" fill="rgb(229,13,5)" fg:x="863" fg:w="1"/><text x="67.2531%" y="367.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (1 samples, 0.08%)</title><rect x="67.0807%" y="373" width="0.0776%" height="15" fill="rgb(244,67,35)" fg:x="864" fg:w="1"/><text x="67.3307%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (1 samples, 0.08%)</title><rect x="67.0807%" y="357" width="0.0776%" height="15" fill="rgb(221,40,2)" fg:x="864" fg:w="1"/><text x="67.3307%" y="367.50"></text></g><g><title>ash::device::Device::end_command_buffer (1 samples, 0.08%)</title><rect x="67.0807%" y="341" width="0.0776%" height="15" fill="rgb(237,157,21)" fg:x="864" fg:w="1"/><text x="67.3307%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.0807%" y="325" width="0.0776%" height="15" fill="rgb(222,94,11)" fg:x="864" fg:w="1"/><text x="67.3307%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.0807%" y="309" width="0.0776%" height="15" fill="rgb(249,113,6)" fg:x="864" fg:w="1"/><text x="67.3307%" y="319.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (1 samples, 0.08%)</title><rect x="67.1584%" y="373" width="0.0776%" height="15" fill="rgb(238,137,36)" fg:x="865" fg:w="1"/><text x="67.4084%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.08%)</title><rect x="67.1584%" y="357" width="0.0776%" height="15" fill="rgb(210,102,26)" fg:x="865" fg:w="1"/><text x="67.4084%" y="367.50"></text></g><g><title>ash::device::Device::begin_command_buffer (1 samples, 0.08%)</title><rect x="67.1584%" y="341" width="0.0776%" height="15" fill="rgb(218,30,30)" fg:x="865" fg:w="1"/><text x="67.4084%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.1584%" y="325" width="0.0776%" height="15" fill="rgb(214,67,26)" fg:x="865" fg:w="1"/><text x="67.4084%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.1584%" y="309" width="0.0776%" height="15" fill="rgb(251,9,53)" fg:x="865" fg:w="1"/><text x="67.4084%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.1584%" y="293" width="0.0776%" height="15" fill="rgb(228,204,25)" fg:x="865" fg:w="1"/><text x="67.4084%" y="303.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (1 samples, 0.08%)</title><rect x="67.2360%" y="373" width="0.0776%" height="15" fill="rgb(207,153,8)" fg:x="866" fg:w="1"/><text x="67.4860%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.08%)</title><rect x="67.2360%" y="357" width="0.0776%" height="15" fill="rgb(242,9,16)" fg:x="866" fg:w="1"/><text x="67.4860%" y="367.50"></text></g><g><title>ash::device::Device::begin_command_buffer (1 samples, 0.08%)</title><rect x="67.2360%" y="341" width="0.0776%" height="15" fill="rgb(217,211,10)" fg:x="866" fg:w="1"/><text x="67.4860%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.2360%" y="325" width="0.0776%" height="15" fill="rgb(219,228,52)" fg:x="866" fg:w="1"/><text x="67.4860%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.2360%" y="309" width="0.0776%" height="15" fill="rgb(231,92,29)" fg:x="866" fg:w="1"/><text x="67.4860%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.2360%" y="293" width="0.0776%" height="15" fill="rgb(232,8,23)" fg:x="866" fg:w="1"/><text x="67.4860%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.2360%" y="277" width="0.0776%" height="15" fill="rgb(216,211,34)" fg:x="866" fg:w="1"/><text x="67.4860%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.2360%" y="261" width="0.0776%" height="15" fill="rgb(236,151,0)" fg:x="866" fg:w="1"/><text x="67.4860%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.2360%" y="245" width="0.0776%" height="15" fill="rgb(209,168,3)" fg:x="866" fg:w="1"/><text x="67.4860%" y="255.50"></text></g><g><title>wgpu_core::command::query::QueryResetMap&lt;A&gt;::reset_queries (1 samples, 0.08%)</title><rect x="67.3137%" y="373" width="0.0776%" height="15" fill="rgb(208,129,28)" fg:x="867" fg:w="1"/><text x="67.5637%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;u32,(alloc::vec::Vec&lt;bool&gt;,u32)&gt;&gt; (1 samples, 0.08%)</title><rect x="67.3137%" y="357" width="0.0776%" height="15" fill="rgb(229,78,22)" fg:x="867" fg:w="1"/><text x="67.5637%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;u32,(alloc::vec::Vec&lt;bool&gt;,u32)&gt;&gt; (1 samples, 0.08%)</title><rect x="67.3137%" y="341" width="0.0776%" height="15" fill="rgb(228,187,13)" fg:x="867" fg:w="1"/><text x="67.5637%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(u32,(alloc::vec::Vec&lt;bool&gt;,u32))&gt;&gt; (1 samples, 0.08%)</title><rect x="67.3137%" y="325" width="0.0776%" height="15" fill="rgb(240,119,24)" fg:x="867" fg:w="1"/><text x="67.5637%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.3137%" y="309" width="0.0776%" height="15" fill="rgb(209,194,42)" fg:x="867" fg:w="1"/><text x="67.5637%" y="319.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.08%)</title><rect x="67.3913%" y="373" width="0.0776%" height="15" fill="rgb(247,200,46)" fg:x="868" fg:w="1"/><text x="67.6413%" y="383.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.08%)</title><rect x="67.3913%" y="357" width="0.0776%" height="15" fill="rgb(218,76,16)" fg:x="868" fg:w="1"/><text x="67.6413%" y="367.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.08%)</title><rect x="67.3913%" y="341" width="0.0776%" height="15" fill="rgb(225,21,48)" fg:x="868" fg:w="1"/><text x="67.6413%" y="351.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.08%)</title><rect x="67.3913%" y="325" width="0.0776%" height="15" fill="rgb(239,223,50)" fg:x="868" fg:w="1"/><text x="67.6413%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="67.3913%" y="309" width="0.0776%" height="15" fill="rgb(244,45,21)" fg:x="868" fg:w="1"/><text x="67.6413%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="67.3913%" y="293" width="0.0776%" height="15" fill="rgb(232,33,43)" fg:x="868" fg:w="1"/><text x="67.6413%" y="303.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (3 samples, 0.23%)</title><rect x="67.4689%" y="357" width="0.2329%" height="15" fill="rgb(209,8,3)" fg:x="869" fg:w="3"/><text x="67.7189%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.23%)</title><rect x="67.4689%" y="341" width="0.2329%" height="15" fill="rgb(214,25,53)" fg:x="869" fg:w="3"/><text x="67.7189%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.23%)</title><rect x="67.4689%" y="325" width="0.2329%" height="15" fill="rgb(254,186,54)" fg:x="869" fg:w="3"/><text x="67.7189%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="67.4689%" y="309" width="0.2329%" height="15" fill="rgb(208,174,49)" fg:x="869" fg:w="3"/><text x="67.7189%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="67.4689%" y="293" width="0.2329%" height="15" fill="rgb(233,191,51)" fg:x="869" fg:w="3"/><text x="67.7189%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.23%)</title><rect x="67.4689%" y="277" width="0.2329%" height="15" fill="rgb(222,134,10)" fg:x="869" fg:w="3"/><text x="67.7189%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.23%)</title><rect x="67.4689%" y="261" width="0.2329%" height="15" fill="rgb(230,226,20)" fg:x="869" fg:w="3"/><text x="67.7189%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.23%)</title><rect x="67.4689%" y="245" width="0.2329%" height="15" fill="rgb(251,111,25)" fg:x="869" fg:w="3"/><text x="67.7189%" y="255.50"></text></g><g><title>malloc (3 samples, 0.23%)</title><rect x="67.4689%" y="229" width="0.2329%" height="15" fill="rgb(224,40,46)" fg:x="869" fg:w="3"/><text x="67.7189%" y="239.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="67.4689%" y="213" width="0.2329%" height="15" fill="rgb(236,108,47)" fg:x="869" fg:w="3"/><text x="67.7189%" y="223.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::set_size (4 samples, 0.31%)</title><rect x="67.4689%" y="373" width="0.3106%" height="15" fill="rgb(234,93,0)" fg:x="869" fg:w="4"/><text x="67.7189%" y="383.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (1 samples, 0.08%)</title><rect x="67.7019%" y="357" width="0.0776%" height="15" fill="rgb(224,213,32)" fg:x="872" fg:w="1"/><text x="67.9519%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.08%)</title><rect x="67.7019%" y="341" width="0.0776%" height="15" fill="rgb(251,11,48)" fg:x="872" fg:w="1"/><text x="67.9519%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.08%)</title><rect x="67.7019%" y="325" width="0.0776%" height="15" fill="rgb(236,173,5)" fg:x="872" fg:w="1"/><text x="67.9519%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="67.7019%" y="309" width="0.0776%" height="15" fill="rgb(230,95,12)" fg:x="872" fg:w="1"/><text x="67.9519%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="67.7019%" y="293" width="0.0776%" height="15" fill="rgb(232,209,1)" fg:x="872" fg:w="1"/><text x="67.9519%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.7019%" y="277" width="0.0776%" height="15" fill="rgb(232,6,1)" fg:x="872" fg:w="1"/><text x="67.9519%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="67.7019%" y="261" width="0.0776%" height="15" fill="rgb(210,224,50)" fg:x="872" fg:w="1"/><text x="67.9519%" y="271.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::merge_bind_group (1 samples, 0.08%)</title><rect x="67.7795%" y="373" width="0.0776%" height="15" fill="rgb(228,127,35)" fg:x="873" fg:w="1"/><text x="68.0295%" y="383.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_bind_group (1 samples, 0.08%)</title><rect x="67.7795%" y="357" width="0.0776%" height="15" fill="rgb(245,102,45)" fg:x="873" fg:w="1"/><text x="68.0295%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (19 samples, 1.48%)</title><rect x="66.4596%" y="469" width="1.4752%" height="15" fill="rgb(214,1,49)" fg:x="856" fg:w="19"/><text x="66.7096%" y="479.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (19 samples, 1.48%)</title><rect x="66.4596%" y="453" width="1.4752%" height="15" fill="rgb(226,163,40)" fg:x="856" fg:w="19"/><text x="66.7096%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (19 samples, 1.48%)</title><rect x="66.4596%" y="437" width="1.4752%" height="15" fill="rgb(239,212,28)" fg:x="856" fg:w="19"/><text x="66.7096%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (19 samples, 1.48%)</title><rect x="66.4596%" y="421" width="1.4752%" height="15" fill="rgb(220,20,13)" fg:x="856" fg:w="19"/><text x="66.7096%" y="431.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (19 samples, 1.48%)</title><rect x="66.4596%" y="405" width="1.4752%" height="15" fill="rgb(210,164,35)" fg:x="856" fg:w="19"/><text x="66.7096%" y="415.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (19 samples, 1.48%)</title><rect x="66.4596%" y="389" width="1.4752%" height="15" fill="rgb(248,109,41)" fg:x="856" fg:w="19"/><text x="66.7096%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (1 samples, 0.08%)</title><rect x="67.8571%" y="373" width="0.0776%" height="15" fill="rgb(238,23,50)" fg:x="874" fg:w="1"/><text x="68.1071%" y="383.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (1 samples, 0.08%)</title><rect x="67.8571%" y="357" width="0.0776%" height="15" fill="rgb(211,48,49)" fg:x="874" fg:w="1"/><text x="68.1071%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.8571%" y="341" width="0.0776%" height="15" fill="rgb(223,36,21)" fg:x="874" fg:w="1"/><text x="68.1071%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="67.8571%" y="325" width="0.0776%" height="15" fill="rgb(207,123,46)" fg:x="874" fg:w="1"/><text x="68.1071%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SurfaceTexture&gt; (2 samples, 0.16%)</title><rect x="67.9348%" y="469" width="0.1553%" height="15" fill="rgb(240,218,32)" fg:x="875" fg:w="2"/><text x="68.1848%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Texture&gt; (2 samples, 0.16%)</title><rect x="67.9348%" y="453" width="0.1553%" height="15" fill="rgb(252,5,43)" fg:x="875" fg:w="2"/><text x="68.1848%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;&gt; (2 samples, 0.16%)</title><rect x="67.9348%" y="437" width="0.1553%" height="15" fill="rgb(252,84,19)" fg:x="875" fg:w="2"/><text x="68.1848%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::Texture&gt; (1 samples, 0.08%)</title><rect x="68.0124%" y="421" width="0.0776%" height="15" fill="rgb(243,152,39)" fg:x="876" fg:w="1"/><text x="68.2624%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="68.0124%" y="405" width="0.0776%" height="15" fill="rgb(234,160,15)" fg:x="876" fg:w="1"/><text x="68.2624%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.0124%" y="389" width="0.0776%" height="15" fill="rgb(237,34,20)" fg:x="876" fg:w="1"/><text x="68.2624%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.08%)</title><rect x="68.0124%" y="373" width="0.0776%" height="15" fill="rgb(229,97,13)" fg:x="876" fg:w="1"/><text x="68.2624%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.08%)</title><rect x="68.0124%" y="357" width="0.0776%" height="15" fill="rgb(234,71,50)" fg:x="876" fg:w="1"/><text x="68.2624%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1677%" y="453" width="0.0776%" height="15" fill="rgb(253,155,4)" fg:x="878" fg:w="1"/><text x="68.4177%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1677%" y="437" width="0.0776%" height="15" fill="rgb(222,185,37)" fg:x="878" fg:w="1"/><text x="68.4177%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.1677%" y="421" width="0.0776%" height="15" fill="rgb(251,177,13)" fg:x="878" fg:w="1"/><text x="68.4177%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.1677%" y="405" width="0.0776%" height="15" fill="rgb(250,179,40)" fg:x="878" fg:w="1"/><text x="68.4177%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.1677%" y="389" width="0.0776%" height="15" fill="rgb(242,44,2)" fg:x="878" fg:w="1"/><text x="68.4177%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.1677%" y="373" width="0.0776%" height="15" fill="rgb(216,177,13)" fg:x="878" fg:w="1"/><text x="68.4177%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.1677%" y="357" width="0.0776%" height="15" fill="rgb(216,106,43)" fg:x="878" fg:w="1"/><text x="68.4177%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.1677%" y="341" width="0.0776%" height="15" fill="rgb(216,183,2)" fg:x="878" fg:w="1"/><text x="68.4177%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.1677%" y="325" width="0.0776%" height="15" fill="rgb(249,75,3)" fg:x="878" fg:w="1"/><text x="68.4177%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.1677%" y="309" width="0.0776%" height="15" fill="rgb(219,67,39)" fg:x="878" fg:w="1"/><text x="68.4177%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.1677%" y="293" width="0.0776%" height="15" fill="rgb(253,228,2)" fg:x="878" fg:w="1"/><text x="68.4177%" y="303.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="68.1677%" y="277" width="0.0776%" height="15" fill="rgb(235,138,27)" fg:x="878" fg:w="1"/><text x="68.4177%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="68.1677%" y="261" width="0.0776%" height="15" fill="rgb(236,97,51)" fg:x="878" fg:w="1"/><text x="68.4177%" y="271.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (5 samples, 0.39%)</title><rect x="68.2453%" y="373" width="0.3882%" height="15" fill="rgb(240,80,30)" fg:x="879" fg:w="5"/><text x="68.4953%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (5 samples, 0.39%)</title><rect x="68.2453%" y="357" width="0.3882%" height="15" fill="rgb(230,178,19)" fg:x="879" fg:w="5"/><text x="68.4953%" y="367.50"></text></g><g><title>ash::device::Device::begin_command_buffer (5 samples, 0.39%)</title><rect x="68.2453%" y="341" width="0.3882%" height="15" fill="rgb(210,190,27)" fg:x="879" fg:w="5"/><text x="68.4953%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="68.2453%" y="325" width="0.3882%" height="15" fill="rgb(222,107,31)" fg:x="879" fg:w="5"/><text x="68.4953%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="68.4006%" y="309" width="0.2329%" height="15" fill="rgb(216,127,34)" fg:x="881" fg:w="3"/><text x="68.6506%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="68.4006%" y="293" width="0.2329%" height="15" fill="rgb(234,116,52)" fg:x="881" fg:w="3"/><text x="68.6506%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="68.4783%" y="277" width="0.1553%" height="15" fill="rgb(222,124,15)" fg:x="882" fg:w="2"/><text x="68.7283%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="68.4783%" y="261" width="0.1553%" height="15" fill="rgb(231,179,28)" fg:x="882" fg:w="2"/><text x="68.7283%" y="271.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (6 samples, 0.47%)</title><rect x="68.2453%" y="437" width="0.4658%" height="15" fill="rgb(226,93,45)" fg:x="879" fg:w="6"/><text x="68.4953%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_unmap (6 samples, 0.47%)</title><rect x="68.2453%" y="421" width="0.4658%" height="15" fill="rgb(215,8,51)" fg:x="879" fg:w="6"/><text x="68.4953%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (6 samples, 0.47%)</title><rect x="68.2453%" y="405" width="0.4658%" height="15" fill="rgb(223,106,5)" fg:x="879" fg:w="6"/><text x="68.4953%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (6 samples, 0.47%)</title><rect x="68.2453%" y="389" width="0.4658%" height="15" fill="rgb(250,191,5)" fg:x="879" fg:w="6"/><text x="68.4953%" y="399.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::consume_temp (1 samples, 0.08%)</title><rect x="68.6335%" y="373" width="0.0776%" height="15" fill="rgb(242,132,44)" fg:x="884" fg:w="1"/><text x="68.8835%" y="383.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_get_mapped_range (2 samples, 0.16%)</title><rect x="68.7112%" y="421" width="0.1553%" height="15" fill="rgb(251,152,29)" fg:x="885" fg:w="2"/><text x="68.9612%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_get_mapped_range (2 samples, 0.16%)</title><rect x="68.7112%" y="405" width="0.1553%" height="15" fill="rgb(218,179,5)" fg:x="885" fg:w="2"/><text x="68.9612%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_get_mapped_range (2 samples, 0.16%)</title><rect x="68.7112%" y="389" width="0.1553%" height="15" fill="rgb(227,67,19)" fg:x="885" fg:w="2"/><text x="68.9612%" y="399.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (3 samples, 0.23%)</title><rect x="68.7112%" y="437" width="0.2329%" height="15" fill="rgb(233,119,31)" fg:x="885" fg:w="3"/><text x="68.9612%" y="447.50"></text></g><g><title>wgpu::MapContext::add (1 samples, 0.08%)</title><rect x="68.8665%" y="421" width="0.0776%" height="15" fill="rgb(241,120,22)" fg:x="887" fg:w="1"/><text x="69.1165%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="68.8665%" y="405" width="0.0776%" height="15" fill="rgb(224,102,30)" fg:x="887" fg:w="1"/><text x="69.1165%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.8665%" y="389" width="0.0776%" height="15" fill="rgb(210,164,37)" fg:x="887" fg:w="1"/><text x="69.1165%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="68.8665%" y="373" width="0.0776%" height="15" fill="rgb(226,191,16)" fg:x="887" fg:w="1"/><text x="69.1165%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.8665%" y="357" width="0.0776%" height="15" fill="rgb(214,40,45)" fg:x="887" fg:w="1"/><text x="69.1165%" y="367.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="68.8665%" y="341" width="0.0776%" height="15" fill="rgb(244,29,26)" fg:x="887" fg:w="1"/><text x="69.1165%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="69.0217%" y="373" width="0.0776%" height="15" fill="rgb(216,16,5)" fg:x="889" fg:w="1"/><text x="69.2717%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::LifeGuard&gt; (1 samples, 0.08%)</title><rect x="69.0994%" y="373" width="0.0776%" height="15" fill="rgb(249,76,35)" fg:x="890" fg:w="1"/><text x="69.3494%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (1 samples, 0.08%)</title><rect x="69.0994%" y="357" width="0.0776%" height="15" fill="rgb(207,11,44)" fg:x="890" fg:w="1"/><text x="69.3494%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.08%)</title><rect x="69.0994%" y="341" width="0.0776%" height="15" fill="rgb(228,190,49)" fg:x="890" fg:w="1"/><text x="69.3494%" y="351.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.0994%" y="325" width="0.0776%" height="15" fill="rgb(214,173,12)" fg:x="890" fg:w="1"/><text x="69.3494%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.08%)</title><rect x="69.0994%" y="309" width="0.0776%" height="15" fill="rgb(218,26,35)" fg:x="890" fg:w="1"/><text x="69.3494%" y="319.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="69.1770%" y="293" width="0.2329%" height="15" fill="rgb(220,200,19)" fg:x="891" fg:w="3"/><text x="69.4270%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="69.1770%" y="277" width="0.2329%" height="15" fill="rgb(239,95,49)" fg:x="891" fg:w="3"/><text x="69.4270%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="69.1770%" y="261" width="0.2329%" height="15" fill="rgb(235,85,53)" fg:x="891" fg:w="3"/><text x="69.4270%" y="271.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (4 samples, 0.31%)</title><rect x="69.1770%" y="341" width="0.3106%" height="15" fill="rgb(233,133,31)" fg:x="891" fg:w="4"/><text x="69.4270%" y="351.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="69.1770%" y="325" width="0.3106%" height="15" fill="rgb(218,25,20)" fg:x="891" fg:w="4"/><text x="69.4270%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="69.1770%" y="309" width="0.3106%" height="15" fill="rgb(252,210,38)" fg:x="891" fg:w="4"/><text x="69.4270%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="69.4099%" y="293" width="0.0776%" height="15" fill="rgb(242,134,21)" fg:x="894" fg:w="1"/><text x="69.6599%" y="303.50"></text></g><g><title>ash::device::Device::create_buffer (2 samples, 0.16%)</title><rect x="69.4876%" y="341" width="0.1553%" height="15" fill="rgb(213,28,48)" fg:x="895" fg:w="2"/><text x="69.7376%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="69.4876%" y="325" width="0.1553%" height="15" fill="rgb(250,196,2)" fg:x="895" fg:w="2"/><text x="69.7376%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (7 samples, 0.54%)</title><rect x="69.1770%" y="357" width="0.5435%" height="15" fill="rgb(227,5,17)" fg:x="891" fg:w="7"/><text x="69.4270%" y="367.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.08%)</title><rect x="69.6429%" y="341" width="0.0776%" height="15" fill="rgb(221,226,24)" fg:x="897" fg:w="1"/><text x="69.8929%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.08%)</title><rect x="69.6429%" y="325" width="0.0776%" height="15" fill="rgb(211,5,48)" fg:x="897" fg:w="1"/><text x="69.8929%" y="335.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (1 samples, 0.08%)</title><rect x="69.6429%" y="309" width="0.0776%" height="15" fill="rgb(219,150,6)" fg:x="897" fg:w="1"/><text x="69.8929%" y="319.50"></text></g><g><title>gpu_alloc::buddy::Size::acquire (1 samples, 0.08%)</title><rect x="69.6429%" y="293" width="0.0776%" height="15" fill="rgb(251,46,16)" fg:x="897" fg:w="1"/><text x="69.8929%" y="303.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (9 samples, 0.70%)</title><rect x="69.1770%" y="373" width="0.6988%" height="15" fill="rgb(220,204,40)" fg:x="891" fg:w="9"/><text x="69.4270%" y="383.50"></text></g><g><title>wgpu_types::BufferUsages::contains_invalid_bits (2 samples, 0.16%)</title><rect x="69.7205%" y="357" width="0.1553%" height="15" fill="rgb(211,85,2)" fg:x="898" fg:w="2"/><text x="69.9705%" y="367.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (22 samples, 1.71%)</title><rect x="68.2453%" y="453" width="1.7081%" height="15" fill="rgb(229,17,7)" fg:x="879" fg:w="22"/><text x="68.4953%" y="463.50"></text></g><g><title>wgpu::Device::create_buffer (13 samples, 1.01%)</title><rect x="68.9441%" y="437" width="1.0093%" height="15" fill="rgb(239,72,28)" fg:x="888" fg:w="13"/><text x="69.1941%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (13 samples, 1.01%)</title><rect x="68.9441%" y="421" width="1.0093%" height="15" fill="rgb(230,47,54)" fg:x="888" fg:w="13"/><text x="69.1941%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (13 samples, 1.01%)</title><rect x="68.9441%" y="405" width="1.0093%" height="15" fill="rgb(214,50,8)" fg:x="888" fg:w="13"/><text x="69.1941%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (13 samples, 1.01%)</title><rect x="68.9441%" y="389" width="1.0093%" height="15" fill="rgb(216,198,43)" fg:x="888" fg:w="13"/><text x="69.1941%" y="399.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.08%)</title><rect x="69.8758%" y="373" width="0.0776%" height="15" fill="rgb(234,20,35)" fg:x="900" fg:w="1"/><text x="70.1258%" y="383.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.08%)</title><rect x="69.8758%" y="357" width="0.0776%" height="15" fill="rgb(254,45,19)" fg:x="900" fg:w="1"/><text x="70.1258%" y="367.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.08%)</title><rect x="69.8758%" y="341" width="0.0776%" height="15" fill="rgb(219,14,44)" fg:x="900" fg:w="1"/><text x="70.1258%" y="351.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.08%)</title><rect x="69.8758%" y="325" width="0.0776%" height="15" fill="rgb(217,220,26)" fg:x="900" fg:w="1"/><text x="70.1258%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.08%)</title><rect x="69.8758%" y="309" width="0.0776%" height="15" fill="rgb(213,158,28)" fg:x="900" fg:w="1"/><text x="70.1258%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.08%)</title><rect x="69.8758%" y="293" width="0.0776%" height="15" fill="rgb(252,51,52)" fg:x="900" fg:w="1"/><text x="70.1258%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="69.9534%" y="341" width="0.1553%" height="15" fill="rgb(246,89,16)" fg:x="901" fg:w="2"/><text x="70.2034%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="69.9534%" y="325" width="0.1553%" height="15" fill="rgb(216,158,49)" fg:x="901" fg:w="2"/><text x="70.2034%" y="335.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="69.9534%" y="309" width="0.1553%" height="15" fill="rgb(236,107,19)" fg:x="901" fg:w="2"/><text x="70.2034%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="69.9534%" y="293" width="0.1553%" height="15" fill="rgb(228,185,30)" fg:x="901" fg:w="2"/><text x="70.2034%" y="303.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="69.9534%" y="277" width="0.1553%" height="15" fill="rgb(246,134,8)" fg:x="901" fg:w="2"/><text x="70.2034%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="69.9534%" y="261" width="0.1553%" height="15" fill="rgb(214,143,50)" fg:x="901" fg:w="2"/><text x="70.2034%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.23%)</title><rect x="69.9534%" y="453" width="0.2329%" height="15" fill="rgb(228,75,8)" fg:x="901" fg:w="3"/><text x="70.2034%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.23%)</title><rect x="69.9534%" y="437" width="0.2329%" height="15" fill="rgb(207,175,4)" fg:x="901" fg:w="3"/><text x="70.2034%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="69.9534%" y="421" width="0.2329%" height="15" fill="rgb(205,108,24)" fg:x="901" fg:w="3"/><text x="70.2034%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="69.9534%" y="405" width="0.2329%" height="15" fill="rgb(244,120,49)" fg:x="901" fg:w="3"/><text x="70.2034%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.23%)</title><rect x="69.9534%" y="389" width="0.2329%" height="15" fill="rgb(223,47,38)" fg:x="901" fg:w="3"/><text x="70.2034%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.23%)</title><rect x="69.9534%" y="373" width="0.2329%" height="15" fill="rgb(229,179,11)" fg:x="901" fg:w="3"/><text x="70.2034%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.23%)</title><rect x="69.9534%" y="357" width="0.2329%" height="15" fill="rgb(231,122,1)" fg:x="901" fg:w="3"/><text x="70.2034%" y="367.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="70.1087%" y="341" width="0.0776%" height="15" fill="rgb(245,119,9)" fg:x="903" fg:w="1"/><text x="70.3587%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="70.1087%" y="325" width="0.0776%" height="15" fill="rgb(241,163,25)" fg:x="903" fg:w="1"/><text x="70.3587%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;framer::renderer::text::Vertex&gt;&gt; (2 samples, 0.16%)</title><rect x="70.1863%" y="453" width="0.1553%" height="15" fill="rgb(217,214,3)" fg:x="904" fg:w="2"/><text x="70.4363%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;framer::renderer::text::Vertex&gt;&gt; (2 samples, 0.16%)</title><rect x="70.1863%" y="437" width="0.1553%" height="15" fill="rgb(240,86,28)" fg:x="904" fg:w="2"/><text x="70.4363%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="70.1863%" y="421" width="0.1553%" height="15" fill="rgb(215,47,9)" fg:x="904" fg:w="2"/><text x="70.4363%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.16%)</title><rect x="70.1863%" y="405" width="0.1553%" height="15" fill="rgb(252,25,45)" fg:x="904" fg:w="2"/><text x="70.4363%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.16%)</title><rect x="70.1863%" y="389" width="0.1553%" height="15" fill="rgb(251,164,9)" fg:x="904" fg:w="2"/><text x="70.4363%" y="399.50"></text></g><g><title>cfree (2 samples, 0.16%)</title><rect x="70.1863%" y="373" width="0.1553%" height="15" fill="rgb(233,194,0)" fg:x="904" fg:w="2"/><text x="70.4363%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="70.1863%" y="357" width="0.1553%" height="15" fill="rgb(249,111,24)" fg:x="904" fg:w="2"/><text x="70.4363%" y="367.50"></text></g><g><title>framer::renderer::text::TextState::create_buffers (30 samples, 2.33%)</title><rect x="68.0901%" y="469" width="2.3292%" height="15" fill="rgb(250,223,3)" fg:x="877" fg:w="30"/><text x="68.3401%" y="479.50">f..</text></g><g><title>texture_packer::texture_packer::TexturePacker&lt;T,K&gt;::get_frame (1 samples, 0.08%)</title><rect x="70.3416%" y="453" width="0.0776%" height="15" fill="rgb(236,178,37)" fg:x="906" fg:w="1"/><text x="70.5916%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.08%)</title><rect x="70.3416%" y="437" width="0.0776%" height="15" fill="rgb(241,158,50)" fg:x="906" fg:w="1"/><text x="70.5916%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.08%)</title><rect x="70.3416%" y="421" width="0.0776%" height="15" fill="rgb(213,121,41)" fg:x="906" fg:w="1"/><text x="70.5916%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.08%)</title><rect x="70.3416%" y="405" width="0.0776%" height="15" fill="rgb(240,92,3)" fg:x="906" fg:w="1"/><text x="70.5916%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.08%)</title><rect x="70.3416%" y="389" width="0.0776%" height="15" fill="rgb(205,123,3)" fg:x="906" fg:w="1"/><text x="70.5916%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.08%)</title><rect x="70.3416%" y="373" width="0.0776%" height="15" fill="rgb(205,97,47)" fg:x="906" fg:w="1"/><text x="70.5916%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.08%)</title><rect x="70.3416%" y="357" width="0.0776%" height="15" fill="rgb(247,152,14)" fg:x="906" fg:w="1"/><text x="70.5916%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.08%)</title><rect x="70.3416%" y="341" width="0.0776%" height="15" fill="rgb(248,195,53)" fg:x="906" fg:w="1"/><text x="70.5916%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.08%)</title><rect x="70.3416%" y="325" width="0.0776%" height="15" fill="rgb(226,201,16)" fg:x="906" fg:w="1"/><text x="70.5916%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="70.3416%" y="309" width="0.0776%" height="15" fill="rgb(205,98,0)" fg:x="906" fg:w="1"/><text x="70.5916%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.08%)</title><rect x="70.3416%" y="293" width="0.0776%" height="15" fill="rgb(214,191,48)" fg:x="906" fg:w="1"/><text x="70.5916%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.08%)</title><rect x="70.3416%" y="277" width="0.0776%" height="15" fill="rgb(237,112,39)" fg:x="906" fg:w="1"/><text x="70.5916%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.08%)</title><rect x="70.3416%" y="261" width="0.0776%" height="15" fill="rgb(247,203,27)" fg:x="906" fg:w="1"/><text x="70.5916%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="70.3416%" y="245" width="0.0776%" height="15" fill="rgb(235,124,28)" fg:x="906" fg:w="1"/><text x="70.5916%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="70.3416%" y="229" width="0.0776%" height="15" fill="rgb(208,207,46)" fg:x="906" fg:w="1"/><text x="70.5916%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="70.4969%" y="421" width="0.0776%" height="15" fill="rgb(234,176,4)" fg:x="908" fg:w="1"/><text x="70.7469%" y="431.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.4969%" y="405" width="0.0776%" height="15" fill="rgb(230,133,28)" fg:x="908" fg:w="1"/><text x="70.7469%" y="415.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="70.4969%" y="389" width="0.0776%" height="15" fill="rgb(211,137,40)" fg:x="908" fg:w="1"/><text x="70.7469%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.4969%" y="373" width="0.0776%" height="15" fill="rgb(254,35,13)" fg:x="908" fg:w="1"/><text x="70.7469%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.4969%" y="357" width="0.0776%" height="15" fill="rgb(225,49,51)" fg:x="908" fg:w="1"/><text x="70.7469%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.4969%" y="341" width="0.0776%" height="15" fill="rgb(251,10,15)" fg:x="908" fg:w="1"/><text x="70.7469%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.4969%" y="325" width="0.0776%" height="15" fill="rgb(228,207,15)" fg:x="908" fg:w="1"/><text x="70.7469%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="70.4969%" y="309" width="0.0776%" height="15" fill="rgb(241,99,19)" fg:x="908" fg:w="1"/><text x="70.7469%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="70.4969%" y="293" width="0.0776%" height="15" fill="rgb(207,104,49)" fg:x="908" fg:w="1"/><text x="70.7469%" y="303.50"></text></g><g><title>wgpu::Queue::submit::{{closure}} (1 samples, 0.08%)</title><rect x="70.4969%" y="277" width="0.0776%" height="15" fill="rgb(234,99,18)" fg:x="908" fg:w="1"/><text x="70.7469%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::CommandBuffer&gt; (1 samples, 0.08%)</title><rect x="70.4969%" y="261" width="0.0776%" height="15" fill="rgb(213,191,49)" fg:x="908" fg:w="1"/><text x="70.7469%" y="271.50"></text></g><g><title>&lt;wgpu::CommandBuffer as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.4969%" y="245" width="0.0776%" height="15" fill="rgb(210,226,19)" fg:x="908" fg:w="1"/><text x="70.7469%" y="255.50"></text></g><g><title>std::thread::panicking (1 samples, 0.08%)</title><rect x="70.4969%" y="229" width="0.0776%" height="15" fill="rgb(229,97,18)" fg:x="908" fg:w="1"/><text x="70.7469%" y="239.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.08%)</title><rect x="70.4969%" y="213" width="0.0776%" height="15" fill="rgb(211,167,15)" fg:x="908" fg:w="1"/><text x="70.7469%" y="223.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.08%)</title><rect x="70.4969%" y="197" width="0.0776%" height="15" fill="rgb(210,169,34)" fg:x="908" fg:w="1"/><text x="70.7469%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.08%)</title><rect x="70.4969%" y="181" width="0.0776%" height="15" fill="rgb(241,121,31)" fg:x="908" fg:w="1"/><text x="70.7469%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.08%)</title><rect x="70.4969%" y="165" width="0.0776%" height="15" fill="rgb(232,40,11)" fg:x="908" fg:w="1"/><text x="70.7469%" y="175.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.08%)</title><rect x="70.8075%" y="309" width="0.0776%" height="15" fill="rgb(205,86,26)" fg:x="912" fg:w="1"/><text x="71.0575%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.8075%" y="293" width="0.0776%" height="15" fill="rgb(231,126,28)" fg:x="912" fg:w="1"/><text x="71.0575%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.8075%" y="277" width="0.0776%" height="15" fill="rgb(219,221,18)" fg:x="912" fg:w="1"/><text x="71.0575%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.08%)</title><rect x="70.8075%" y="261" width="0.0776%" height="15" fill="rgb(211,40,0)" fg:x="912" fg:w="1"/><text x="71.0575%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="70.8075%" y="245" width="0.0776%" height="15" fill="rgb(239,85,43)" fg:x="912" fg:w="1"/><text x="71.0575%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.08%)</title><rect x="70.8075%" y="229" width="0.0776%" height="15" fill="rgb(231,55,21)" fg:x="912" fg:w="1"/><text x="71.0575%" y="239.50"></text></g><g><title>&lt;bit_vec::Blocks&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.8075%" y="213" width="0.0776%" height="15" fill="rgb(225,184,43)" fg:x="912" fg:w="1"/><text x="71.0575%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.8075%" y="197" width="0.0776%" height="15" fill="rgb(251,158,41)" fg:x="912" fg:w="1"/><text x="71.0575%" y="207.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.08%)</title><rect x="70.8075%" y="181" width="0.0776%" height="15" fill="rgb(234,159,37)" fg:x="912" fg:w="1"/><text x="71.0575%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="70.7298%" y="405" width="0.2329%" height="15" fill="rgb(216,204,22)" fg:x="911" fg:w="3"/><text x="70.9798%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="70.7298%" y="389" width="0.2329%" height="15" fill="rgb(214,17,3)" fg:x="911" fg:w="3"/><text x="70.9798%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="70.7298%" y="373" width="0.2329%" height="15" fill="rgb(212,111,17)" fg:x="911" fg:w="3"/><text x="70.9798%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="70.7298%" y="357" width="0.2329%" height="15" fill="rgb(221,157,24)" fg:x="911" fg:w="3"/><text x="70.9798%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.23%)</title><rect x="70.7298%" y="341" width="0.2329%" height="15" fill="rgb(252,16,13)" fg:x="911" fg:w="3"/><text x="70.9798%" y="351.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (3 samples, 0.23%)</title><rect x="70.7298%" y="325" width="0.2329%" height="15" fill="rgb(221,62,2)" fg:x="911" fg:w="3"/><text x="70.9798%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.08%)</title><rect x="70.8851%" y="309" width="0.0776%" height="15" fill="rgb(247,87,22)" fg:x="913" fg:w="1"/><text x="71.1351%" y="319.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (1 samples, 0.08%)</title><rect x="70.9627%" y="405" width="0.0776%" height="15" fill="rgb(215,73,9)" fg:x="914" fg:w="1"/><text x="71.2127%" y="415.50"></text></g><g><title>ash::device::Device::queue_submit (1 samples, 0.08%)</title><rect x="70.9627%" y="389" width="0.0776%" height="15" fill="rgb(207,175,33)" fg:x="914" fg:w="1"/><text x="71.2127%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="70.9627%" y="373" width="0.0776%" height="15" fill="rgb(243,129,54)" fg:x="914" fg:w="1"/><text x="71.2127%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="70.9627%" y="357" width="0.0776%" height="15" fill="rgb(227,119,45)" fg:x="914" fg:w="1"/><text x="71.2127%" y="367.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="70.9627%" y="341" width="0.0776%" height="15" fill="rgb(205,109,36)" fg:x="914" fg:w="1"/><text x="71.2127%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="70.9627%" y="325" width="0.0776%" height="15" fill="rgb(205,6,39)" fg:x="914" fg:w="1"/><text x="71.2127%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="70.9627%" y="309" width="0.0776%" height="15" fill="rgb(221,32,16)" fg:x="914" fg:w="1"/><text x="71.2127%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="70.9627%" y="293" width="0.0776%" height="15" fill="rgb(228,144,50)" fg:x="914" fg:w="1"/><text x="71.2127%" y="303.50"></text></g><g><title>pthread_equal (1 samples, 0.08%)</title><rect x="70.9627%" y="277" width="0.0776%" height="15" fill="rgb(229,201,53)" fg:x="914" fg:w="1"/><text x="71.2127%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="71.0404%" y="405" width="0.1553%" height="15" fill="rgb(249,153,27)" fg:x="915" fg:w="2"/><text x="71.2904%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="71.1957%" y="405" width="0.0776%" height="15" fill="rgb(227,106,25)" fg:x="917" fg:w="1"/><text x="71.4457%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.1957%" y="389" width="0.0776%" height="15" fill="rgb(230,65,29)" fg:x="917" fg:w="1"/><text x="71.4457%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.1957%" y="373" width="0.0776%" height="15" fill="rgb(221,57,46)" fg:x="917" fg:w="1"/><text x="71.4457%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.1957%" y="357" width="0.0776%" height="15" fill="rgb(229,161,17)" fg:x="917" fg:w="1"/><text x="71.4457%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="71.1957%" y="341" width="0.0776%" height="15" fill="rgb(222,213,11)" fg:x="917" fg:w="1"/><text x="71.4457%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="71.1957%" y="325" width="0.0776%" height="15" fill="rgb(235,35,13)" fg:x="917" fg:w="1"/><text x="71.4457%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="71.1957%" y="309" width="0.0776%" height="15" fill="rgb(233,158,34)" fg:x="917" fg:w="1"/><text x="71.4457%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.08%)</title><rect x="71.1957%" y="293" width="0.0776%" height="15" fill="rgb(215,151,48)" fg:x="917" fg:w="1"/><text x="71.4457%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2733%" y="405" width="0.0776%" height="15" fill="rgb(229,84,14)" fg:x="918" fg:w="1"/><text x="71.5233%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::texture::TextureTracker&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2733%" y="389" width="0.0776%" height="15" fill="rgb(229,68,14)" fg:x="918" fg:w="1"/><text x="71.5233%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2733%" y="373" width="0.0776%" height="15" fill="rgb(243,106,26)" fg:x="918" fg:w="1"/><text x="71.5233%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&lt;usize&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2733%" y="357" width="0.0776%" height="15" fill="rgb(206,45,38)" fg:x="918" fg:w="1"/><text x="71.5233%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2733%" y="341" width="0.0776%" height="15" fill="rgb(226,6,15)" fg:x="918" fg:w="1"/><text x="71.5233%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2733%" y="325" width="0.0776%" height="15" fill="rgb(232,22,54)" fg:x="918" fg:w="1"/><text x="71.5233%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.2733%" y="309" width="0.0776%" height="15" fill="rgb(229,222,32)" fg:x="918" fg:w="1"/><text x="71.5233%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="71.2733%" y="293" width="0.0776%" height="15" fill="rgb(228,62,29)" fg:x="918" fg:w="1"/><text x="71.5233%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="71.2733%" y="277" width="0.0776%" height="15" fill="rgb(251,103,34)" fg:x="918" fg:w="1"/><text x="71.5233%" y="287.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="71.2733%" y="261" width="0.0776%" height="15" fill="rgb(233,12,30)" fg:x="918" fg:w="1"/><text x="71.5233%" y="271.50"></text></g><g><title>wgpu_hal::vulkan::conv::derive_image_layout (1 samples, 0.08%)</title><rect x="71.3509%" y="357" width="0.0776%" height="15" fill="rgb(238,52,0)" fg:x="919" fg:w="1"/><text x="71.6009%" y="367.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (2 samples, 0.16%)</title><rect x="71.3509%" y="405" width="0.1553%" height="15" fill="rgb(223,98,5)" fg:x="919" fg:w="2"/><text x="71.6009%" y="415.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (2 samples, 0.16%)</title><rect x="71.3509%" y="389" width="0.1553%" height="15" fill="rgb(228,75,37)" fg:x="919" fg:w="2"/><text x="71.6009%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (2 samples, 0.16%)</title><rect x="71.3509%" y="373" width="0.1553%" height="15" fill="rgb(205,115,49)" fg:x="919" fg:w="2"/><text x="71.6009%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::conv::map_texture_usage_to_barrier (1 samples, 0.08%)</title><rect x="71.4286%" y="357" width="0.0776%" height="15" fill="rgb(250,154,43)" fg:x="920" fg:w="1"/><text x="71.6786%" y="367.50"></text></g><g><title>wgpu_hal::_::&lt;impl wgpu_hal::TextureUses&gt;::contains (1 samples, 0.08%)</title><rect x="71.4286%" y="341" width="0.0776%" height="15" fill="rgb(226,43,29)" fg:x="920" fg:w="1"/><text x="71.6786%" y="351.50"></text></g><g><title>wgpu_hal::_::InternalBitFlags::contains (1 samples, 0.08%)</title><rect x="71.4286%" y="325" width="0.0776%" height="15" fill="rgb(249,228,39)" fg:x="920" fg:w="1"/><text x="71.6786%" y="335.50"></text></g><g><title>ash::device::Device::destroy_buffer (2 samples, 0.16%)</title><rect x="71.5062%" y="341" width="0.1553%" height="15" fill="rgb(216,79,43)" fg:x="921" fg:w="2"/><text x="71.7562%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="71.5062%" y="325" width="0.1553%" height="15" fill="rgb(228,95,12)" fg:x="921" fg:w="2"/><text x="71.7562%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="71.5839%" y="309" width="0.0776%" height="15" fill="rgb(249,221,15)" fg:x="922" fg:w="1"/><text x="71.8339%" y="319.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="71.5839%" y="293" width="0.0776%" height="15" fill="rgb(233,34,13)" fg:x="922" fg:w="1"/><text x="71.8339%" y="303.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (3 samples, 0.23%)</title><rect x="71.5062%" y="357" width="0.2329%" height="15" fill="rgb(214,103,39)" fg:x="921" fg:w="3"/><text x="71.7562%" y="367.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (1 samples, 0.08%)</title><rect x="71.6615%" y="341" width="0.0776%" height="15" fill="rgb(251,126,39)" fg:x="923" fg:w="1"/><text x="71.9115%" y="351.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::dealloc (1 samples, 0.08%)</title><rect x="71.6615%" y="325" width="0.0776%" height="15" fill="rgb(214,216,36)" fg:x="923" fg:w="1"/><text x="71.9115%" y="335.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::drain (1 samples, 0.08%)</title><rect x="71.6615%" y="309" width="0.0776%" height="15" fill="rgb(220,221,8)" fg:x="923" fg:w="1"/><text x="71.9115%" y="319.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (5 samples, 0.39%)</title><rect x="71.5062%" y="405" width="0.3882%" height="15" fill="rgb(240,216,3)" fg:x="921" fg:w="5"/><text x="71.7562%" y="415.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (5 samples, 0.39%)</title><rect x="71.5062%" y="389" width="0.3882%" height="15" fill="rgb(232,218,17)" fg:x="921" fg:w="5"/><text x="71.7562%" y="399.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (5 samples, 0.39%)</title><rect x="71.5062%" y="373" width="0.3882%" height="15" fill="rgb(229,163,45)" fg:x="921" fg:w="5"/><text x="71.7562%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (2 samples, 0.16%)</title><rect x="71.7391%" y="357" width="0.1553%" height="15" fill="rgb(231,110,42)" fg:x="924" fg:w="2"/><text x="71.9891%" y="367.50"></text></g><g><title>ash::device::Device::destroy_image_view (2 samples, 0.16%)</title><rect x="71.7391%" y="341" width="0.1553%" height="15" fill="rgb(208,170,48)" fg:x="924" fg:w="2"/><text x="71.9891%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="71.7391%" y="325" width="0.1553%" height="15" fill="rgb(239,116,25)" fg:x="924" fg:w="2"/><text x="71.9891%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="71.8168%" y="309" width="0.0776%" height="15" fill="rgb(219,200,50)" fg:x="925" fg:w="1"/><text x="72.0668%" y="319.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::clear (1 samples, 0.08%)</title><rect x="71.8944%" y="405" width="0.0776%" height="15" fill="rgb(245,200,0)" fg:x="926" fg:w="1"/><text x="72.1444%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.08%)</title><rect x="71.8944%" y="389" width="0.0776%" height="15" fill="rgb(245,119,33)" fg:x="926" fg:w="1"/><text x="72.1444%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1 samples, 0.08%)</title><rect x="71.8944%" y="373" width="0.0776%" height="15" fill="rgb(231,125,12)" fg:x="926" fg:w="1"/><text x="72.1444%" y="383.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (1 samples, 0.08%)</title><rect x="71.9720%" y="405" width="0.0776%" height="15" fill="rgb(216,96,41)" fg:x="927" fg:w="1"/><text x="72.2220%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (1 samples, 0.08%)</title><rect x="71.9720%" y="389" width="0.0776%" height="15" fill="rgb(248,43,45)" fg:x="927" fg:w="1"/><text x="72.2220%" y="399.50"></text></g><g><title>ash::device::Device::end_command_buffer (1 samples, 0.08%)</title><rect x="71.9720%" y="373" width="0.0776%" height="15" fill="rgb(217,222,7)" fg:x="927" fg:w="1"/><text x="72.2220%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="71.9720%" y="357" width="0.0776%" height="15" fill="rgb(233,28,6)" fg:x="927" fg:w="1"/><text x="72.2220%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="71.9720%" y="341" width="0.0776%" height="15" fill="rgb(231,218,15)" fg:x="927" fg:w="1"/><text x="72.2220%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="71.9720%" y="325" width="0.0776%" height="15" fill="rgb(226,171,48)" fg:x="927" fg:w="1"/><text x="72.2220%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="71.9720%" y="309" width="0.0776%" height="15" fill="rgb(235,201,9)" fg:x="927" fg:w="1"/><text x="72.2220%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="71.9720%" y="293" width="0.0776%" height="15" fill="rgb(217,80,15)" fg:x="927" fg:w="1"/><text x="72.2220%" y="303.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::set_size (1 samples, 0.08%)</title><rect x="72.0497%" y="405" width="0.0776%" height="15" fill="rgb(219,152,8)" fg:x="928" fg:w="1"/><text x="72.2997%" y="415.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (1 samples, 0.08%)</title><rect x="72.0497%" y="389" width="0.0776%" height="15" fill="rgb(243,107,38)" fg:x="928" fg:w="1"/><text x="72.2997%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.08%)</title><rect x="72.0497%" y="373" width="0.0776%" height="15" fill="rgb(231,17,5)" fg:x="928" fg:w="1"/><text x="72.2997%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.08%)</title><rect x="72.0497%" y="357" width="0.0776%" height="15" fill="rgb(209,25,54)" fg:x="928" fg:w="1"/><text x="72.2997%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.08%)</title><rect x="72.0497%" y="341" width="0.0776%" height="15" fill="rgb(219,0,2)" fg:x="928" fg:w="1"/><text x="72.2997%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="72.0497%" y="325" width="0.0776%" height="15" fill="rgb(246,9,5)" fg:x="928" fg:w="1"/><text x="72.2997%" y="335.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (23 samples, 1.79%)</title><rect x="70.4969%" y="437" width="1.7857%" height="15" fill="rgb(226,159,4)" fg:x="908" fg:w="23"/><text x="70.7469%" y="447.50">&lt;..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (22 samples, 1.71%)</title><rect x="70.5745%" y="421" width="1.7081%" height="15" fill="rgb(219,175,34)" fg:x="909" fg:w="22"/><text x="70.8245%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (2 samples, 0.16%)</title><rect x="72.1273%" y="405" width="0.1553%" height="15" fill="rgb(236,10,46)" fg:x="929" fg:w="2"/><text x="72.3773%" y="415.50"></text></g><g><title>ash::device::Device::begin_command_buffer (2 samples, 0.16%)</title><rect x="72.1273%" y="389" width="0.1553%" height="15" fill="rgb(240,211,16)" fg:x="929" fg:w="2"/><text x="72.3773%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="72.1273%" y="373" width="0.1553%" height="15" fill="rgb(205,3,43)" fg:x="929" fg:w="2"/><text x="72.3773%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="72.2050%" y="357" width="0.0776%" height="15" fill="rgb(245,7,22)" fg:x="930" fg:w="1"/><text x="72.4550%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="72.2050%" y="341" width="0.0776%" height="15" fill="rgb(239,132,32)" fg:x="930" fg:w="1"/><text x="72.4550%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="72.2050%" y="325" width="0.0776%" height="15" fill="rgb(228,202,34)" fg:x="930" fg:w="1"/><text x="72.4550%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="72.2050%" y="309" width="0.0776%" height="15" fill="rgb(254,200,22)" fg:x="930" fg:w="1"/><text x="72.4550%" y="319.50"></text></g><g><title>wgpu::Queue::submit (25 samples, 1.94%)</title><rect x="70.4193%" y="469" width="1.9410%" height="15" fill="rgb(219,10,39)" fg:x="907" fg:w="25"/><text x="70.6693%" y="479.50">w..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (25 samples, 1.94%)</title><rect x="70.4193%" y="453" width="1.9410%" height="15" fill="rgb(226,210,39)" fg:x="907" fg:w="25"/><text x="70.6693%" y="463.50">&lt;..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="72.2826%" y="437" width="0.0776%" height="15" fill="rgb(208,219,16)" fg:x="931" fg:w="1"/><text x="72.5326%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="72.2826%" y="421" width="0.0776%" height="15" fill="rgb(216,158,51)" fg:x="931" fg:w="1"/><text x="72.5326%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="72.3602%" y="421" width="0.0776%" height="15" fill="rgb(233,14,44)" fg:x="932" fg:w="1"/><text x="72.6102%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture::{{closure}} (1 samples, 0.08%)</title><rect x="72.3602%" y="405" width="0.0776%" height="15" fill="rgb(237,97,39)" fg:x="932" fg:w="1"/><text x="72.6102%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="72.3602%" y="389" width="0.0776%" height="15" fill="rgb(218,198,43)" fg:x="932" fg:w="1"/><text x="72.6102%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="72.3602%" y="373" width="0.0776%" height="15" fill="rgb(231,104,20)" fg:x="932" fg:w="1"/><text x="72.6102%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="72.3602%" y="357" width="0.0776%" height="15" fill="rgb(254,36,13)" fg:x="932" fg:w="1"/><text x="72.6102%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.3602%" y="341" width="0.0776%" height="15" fill="rgb(248,14,50)" fg:x="932" fg:w="1"/><text x="72.6102%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.3602%" y="325" width="0.0776%" height="15" fill="rgb(217,107,29)" fg:x="932" fg:w="1"/><text x="72.6102%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.3602%" y="309" width="0.0776%" height="15" fill="rgb(251,169,33)" fg:x="932" fg:w="1"/><text x="72.6102%" y="319.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="72.3602%" y="293" width="0.0776%" height="15" fill="rgb(217,108,32)" fg:x="932" fg:w="1"/><text x="72.6102%" y="303.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="72.4379%" y="405" width="0.0776%" height="15" fill="rgb(219,66,42)" fg:x="933" fg:w="1"/><text x="72.6879%" y="415.50"></text></g><g><title>&lt;wgpu_hal::FormatAspects as core::convert::From&lt;wgpu_types::TextureFormat&gt;&gt;::from (1 samples, 0.08%)</title><rect x="72.4379%" y="389" width="0.0776%" height="15" fill="rgb(206,180,7)" fg:x="933" fg:w="1"/><text x="72.6879%" y="399.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.08%)</title><rect x="72.5155%" y="389" width="0.0776%" height="15" fill="rgb(208,226,31)" fg:x="934" fg:w="1"/><text x="72.7655%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.08%)</title><rect x="72.5155%" y="373" width="0.0776%" height="15" fill="rgb(218,26,49)" fg:x="934" fg:w="1"/><text x="72.7655%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.08%)</title><rect x="72.5155%" y="357" width="0.0776%" height="15" fill="rgb(233,197,48)" fg:x="934" fg:w="1"/><text x="72.7655%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.08%)</title><rect x="72.5155%" y="341" width="0.0776%" height="15" fill="rgb(252,181,51)" fg:x="934" fg:w="1"/><text x="72.7655%" y="351.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (2 samples, 0.16%)</title><rect x="72.5155%" y="405" width="0.1553%" height="15" fill="rgb(253,90,19)" fg:x="934" fg:w="2"/><text x="72.7655%" y="415.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (1 samples, 0.08%)</title><rect x="72.5932%" y="389" width="0.0776%" height="15" fill="rgb(215,171,30)" fg:x="935" fg:w="1"/><text x="72.8432%" y="399.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (1 samples, 0.08%)</title><rect x="72.5932%" y="373" width="0.0776%" height="15" fill="rgb(214,222,9)" fg:x="935" fg:w="1"/><text x="72.8432%" y="383.50"></text></g><g><title>core::mem::replace (1 samples, 0.08%)</title><rect x="72.5932%" y="357" width="0.0776%" height="15" fill="rgb(223,3,22)" fg:x="935" fg:w="1"/><text x="72.8432%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="72.5932%" y="341" width="0.0776%" height="15" fill="rgb(225,196,46)" fg:x="935" fg:w="1"/><text x="72.8432%" y="351.50"></text></g><g><title>wgpu_core::init_tracker::texture::TextureInitTracker::new (1 samples, 0.08%)</title><rect x="72.6708%" y="405" width="0.0776%" height="15" fill="rgb(209,110,37)" fg:x="936" fg:w="1"/><text x="72.9208%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="72.6708%" y="389" width="0.0776%" height="15" fill="rgb(249,89,12)" fg:x="936" fg:w="1"/><text x="72.9208%" y="399.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.6708%" y="373" width="0.0776%" height="15" fill="rgb(226,27,33)" fg:x="936" fg:w="1"/><text x="72.9208%" y="383.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="72.6708%" y="357" width="0.0776%" height="15" fill="rgb(213,82,22)" fg:x="936" fg:w="1"/><text x="72.9208%" y="367.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::extend_from_iter (1 samples, 0.08%)</title><rect x="72.6708%" y="341" width="0.0776%" height="15" fill="rgb(248,140,0)" fg:x="936" fg:w="1"/><text x="72.9208%" y="351.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::insert_single (1 samples, 0.08%)</title><rect x="72.7484%" y="405" width="0.0776%" height="15" fill="rgb(228,106,3)" fg:x="937" fg:w="1"/><text x="72.9984%" y="415.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::allow_index (1 samples, 0.08%)</title><rect x="72.7484%" y="389" width="0.0776%" height="15" fill="rgb(209,23,37)" fg:x="937" fg:w="1"/><text x="72.9984%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (6 samples, 0.47%)</title><rect x="72.8261%" y="405" width="0.4658%" height="15" fill="rgb(241,93,50)" fg:x="938" fg:w="6"/><text x="73.0761%" y="415.50"></text></g><g><title>ash::device::Device::create_image_view (5 samples, 0.39%)</title><rect x="72.9037%" y="389" width="0.3882%" height="15" fill="rgb(253,46,43)" fg:x="939" fg:w="5"/><text x="73.1537%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="72.9037%" y="373" width="0.3882%" height="15" fill="rgb(226,206,43)" fg:x="939" fg:w="5"/><text x="73.1537%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="72.9037%" y="357" width="0.3882%" height="15" fill="rgb(217,54,7)" fg:x="939" fg:w="5"/><text x="73.1537%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="72.9814%" y="341" width="0.3106%" height="15" fill="rgb(223,5,52)" fg:x="940" fg:w="4"/><text x="73.2314%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="73.1366%" y="325" width="0.1553%" height="15" fill="rgb(206,52,46)" fg:x="942" fg:w="2"/><text x="73.3866%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="73.2143%" y="309" width="0.0776%" height="15" fill="rgb(253,136,11)" fg:x="943" fg:w="1"/><text x="73.4643%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="73.2143%" y="293" width="0.0776%" height="15" fill="rgb(208,106,33)" fg:x="943" fg:w="1"/><text x="73.4643%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="73.2143%" y="277" width="0.0776%" height="15" fill="rgb(206,54,4)" fg:x="943" fg:w="1"/><text x="73.4643%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="73.2143%" y="261" width="0.0776%" height="15" fill="rgb(213,3,15)" fg:x="943" fg:w="1"/><text x="73.4643%" y="271.50"></text></g><g><title>__poll (20 samples, 1.55%)</title><rect x="73.3696%" y="293" width="1.5528%" height="15" fill="rgb(252,211,39)" fg:x="945" fg:w="20"/><text x="73.6196%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="74.8447%" y="277" width="0.0776%" height="15" fill="rgb(223,6,36)" fg:x="964" fg:w="1"/><text x="75.0947%" y="287.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="74.9224%" y="293" width="0.0776%" height="15" fill="rgb(252,169,45)" fg:x="965" fg:w="1"/><text x="75.1724%" y="303.50"></text></g><g><title>ash::device::Device::wait_for_fences (23 samples, 1.79%)</title><rect x="73.2919%" y="389" width="1.7857%" height="15" fill="rgb(212,48,26)" fg:x="944" fg:w="23"/><text x="73.5419%" y="399.50">a..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (23 samples, 1.79%)</title><rect x="73.2919%" y="373" width="1.7857%" height="15" fill="rgb(251,102,48)" fg:x="944" fg:w="23"/><text x="73.5419%" y="383.50">[..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (23 samples, 1.79%)</title><rect x="73.2919%" y="357" width="1.7857%" height="15" fill="rgb(243,208,16)" fg:x="944" fg:w="23"/><text x="73.5419%" y="367.50">[..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (23 samples, 1.79%)</title><rect x="73.2919%" y="341" width="1.7857%" height="15" fill="rgb(219,96,24)" fg:x="944" fg:w="23"/><text x="73.5419%" y="351.50">[..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (23 samples, 1.79%)</title><rect x="73.2919%" y="325" width="1.7857%" height="15" fill="rgb(219,33,29)" fg:x="944" fg:w="23"/><text x="73.5419%" y="335.50">[..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (22 samples, 1.71%)</title><rect x="73.3696%" y="309" width="1.7081%" height="15" fill="rgb(223,176,5)" fg:x="945" fg:w="22"/><text x="73.6196%" y="319.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="75.0000%" y="293" width="0.0776%" height="15" fill="rgb(228,140,14)" fg:x="966" fg:w="1"/><text x="75.2500%" y="303.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="75.0000%" y="277" width="0.0776%" height="15" fill="rgb(217,179,31)" fg:x="966" fg:w="1"/><text x="75.2500%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="75.0776%" y="325" width="0.0776%" height="15" fill="rgb(230,9,30)" fg:x="967" fg:w="1"/><text x="75.3276%" y="335.50"></text></g><g><title>wgpu::Surface::get_current_texture (39 samples, 3.03%)</title><rect x="72.3602%" y="469" width="3.0280%" height="15" fill="rgb(230,136,20)" fg:x="932" fg:w="39"/><text x="72.6102%" y="479.50">wgp..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (39 samples, 3.03%)</title><rect x="72.3602%" y="453" width="3.0280%" height="15" fill="rgb(215,210,22)" fg:x="932" fg:w="39"/><text x="72.6102%" y="463.50">&lt;T ..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (39 samples, 3.03%)</title><rect x="72.3602%" y="437" width="3.0280%" height="15" fill="rgb(218,43,5)" fg:x="932" fg:w="39"/><text x="72.6102%" y="447.50">&lt;wg..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (38 samples, 2.95%)</title><rect x="72.4379%" y="421" width="2.9503%" height="15" fill="rgb(216,11,5)" fg:x="933" fg:w="38"/><text x="72.6879%" y="431.50">wgp..</text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (27 samples, 2.10%)</title><rect x="73.2919%" y="405" width="2.0963%" height="15" fill="rgb(209,82,29)" fg:x="944" fg:w="27"/><text x="73.5419%" y="415.50">w..</text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (4 samples, 0.31%)</title><rect x="75.0776%" y="389" width="0.3106%" height="15" fill="rgb(244,115,12)" fg:x="967" fg:w="4"/><text x="75.3276%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="75.0776%" y="373" width="0.3106%" height="15" fill="rgb(222,82,18)" fg:x="967" fg:w="4"/><text x="75.3276%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="75.0776%" y="357" width="0.3106%" height="15" fill="rgb(249,227,8)" fg:x="967" fg:w="4"/><text x="75.3276%" y="367.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="75.0776%" y="341" width="0.3106%" height="15" fill="rgb(253,141,45)" fg:x="967" fg:w="4"/><text x="75.3276%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="75.1553%" y="325" width="0.2329%" height="15" fill="rgb(234,184,4)" fg:x="968" fg:w="3"/><text x="75.4053%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="75.1553%" y="309" width="0.2329%" height="15" fill="rgb(218,194,23)" fg:x="968" fg:w="3"/><text x="75.4053%" y="319.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="77.1739%" y="213" width="0.0776%" height="15" fill="rgb(235,66,41)" fg:x="994" fg:w="1"/><text x="77.4239%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="77.2516%" y="197" width="0.3106%" height="15" fill="rgb(245,217,1)" fg:x="995" fg:w="4"/><text x="77.5016%" y="207.50"></text></g><g><title>__sched_yield (17 samples, 1.32%)</title><rect x="77.5621%" y="197" width="1.3199%" height="15" fill="rgb(229,91,1)" fg:x="999" fg:w="17"/><text x="77.8121%" y="207.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (38 samples, 2.95%)</title><rect x="76.0093%" y="261" width="2.9503%" height="15" fill="rgb(207,101,30)" fg:x="979" fg:w="38"/><text x="76.2593%" y="271.50">[li..</text></g><g><title>[libGLX_nvidia.so.530.41.03] (37 samples, 2.87%)</title><rect x="76.0870%" y="245" width="2.8727%" height="15" fill="rgb(223,82,49)" fg:x="980" fg:w="37"/><text x="76.3370%" y="255.50">[l..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (37 samples, 2.87%)</title><rect x="76.0870%" y="229" width="2.8727%" height="15" fill="rgb(218,167,17)" fg:x="980" fg:w="37"/><text x="76.3370%" y="239.50">[l..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (22 samples, 1.71%)</title><rect x="77.2516%" y="213" width="1.7081%" height="15" fill="rgb(208,103,14)" fg:x="995" fg:w="22"/><text x="77.5016%" y="223.50"></text></g><g><title>sched_yield@plt (1 samples, 0.08%)</title><rect x="78.8820%" y="197" width="0.0776%" height="15" fill="rgb(238,20,8)" fg:x="1016" fg:w="1"/><text x="79.1320%" y="207.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (40 samples, 3.11%)</title><rect x="75.9317%" y="277" width="3.1056%" height="15" fill="rgb(218,80,54)" fg:x="978" fg:w="40"/><text x="76.1817%" y="287.50">[li..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="78.9596%" y="261" width="0.0776%" height="15" fill="rgb(240,144,17)" fg:x="1017" fg:w="1"/><text x="79.2096%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="79.4255%" y="229" width="0.0776%" height="15" fill="rgb(245,27,50)" fg:x="1023" fg:w="1"/><text x="79.6755%" y="239.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (51 samples, 3.96%)</title><rect x="75.6211%" y="405" width="3.9596%" height="15" fill="rgb(251,51,7)" fg:x="974" fg:w="51"/><text x="75.8711%" y="415.50">&lt;wgp..</text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (51 samples, 3.96%)</title><rect x="75.6211%" y="389" width="3.9596%" height="15" fill="rgb(245,217,29)" fg:x="974" fg:w="51"/><text x="75.8711%" y="399.50">ash:..</text></g><g><title>[libGLX_nvidia.so.530.41.03] (51 samples, 3.96%)</title><rect x="75.6211%" y="373" width="3.9596%" height="15" fill="rgb(221,176,29)" fg:x="974" fg:w="51"/><text x="75.8711%" y="383.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (51 samples, 3.96%)</title><rect x="75.6211%" y="357" width="3.9596%" height="15" fill="rgb(212,180,24)" fg:x="974" fg:w="51"/><text x="75.8711%" y="367.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (51 samples, 3.96%)</title><rect x="75.6211%" y="341" width="3.9596%" height="15" fill="rgb(254,24,2)" fg:x="974" fg:w="51"/><text x="75.8711%" y="351.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (50 samples, 3.88%)</title><rect x="75.6988%" y="325" width="3.8820%" height="15" fill="rgb(230,100,2)" fg:x="975" fg:w="50"/><text x="75.9488%" y="335.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (49 samples, 3.80%)</title><rect x="75.7764%" y="309" width="3.8043%" height="15" fill="rgb(219,142,25)" fg:x="976" fg:w="49"/><text x="76.0264%" y="319.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (48 samples, 3.73%)</title><rect x="75.8540%" y="293" width="3.7267%" height="15" fill="rgb(240,73,43)" fg:x="977" fg:w="48"/><text x="76.1040%" y="303.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (7 samples, 0.54%)</title><rect x="79.0373%" y="277" width="0.5435%" height="15" fill="rgb(214,114,15)" fg:x="1018" fg:w="7"/><text x="79.2873%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="79.2702%" y="261" width="0.3106%" height="15" fill="rgb(207,130,4)" fg:x="1021" fg:w="4"/><text x="79.5202%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="79.3478%" y="245" width="0.2329%" height="15" fill="rgb(221,25,40)" fg:x="1022" fg:w="3"/><text x="79.5978%" y="255.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="79.5031%" y="229" width="0.0776%" height="15" fill="rgb(241,184,7)" fg:x="1024" fg:w="1"/><text x="79.7531%" y="239.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="79.5031%" y="213" width="0.0776%" height="15" fill="rgb(235,159,4)" fg:x="1024" fg:w="1"/><text x="79.7531%" y="223.50"></text></g><g><title>[[vdso]] (1 samples, 0.08%)</title><rect x="79.5031%" y="197" width="0.0776%" height="15" fill="rgb(214,87,48)" fg:x="1024" fg:w="1"/><text x="79.7531%" y="207.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister (1 samples, 0.08%)</title><rect x="79.5807%" y="405" width="0.0776%" height="15" fill="rgb(246,198,24)" fg:x="1025" fg:w="1"/><text x="79.8307%" y="415.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (1 samples, 0.08%)</title><rect x="79.5807%" y="389" width="0.0776%" height="15" fill="rgb(209,66,40)" fg:x="1025" fg:w="1"/><text x="79.8307%" y="399.50"></text></g><g><title>core::mem::replace (1 samples, 0.08%)</title><rect x="79.5807%" y="373" width="0.0776%" height="15" fill="rgb(233,147,39)" fg:x="1025" fg:w="1"/><text x="79.8307%" y="383.50"></text></g><g><title>core::ptr::read (1 samples, 0.08%)</title><rect x="79.5807%" y="357" width="0.0776%" height="15" fill="rgb(231,145,52)" fg:x="1025" fg:w="1"/><text x="79.8307%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.08%)</title><rect x="79.5807%" y="341" width="0.0776%" height="15" fill="rgb(206,20,26)" fg:x="1025" fg:w="1"/><text x="79.8307%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="79.5807%" y="325" width="0.0776%" height="15" fill="rgb(238,220,4)" fg:x="1025" fg:w="1"/><text x="79.8307%" y="335.50"></text></g><g><title>wgpu::SurfaceTexture::present (56 samples, 4.35%)</title><rect x="75.3882%" y="469" width="4.3478%" height="15" fill="rgb(252,195,42)" fg:x="971" fg:w="56"/><text x="75.6382%" y="479.50">wgpu:..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (55 samples, 4.27%)</title><rect x="75.4658%" y="453" width="4.2702%" height="15" fill="rgb(209,10,6)" fg:x="972" fg:w="55"/><text x="75.7158%" y="463.50">&lt;T as..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (55 samples, 4.27%)</title><rect x="75.4658%" y="437" width="4.2702%" height="15" fill="rgb(229,3,52)" fg:x="972" fg:w="55"/><text x="75.7158%" y="447.50">&lt;wgpu..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (53 samples, 4.11%)</title><rect x="75.6211%" y="421" width="4.1149%" height="15" fill="rgb(253,49,37)" fg:x="974" fg:w="53"/><text x="75.8711%" y="431.50">wgpu..</text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::remove (1 samples, 0.08%)</title><rect x="79.6584%" y="405" width="0.0776%" height="15" fill="rgb(240,103,49)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.08%)</title><rect x="79.6584%" y="389" width="0.0776%" height="15" fill="rgb(250,182,30)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.08%)</title><rect x="79.6584%" y="373" width="0.0776%" height="15" fill="rgb(248,8,30)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="79.6584%" y="357" width="0.0776%" height="15" fill="rgb(237,120,30)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="79.6584%" y="341" width="0.0776%" height="15" fill="rgb(221,146,34)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.08%)</title><rect x="79.6584%" y="325" width="0.0776%" height="15" fill="rgb(242,55,13)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.08%)</title><rect x="79.6584%" y="309" width="0.0776%" height="15" fill="rgb(242,112,31)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.08%)</title><rect x="79.6584%" y="293" width="0.0776%" height="15" fill="rgb(249,192,27)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.08%)</title><rect x="79.6584%" y="277" width="0.0776%" height="15" fill="rgb(208,204,44)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.6584%" y="261" width="0.0776%" height="15" fill="rgb(208,93,54)" fg:x="1026" fg:w="1"/><text x="79.9084%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.08%)</title><rect x="79.8137%" y="389" width="0.0776%" height="15" fill="rgb(242,1,31)" fg:x="1028" fg:w="1"/><text x="80.0637%" y="399.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view::{{closure}} (1 samples, 0.08%)</title><rect x="79.8137%" y="373" width="0.0776%" height="15" fill="rgb(241,83,25)" fg:x="1028" fg:w="1"/><text x="80.0637%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::saturating_sub (1 samples, 0.08%)</title><rect x="79.8137%" y="357" width="0.0776%" height="15" fill="rgb(205,169,50)" fg:x="1028" fg:w="1"/><text x="80.0637%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (2 samples, 0.16%)</title><rect x="79.8913%" y="389" width="0.1553%" height="15" fill="rgb(239,186,37)" fg:x="1029" fg:w="2"/><text x="80.1413%" y="399.50"></text></g><g><title>ash::device::Device::create_image_view (2 samples, 0.16%)</title><rect x="79.8913%" y="373" width="0.1553%" height="15" fill="rgb(205,221,10)" fg:x="1029" fg:w="2"/><text x="80.1413%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="79.8913%" y="357" width="0.1553%" height="15" fill="rgb(218,196,15)" fg:x="1029" fg:w="2"/><text x="80.1413%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="79.8913%" y="341" width="0.1553%" height="15" fill="rgb(218,196,35)" fg:x="1029" fg:w="2"/><text x="80.1413%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="79.8913%" y="325" width="0.1553%" height="15" fill="rgb(233,63,24)" fg:x="1029" fg:w="2"/><text x="80.1413%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (5 samples, 0.39%)</title><rect x="79.7360%" y="405" width="0.3882%" height="15" fill="rgb(225,8,4)" fg:x="1027" fg:w="5"/><text x="79.9860%" y="415.50"></text></g><g><title>wgpu_types::TextureViewDimension::compatible_texture_dimension (1 samples, 0.08%)</title><rect x="80.0466%" y="389" width="0.0776%" height="15" fill="rgb(234,105,35)" fg:x="1031" fg:w="1"/><text x="80.2966%" y="399.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (1 samples, 0.08%)</title><rect x="80.1242%" y="405" width="0.0776%" height="15" fill="rgb(236,21,32)" fg:x="1032" fg:w="1"/><text x="80.3742%" y="415.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (1 samples, 0.08%)</title><rect x="80.1242%" y="389" width="0.0776%" height="15" fill="rgb(228,109,6)" fg:x="1032" fg:w="1"/><text x="80.3742%" y="399.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (1 samples, 0.08%)</title><rect x="80.1242%" y="373" width="0.0776%" height="15" fill="rgb(229,215,31)" fg:x="1032" fg:w="1"/><text x="80.3742%" y="383.50"></text></g><g><title>core::mem::replace (1 samples, 0.08%)</title><rect x="80.1242%" y="357" width="0.0776%" height="15" fill="rgb(221,52,54)" fg:x="1032" fg:w="1"/><text x="80.3742%" y="367.50"></text></g><g><title>core::ptr::read (1 samples, 0.08%)</title><rect x="80.1242%" y="341" width="0.0776%" height="15" fill="rgb(252,129,43)" fg:x="1032" fg:w="1"/><text x="80.3742%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.08%)</title><rect x="80.1242%" y="325" width="0.0776%" height="15" fill="rgb(248,183,27)" fg:x="1032" fg:w="1"/><text x="80.3742%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="80.1242%" y="309" width="0.0776%" height="15" fill="rgb(250,0,22)" fg:x="1032" fg:w="1"/><text x="80.3742%" y="319.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (180 samples, 13.98%)</title><rect x="66.3043%" y="517" width="13.9752%" height="15" fill="rgb(213,166,10)" fg:x="854" fg:w="180"/><text x="66.5543%" y="527.50">winit::platform_impl:..</text></g><g><title>framer::window::Window::launch::{{closure}}::{{closure}} (180 samples, 13.98%)</title><rect x="66.3043%" y="501" width="13.9752%" height="15" fill="rgb(207,163,36)" fg:x="854" fg:w="180"/><text x="66.5543%" y="511.50">framer::window::Windo..</text></g><g><title>framer::renderer::State::render (180 samples, 13.98%)</title><rect x="66.3043%" y="485" width="13.9752%" height="15" fill="rgb(208,122,22)" fg:x="854" fg:w="180"/><text x="66.5543%" y="495.50">framer::renderer::Sta..</text></g><g><title>wgpu::Texture::create_view (7 samples, 0.54%)</title><rect x="79.7360%" y="469" width="0.5435%" height="15" fill="rgb(207,104,49)" fg:x="1027" fg:w="7"/><text x="79.9860%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_create_view (7 samples, 0.54%)</title><rect x="79.7360%" y="453" width="0.5435%" height="15" fill="rgb(248,211,50)" fg:x="1027" fg:w="7"/><text x="79.9860%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::texture_create_view (7 samples, 0.54%)</title><rect x="79.7360%" y="437" width="0.5435%" height="15" fill="rgb(217,13,45)" fg:x="1027" fg:w="7"/><text x="79.9860%" y="447.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (7 samples, 0.54%)</title><rect x="79.7360%" y="421" width="0.5435%" height="15" fill="rgb(211,216,49)" fg:x="1027" fg:w="7"/><text x="79.9860%" y="431.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.08%)</title><rect x="80.2019%" y="405" width="0.0776%" height="15" fill="rgb(221,58,53)" fg:x="1033" fg:w="1"/><text x="80.4519%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.08%)</title><rect x="80.2795%" y="501" width="0.0776%" height="15" fill="rgb(220,112,41)" fg:x="1034" fg:w="1"/><text x="80.5295%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="80.2795%" y="485" width="0.0776%" height="15" fill="rgb(236,38,28)" fg:x="1034" fg:w="1"/><text x="80.5295%" y="495.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (2 samples, 0.16%)</title><rect x="80.3571%" y="501" width="0.1553%" height="15" fill="rgb(227,195,22)" fg:x="1035" fg:w="2"/><text x="80.6071%" y="511.50"></text></g><g><title>XCheckIfEvent (2 samples, 0.16%)</title><rect x="80.3571%" y="485" width="0.1553%" height="15" fill="rgb(214,55,33)" fg:x="1035" fg:w="2"/><text x="80.6071%" y="495.50"></text></g><g><title>XFilterEvent (1 samples, 0.08%)</title><rect x="80.6677%" y="485" width="0.0776%" height="15" fill="rgb(248,80,13)" fg:x="1039" fg:w="1"/><text x="80.9177%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="80.7453%" y="485" width="0.0776%" height="15" fill="rgb(238,52,6)" fg:x="1040" fg:w="1"/><text x="80.9953%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.08%)</title><rect x="80.7453%" y="469" width="0.0776%" height="15" fill="rgb(224,198,47)" fg:x="1040" fg:w="1"/><text x="80.9953%" y="479.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1 samples, 0.08%)</title><rect x="80.8230%" y="485" width="0.0776%" height="15" fill="rgb(233,171,20)" fg:x="1041" fg:w="1"/><text x="81.0730%" y="495.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (1 samples, 0.08%)</title><rect x="81.0559%" y="357" width="0.0776%" height="15" fill="rgb(241,30,25)" fg:x="1044" fg:w="1"/><text x="81.3059%" y="367.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.08%)</title><rect x="81.0559%" y="341" width="0.0776%" height="15" fill="rgb(207,171,38)" fg:x="1044" fg:w="1"/><text x="81.3059%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_hal::SurfaceCapabilities&gt; (1 samples, 0.08%)</title><rect x="81.1335%" y="357" width="0.0776%" height="15" fill="rgb(234,70,1)" fg:x="1045" fg:w="1"/><text x="81.3835%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu_types::TextureFormat&gt;&gt; (1 samples, 0.08%)</title><rect x="81.1335%" y="341" width="0.0776%" height="15" fill="rgb(232,178,18)" fg:x="1045" fg:w="1"/><text x="81.3835%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu_types::TextureFormat&gt;&gt; (1 samples, 0.08%)</title><rect x="81.1335%" y="325" width="0.0776%" height="15" fill="rgb(241,78,40)" fg:x="1045" fg:w="1"/><text x="81.3835%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.1335%" y="309" width="0.0776%" height="15" fill="rgb(222,35,25)" fg:x="1045" fg:w="1"/><text x="81.3835%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="81.1335%" y="293" width="0.0776%" height="15" fill="rgb(207,92,16)" fg:x="1045" fg:w="1"/><text x="81.3835%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="81.1335%" y="277" width="0.0776%" height="15" fill="rgb(216,59,51)" fg:x="1045" fg:w="1"/><text x="81.3835%" y="287.50"></text></g><g><title>__rust_dealloc (1 samples, 0.08%)</title><rect x="81.1335%" y="261" width="0.0776%" height="15" fill="rgb(213,80,28)" fg:x="1045" fg:w="1"/><text x="81.3835%" y="271.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.08%)</title><rect x="81.2112%" y="357" width="0.0776%" height="15" fill="rgb(220,93,7)" fg:x="1046" fg:w="1"/><text x="81.4612%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="81.3665%" y="245" width="0.0776%" height="15" fill="rgb(225,24,44)" fg:x="1048" fg:w="1"/><text x="81.6165%" y="255.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="81.3665%" y="229" width="0.0776%" height="15" fill="rgb(243,74,40)" fg:x="1048" fg:w="1"/><text x="81.6165%" y="239.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_capabilities (3 samples, 0.23%)</title><rect x="81.2888%" y="341" width="0.2329%" height="15" fill="rgb(228,39,7)" fg:x="1047" fg:w="3"/><text x="81.5388%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="81.2888%" y="325" width="0.2329%" height="15" fill="rgb(227,79,8)" fg:x="1047" fg:w="3"/><text x="81.5388%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="81.2888%" y="309" width="0.2329%" height="15" fill="rgb(236,58,11)" fg:x="1047" fg:w="3"/><text x="81.5388%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="81.3665%" y="293" width="0.1553%" height="15" fill="rgb(249,63,35)" fg:x="1048" fg:w="2"/><text x="81.6165%" y="303.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="81.3665%" y="277" width="0.1553%" height="15" fill="rgb(252,114,16)" fg:x="1048" fg:w="2"/><text x="81.6165%" y="287.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="81.3665%" y="261" width="0.1553%" height="15" fill="rgb(254,151,24)" fg:x="1048" fg:w="2"/><text x="81.6165%" y="271.50"></text></g><g><title>_XReply (1 samples, 0.08%)</title><rect x="81.4441%" y="245" width="0.0776%" height="15" fill="rgb(253,54,39)" fg:x="1049" fg:w="1"/><text x="81.6941%" y="255.50"></text></g><g><title>_XSend (1 samples, 0.08%)</title><rect x="81.4441%" y="229" width="0.0776%" height="15" fill="rgb(243,25,45)" fg:x="1049" fg:w="1"/><text x="81.6941%" y="239.50"></text></g><g><title>xcb_writev (1 samples, 0.08%)</title><rect x="81.4441%" y="213" width="0.0776%" height="15" fill="rgb(234,134,9)" fg:x="1049" fg:w="1"/><text x="81.6941%" y="223.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="81.4441%" y="197" width="0.0776%" height="15" fill="rgb(227,166,31)" fg:x="1049" fg:w="1"/><text x="81.6941%" y="207.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="81.4441%" y="181" width="0.0776%" height="15" fill="rgb(245,143,41)" fg:x="1049" fg:w="1"/><text x="81.6941%" y="191.50"></text></g><g><title>writev (1 samples, 0.08%)</title><rect x="81.4441%" y="165" width="0.0776%" height="15" fill="rgb(238,181,32)" fg:x="1049" fg:w="1"/><text x="81.6941%" y="175.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="81.5217%" y="213" width="0.1553%" height="15" fill="rgb(224,113,18)" fg:x="1050" fg:w="2"/><text x="81.7717%" y="223.50"></text></g><g><title>__poll (1 samples, 0.08%)</title><rect x="81.5994%" y="197" width="0.0776%" height="15" fill="rgb(240,229,28)" fg:x="1051" fg:w="1"/><text x="81.8494%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="81.6770%" y="213" width="0.0776%" height="15" fill="rgb(250,185,3)" fg:x="1052" fg:w="1"/><text x="81.9270%" y="223.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="81.6770%" y="197" width="0.0776%" height="15" fill="rgb(212,59,25)" fg:x="1052" fg:w="1"/><text x="81.9270%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="81.6770%" y="181" width="0.0776%" height="15" fill="rgb(221,87,20)" fg:x="1052" fg:w="1"/><text x="81.9270%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="81.6770%" y="165" width="0.0776%" height="15" fill="rgb(213,74,28)" fg:x="1052" fg:w="1"/><text x="81.9270%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="81.5217%" y="277" width="0.3106%" height="15" fill="rgb(224,132,34)" fg:x="1050" fg:w="4"/><text x="81.7717%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="81.5217%" y="261" width="0.3106%" height="15" fill="rgb(222,101,24)" fg:x="1050" fg:w="4"/><text x="81.7717%" y="271.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="81.5217%" y="245" width="0.3106%" height="15" fill="rgb(254,142,4)" fg:x="1050" fg:w="4"/><text x="81.7717%" y="255.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (4 samples, 0.31%)</title><rect x="81.5217%" y="229" width="0.3106%" height="15" fill="rgb(230,229,49)" fg:x="1050" fg:w="4"/><text x="81.7717%" y="239.50"></text></g><g><title>_XReply (1 samples, 0.08%)</title><rect x="81.7547%" y="213" width="0.0776%" height="15" fill="rgb(238,70,47)" fg:x="1053" fg:w="1"/><text x="82.0047%" y="223.50"></text></g><g><title>xcb_wait_for_reply64 (1 samples, 0.08%)</title><rect x="81.7547%" y="197" width="0.0776%" height="15" fill="rgb(231,160,17)" fg:x="1053" fg:w="1"/><text x="82.0047%" y="207.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="81.7547%" y="181" width="0.0776%" height="15" fill="rgb(218,68,53)" fg:x="1053" fg:w="1"/><text x="82.0047%" y="191.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="81.7547%" y="165" width="0.0776%" height="15" fill="rgb(236,111,10)" fg:x="1053" fg:w="1"/><text x="82.0047%" y="175.50"></text></g><g><title>__poll (1 samples, 0.08%)</title><rect x="81.7547%" y="149" width="0.0776%" height="15" fill="rgb(224,34,41)" fg:x="1053" fg:w="1"/><text x="82.0047%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="81.7547%" y="133" width="0.0776%" height="15" fill="rgb(241,118,19)" fg:x="1053" fg:w="1"/><text x="82.0047%" y="143.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_formats (5 samples, 0.39%)</title><rect x="81.5217%" y="341" width="0.3882%" height="15" fill="rgb(238,129,25)" fg:x="1050" fg:w="5"/><text x="81.7717%" y="351.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (5 samples, 0.39%)</title><rect x="81.5217%" y="325" width="0.3882%" height="15" fill="rgb(238,22,31)" fg:x="1050" fg:w="5"/><text x="81.7717%" y="335.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_formats::{{closure}} (5 samples, 0.39%)</title><rect x="81.5217%" y="309" width="0.3882%" height="15" fill="rgb(222,174,48)" fg:x="1050" fg:w="5"/><text x="81.7717%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="81.5217%" y="293" width="0.3882%" height="15" fill="rgb(206,152,40)" fg:x="1050" fg:w="5"/><text x="81.7717%" y="303.50"></text></g><g><title>memcpy (1 samples, 0.08%)</title><rect x="81.8323%" y="277" width="0.0776%" height="15" fill="rgb(218,99,54)" fg:x="1054" fg:w="1"/><text x="82.0823%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="82.1429%" y="213" width="0.0776%" height="15" fill="rgb(220,174,26)" fg:x="1058" fg:w="1"/><text x="82.3929%" y="223.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="82.1429%" y="197" width="0.0776%" height="15" fill="rgb(245,116,9)" fg:x="1058" fg:w="1"/><text x="82.3929%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="82.1429%" y="181" width="0.0776%" height="15" fill="rgb(209,72,35)" fg:x="1058" fg:w="1"/><text x="82.3929%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="82.1429%" y="165" width="0.0776%" height="15" fill="rgb(226,126,21)" fg:x="1058" fg:w="1"/><text x="82.3929%" y="175.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="82.2981%" y="197" width="0.0776%" height="15" fill="rgb(227,192,1)" fg:x="1060" fg:w="1"/><text x="82.5481%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="82.4534%" y="149" width="0.0776%" height="15" fill="rgb(237,180,29)" fg:x="1062" fg:w="1"/><text x="82.7034%" y="159.50"></text></g><g><title>__poll (1 samples, 0.08%)</title><rect x="82.5311%" y="149" width="0.0776%" height="15" fill="rgb(230,197,35)" fg:x="1063" fg:w="1"/><text x="82.7811%" y="159.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (7 samples, 0.54%)</title><rect x="82.1429%" y="229" width="0.5435%" height="15" fill="rgb(246,193,31)" fg:x="1058" fg:w="7"/><text x="82.3929%" y="239.50"></text></g><g><title>_XReply (6 samples, 0.47%)</title><rect x="82.2205%" y="213" width="0.4658%" height="15" fill="rgb(241,36,4)" fg:x="1059" fg:w="6"/><text x="82.4705%" y="223.50"></text></g><g><title>xcb_wait_for_reply64 (4 samples, 0.31%)</title><rect x="82.3758%" y="197" width="0.3106%" height="15" fill="rgb(241,130,17)" fg:x="1061" fg:w="4"/><text x="82.6258%" y="207.50"></text></g><g><title>[libxcb.so.1.1.0] (4 samples, 0.31%)</title><rect x="82.3758%" y="181" width="0.3106%" height="15" fill="rgb(206,137,32)" fg:x="1061" fg:w="4"/><text x="82.6258%" y="191.50"></text></g><g><title>[libxcb.so.1.1.0] (4 samples, 0.31%)</title><rect x="82.3758%" y="165" width="0.3106%" height="15" fill="rgb(237,228,51)" fg:x="1061" fg:w="4"/><text x="82.6258%" y="175.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.08%)</title><rect x="82.6087%" y="149" width="0.0776%" height="15" fill="rgb(243,6,42)" fg:x="1064" fg:w="1"/><text x="82.8587%" y="159.50"></text></g><g><title>_XSend (1 samples, 0.08%)</title><rect x="82.6863%" y="213" width="0.0776%" height="15" fill="rgb(251,74,28)" fg:x="1065" fg:w="1"/><text x="82.9363%" y="223.50"></text></g><g><title>xcb_writev (1 samples, 0.08%)</title><rect x="82.6863%" y="197" width="0.0776%" height="15" fill="rgb(218,20,49)" fg:x="1065" fg:w="1"/><text x="82.9363%" y="207.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="82.6863%" y="181" width="0.0776%" height="15" fill="rgb(238,28,14)" fg:x="1065" fg:w="1"/><text x="82.9363%" y="191.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="82.6863%" y="165" width="0.0776%" height="15" fill="rgb(229,40,46)" fg:x="1065" fg:w="1"/><text x="82.9363%" y="175.50"></text></g><g><title>__poll (1 samples, 0.08%)</title><rect x="82.6863%" y="149" width="0.0776%" height="15" fill="rgb(244,195,20)" fg:x="1065" fg:w="1"/><text x="82.9363%" y="159.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_present_modes (12 samples, 0.93%)</title><rect x="81.9099%" y="341" width="0.9317%" height="15" fill="rgb(253,56,35)" fg:x="1055" fg:w="12"/><text x="82.1599%" y="351.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (12 samples, 0.93%)</title><rect x="81.9099%" y="325" width="0.9317%" height="15" fill="rgb(210,149,44)" fg:x="1055" fg:w="12"/><text x="82.1599%" y="335.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_present_modes::{{closure}} (12 samples, 0.93%)</title><rect x="81.9099%" y="309" width="0.9317%" height="15" fill="rgb(240,135,12)" fg:x="1055" fg:w="12"/><text x="82.1599%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (12 samples, 0.93%)</title><rect x="81.9099%" y="293" width="0.9317%" height="15" fill="rgb(251,24,50)" fg:x="1055" fg:w="12"/><text x="82.1599%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (11 samples, 0.85%)</title><rect x="81.9876%" y="277" width="0.8540%" height="15" fill="rgb(243,200,47)" fg:x="1056" fg:w="11"/><text x="82.2376%" y="287.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (10 samples, 0.78%)</title><rect x="82.0652%" y="261" width="0.7764%" height="15" fill="rgb(224,166,26)" fg:x="1057" fg:w="10"/><text x="82.3152%" y="271.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (10 samples, 0.78%)</title><rect x="82.0652%" y="245" width="0.7764%" height="15" fill="rgb(233,0,47)" fg:x="1057" fg:w="10"/><text x="82.3152%" y="255.50"></text></g><g><title>_XReply (2 samples, 0.16%)</title><rect x="82.6863%" y="229" width="0.1553%" height="15" fill="rgb(253,80,5)" fg:x="1065" fg:w="2"/><text x="82.9363%" y="239.50"></text></g><g><title>xcb_wait_for_reply64 (1 samples, 0.08%)</title><rect x="82.7640%" y="213" width="0.0776%" height="15" fill="rgb(214,133,25)" fg:x="1066" fg:w="1"/><text x="83.0140%" y="223.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="82.7640%" y="197" width="0.0776%" height="15" fill="rgb(209,27,14)" fg:x="1066" fg:w="1"/><text x="83.0140%" y="207.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="82.7640%" y="181" width="0.0776%" height="15" fill="rgb(219,102,51)" fg:x="1066" fg:w="1"/><text x="83.0140%" y="191.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="82.7640%" y="165" width="0.0776%" height="15" fill="rgb(237,18,16)" fg:x="1066" fg:w="1"/><text x="83.0140%" y="175.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="82.7640%" y="149" width="0.0776%" height="15" fill="rgb(241,85,17)" fg:x="1066" fg:w="1"/><text x="83.0140%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="82.9193%" y="261" width="0.0776%" height="15" fill="rgb(236,90,42)" fg:x="1068" fg:w="1"/><text x="83.1693%" y="271.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="82.9193%" y="245" width="0.0776%" height="15" fill="rgb(249,57,21)" fg:x="1068" fg:w="1"/><text x="83.1693%" y="255.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="82.9193%" y="293" width="0.2329%" height="15" fill="rgb(243,12,36)" fg:x="1068" fg:w="3"/><text x="83.1693%" y="303.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (3 samples, 0.23%)</title><rect x="82.9193%" y="277" width="0.2329%" height="15" fill="rgb(253,128,47)" fg:x="1068" fg:w="3"/><text x="83.1693%" y="287.50"></text></g><g><title>_XReply (2 samples, 0.16%)</title><rect x="82.9969%" y="261" width="0.1553%" height="15" fill="rgb(207,33,20)" fg:x="1069" fg:w="2"/><text x="83.2469%" y="271.50"></text></g><g><title>_XSend (2 samples, 0.16%)</title><rect x="82.9969%" y="245" width="0.1553%" height="15" fill="rgb(233,215,35)" fg:x="1069" fg:w="2"/><text x="83.2469%" y="255.50"></text></g><g><title>xcb_writev (2 samples, 0.16%)</title><rect x="82.9969%" y="229" width="0.1553%" height="15" fill="rgb(249,188,52)" fg:x="1069" fg:w="2"/><text x="83.2469%" y="239.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="83.0745%" y="213" width="0.0776%" height="15" fill="rgb(225,12,32)" fg:x="1070" fg:w="1"/><text x="83.3245%" y="223.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="83.0745%" y="197" width="0.0776%" height="15" fill="rgb(247,98,14)" fg:x="1070" fg:w="1"/><text x="83.3245%" y="207.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.08%)</title><rect x="83.0745%" y="181" width="0.0776%" height="15" fill="rgb(247,219,48)" fg:x="1070" fg:w="1"/><text x="83.3245%" y="191.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (25 samples, 1.94%)</title><rect x="81.2888%" y="357" width="1.9410%" height="15" fill="rgb(253,60,48)" fg:x="1047" fg:w="25"/><text x="81.5388%" y="367.50">w..</text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (5 samples, 0.39%)</title><rect x="82.8416%" y="341" width="0.3882%" height="15" fill="rgb(245,15,52)" fg:x="1067" fg:w="5"/><text x="83.0916%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="82.8416%" y="325" width="0.3882%" height="15" fill="rgb(220,133,28)" fg:x="1067" fg:w="5"/><text x="83.0916%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="82.8416%" y="309" width="0.3882%" height="15" fill="rgb(217,180,4)" fg:x="1067" fg:w="5"/><text x="83.0916%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="83.1522%" y="293" width="0.0776%" height="15" fill="rgb(251,24,1)" fg:x="1071" fg:w="1"/><text x="83.4022%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="83.6180%" y="197" width="0.3882%" height="15" fill="rgb(212,185,49)" fg:x="1077" fg:w="5"/><text x="83.8680%" y="207.50"></text></g><g><title>ash::device::Device::destroy_fence (11 samples, 0.85%)</title><rect x="83.2298%" y="293" width="0.8540%" height="15" fill="rgb(215,175,22)" fg:x="1072" fg:w="11"/><text x="83.4798%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (11 samples, 0.85%)</title><rect x="83.2298%" y="277" width="0.8540%" height="15" fill="rgb(250,205,14)" fg:x="1072" fg:w="11"/><text x="83.4798%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (11 samples, 0.85%)</title><rect x="83.2298%" y="261" width="0.8540%" height="15" fill="rgb(225,211,22)" fg:x="1072" fg:w="11"/><text x="83.4798%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (9 samples, 0.70%)</title><rect x="83.3851%" y="245" width="0.6988%" height="15" fill="rgb(251,179,42)" fg:x="1074" fg:w="9"/><text x="83.6351%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="83.6180%" y="229" width="0.4658%" height="15" fill="rgb(208,216,51)" fg:x="1077" fg:w="6"/><text x="83.8680%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="83.6180%" y="213" width="0.4658%" height="15" fill="rgb(235,36,11)" fg:x="1077" fg:w="6"/><text x="83.8680%" y="223.50"></text></g><g><title>time@plt (1 samples, 0.08%)</title><rect x="84.0062%" y="197" width="0.0776%" height="15" fill="rgb(213,189,28)" fg:x="1082" fg:w="1"/><text x="84.2562%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="84.1615%" y="133" width="0.2329%" height="15" fill="rgb(227,203,42)" fg:x="1084" fg:w="3"/><text x="84.4115%" y="143.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.08%)</title><rect x="84.3944%" y="133" width="0.0776%" height="15" fill="rgb(244,72,36)" fg:x="1087" fg:w="1"/><text x="84.6444%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 1.40%)</title><rect x="83.2298%" y="341" width="1.3975%" height="15" fill="rgb(213,53,17)" fg:x="1072" fg:w="18"/><text x="83.4798%" y="351.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure::{{closure}} (18 samples, 1.40%)</title><rect x="83.2298%" y="325" width="1.3975%" height="15" fill="rgb(207,167,3)" fg:x="1072" fg:w="18"/><text x="83.4798%" y="335.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Swapchain&gt;::release_resources (18 samples, 1.40%)</title><rect x="83.2298%" y="309" width="1.3975%" height="15" fill="rgb(216,98,30)" fg:x="1072" fg:w="18"/><text x="83.4798%" y="319.50"></text></g><g><title>ash::device::Device::device_wait_idle (7 samples, 0.54%)</title><rect x="84.0839%" y="293" width="0.5435%" height="15" fill="rgb(236,123,15)" fg:x="1083" fg:w="7"/><text x="84.3339%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (7 samples, 0.54%)</title><rect x="84.0839%" y="277" width="0.5435%" height="15" fill="rgb(248,81,50)" fg:x="1083" fg:w="7"/><text x="84.3339%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (7 samples, 0.54%)</title><rect x="84.0839%" y="261" width="0.5435%" height="15" fill="rgb(214,120,4)" fg:x="1083" fg:w="7"/><text x="84.3339%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (7 samples, 0.54%)</title><rect x="84.0839%" y="245" width="0.5435%" height="15" fill="rgb(208,179,34)" fg:x="1083" fg:w="7"/><text x="84.3339%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (7 samples, 0.54%)</title><rect x="84.0839%" y="229" width="0.5435%" height="15" fill="rgb(227,140,7)" fg:x="1083" fg:w="7"/><text x="84.3339%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="84.1615%" y="213" width="0.4658%" height="15" fill="rgb(214,22,6)" fg:x="1084" fg:w="6"/><text x="84.4115%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="84.1615%" y="197" width="0.4658%" height="15" fill="rgb(207,137,27)" fg:x="1084" fg:w="6"/><text x="84.4115%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="84.1615%" y="181" width="0.4658%" height="15" fill="rgb(210,8,46)" fg:x="1084" fg:w="6"/><text x="84.4115%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="84.1615%" y="165" width="0.4658%" height="15" fill="rgb(240,16,54)" fg:x="1084" fg:w="6"/><text x="84.4115%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="84.1615%" y="149" width="0.4658%" height="15" fill="rgb(211,209,29)" fg:x="1084" fg:w="6"/><text x="84.4115%" y="159.50"></text></g><g><title>pthread_rwlock_wrlock (2 samples, 0.16%)</title><rect x="84.4720%" y="133" width="0.1553%" height="15" fill="rgb(226,228,24)" fg:x="1088" fg:w="2"/><text x="84.7220%" y="143.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="84.6273%" y="229" width="0.0776%" height="15" fill="rgb(222,84,9)" fg:x="1090" fg:w="1"/><text x="84.8773%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="84.6273%" y="213" width="0.0776%" height="15" fill="rgb(234,203,30)" fg:x="1090" fg:w="1"/><text x="84.8773%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="84.6273%" y="197" width="0.0776%" height="15" fill="rgb(238,109,14)" fg:x="1090" fg:w="1"/><text x="84.8773%" y="207.50"></text></g><g><title>ash::device::Device::create_fence (3 samples, 0.23%)</title><rect x="84.6273%" y="325" width="0.2329%" height="15" fill="rgb(233,206,34)" fg:x="1090" fg:w="3"/><text x="84.8773%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="84.6273%" y="309" width="0.2329%" height="15" fill="rgb(220,167,47)" fg:x="1090" fg:w="3"/><text x="84.8773%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="84.6273%" y="293" width="0.2329%" height="15" fill="rgb(238,105,10)" fg:x="1090" fg:w="3"/><text x="84.8773%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="84.6273%" y="277" width="0.2329%" height="15" fill="rgb(213,227,17)" fg:x="1090" fg:w="3"/><text x="84.8773%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="84.6273%" y="261" width="0.2329%" height="15" fill="rgb(217,132,38)" fg:x="1090" fg:w="3"/><text x="84.8773%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="84.6273%" y="245" width="0.2329%" height="15" fill="rgb(242,146,4)" fg:x="1090" fg:w="3"/><text x="84.8773%" y="255.50"></text></g><g><title>malloc (2 samples, 0.16%)</title><rect x="84.7050%" y="229" width="0.1553%" height="15" fill="rgb(212,61,9)" fg:x="1091" fg:w="2"/><text x="84.9550%" y="239.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="84.7050%" y="213" width="0.1553%" height="15" fill="rgb(247,126,22)" fg:x="1091" fg:w="2"/><text x="84.9550%" y="223.50"></text></g><g><title>_XSend (1 samples, 0.08%)</title><rect x="87.7329%" y="133" width="0.0776%" height="15" fill="rgb(220,196,2)" fg:x="1130" fg:w="1"/><text x="87.9829%" y="143.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="87.7329%" y="181" width="0.1553%" height="15" fill="rgb(208,46,4)" fg:x="1130" fg:w="2"/><text x="87.9829%" y="191.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="87.7329%" y="165" width="0.1553%" height="15" fill="rgb(252,104,46)" fg:x="1130" fg:w="2"/><text x="87.9829%" y="175.50"></text></g><g><title>_XReply (2 samples, 0.16%)</title><rect x="87.7329%" y="149" width="0.1553%" height="15" fill="rgb(237,152,48)" fg:x="1130" fg:w="2"/><text x="87.9829%" y="159.50"></text></g><g><title>xcb_wait_for_reply64 (1 samples, 0.08%)</title><rect x="87.8106%" y="133" width="0.0776%" height="15" fill="rgb(221,59,37)" fg:x="1131" fg:w="1"/><text x="88.0606%" y="143.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="87.8106%" y="117" width="0.0776%" height="15" fill="rgb(209,202,51)" fg:x="1131" fg:w="1"/><text x="88.0606%" y="127.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="88.3540%" y="133" width="0.1553%" height="15" fill="rgb(228,81,30)" fg:x="1138" fg:w="2"/><text x="88.6040%" y="143.50"></text></g><g><title>XextFindDisplay (1 samples, 0.08%)</title><rect x="88.4317%" y="117" width="0.0776%" height="15" fill="rgb(227,42,39)" fg:x="1139" fg:w="1"/><text x="88.6817%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="88.5093%" y="133" width="0.0776%" height="15" fill="rgb(221,26,2)" fg:x="1140" fg:w="1"/><text x="88.7593%" y="143.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="88.5093%" y="117" width="0.0776%" height="15" fill="rgb(254,61,31)" fg:x="1140" fg:w="1"/><text x="88.7593%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="88.5093%" y="101" width="0.0776%" height="15" fill="rgb(222,173,38)" fg:x="1140" fg:w="1"/><text x="88.7593%" y="111.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="88.5093%" y="85" width="0.0776%" height="15" fill="rgb(218,50,12)" fg:x="1140" fg:w="1"/><text x="88.7593%" y="95.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="88.5093%" y="69" width="0.0776%" height="15" fill="rgb(223,88,40)" fg:x="1140" fg:w="1"/><text x="88.7593%" y="79.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="88.6646%" y="117" width="0.0776%" height="15" fill="rgb(237,54,19)" fg:x="1142" fg:w="1"/><text x="88.9146%" y="127.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="88.6646%" y="101" width="0.0776%" height="15" fill="rgb(251,129,25)" fg:x="1142" fg:w="1"/><text x="88.9146%" y="111.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="88.6646%" y="85" width="0.0776%" height="15" fill="rgb(238,97,19)" fg:x="1142" fg:w="1"/><text x="88.9146%" y="95.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="88.6646%" y="69" width="0.0776%" height="15" fill="rgb(240,169,18)" fg:x="1142" fg:w="1"/><text x="88.9146%" y="79.50"></text></g><g><title>__errno_location (1 samples, 0.08%)</title><rect x="88.6646%" y="53" width="0.0776%" height="15" fill="rgb(230,187,49)" fg:x="1142" fg:w="1"/><text x="88.9146%" y="63.50"></text></g><g><title>_XSend (2 samples, 0.16%)</title><rect x="88.7422%" y="117" width="0.1553%" height="15" fill="rgb(209,44,26)" fg:x="1143" fg:w="2"/><text x="88.9922%" y="127.50"></text></g><g><title>xcb_writev (2 samples, 0.16%)</title><rect x="88.7422%" y="101" width="0.1553%" height="15" fill="rgb(244,0,6)" fg:x="1143" fg:w="2"/><text x="88.9922%" y="111.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="88.8199%" y="85" width="0.0776%" height="15" fill="rgb(248,18,21)" fg:x="1144" fg:w="1"/><text x="89.0699%" y="95.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="88.8199%" y="69" width="0.0776%" height="15" fill="rgb(245,180,19)" fg:x="1144" fg:w="1"/><text x="89.0699%" y="79.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="88.8975%" y="117" width="0.0776%" height="15" fill="rgb(252,118,36)" fg:x="1145" fg:w="1"/><text x="89.1475%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="88.8975%" y="101" width="0.0776%" height="15" fill="rgb(210,224,19)" fg:x="1145" fg:w="1"/><text x="89.1475%" y="111.50"></text></g><g><title>malloc (2 samples, 0.16%)</title><rect x="88.9752%" y="53" width="0.1553%" height="15" fill="rgb(218,30,24)" fg:x="1146" fg:w="2"/><text x="89.2252%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="89.0528%" y="37" width="0.0776%" height="15" fill="rgb(219,75,50)" fg:x="1147" fg:w="1"/><text x="89.3028%" y="47.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.23%)</title><rect x="88.9752%" y="69" width="0.2329%" height="15" fill="rgb(234,72,50)" fg:x="1146" fg:w="3"/><text x="89.2252%" y="79.50"></text></g><g><title>pthread_cond_signal (1 samples, 0.08%)</title><rect x="89.1304%" y="53" width="0.0776%" height="15" fill="rgb(219,100,48)" fg:x="1148" fg:w="1"/><text x="89.3804%" y="63.50"></text></g><g><title>[libxcb.so.1.1.0] (8 samples, 0.62%)</title><rect x="88.9752%" y="101" width="0.6211%" height="15" fill="rgb(253,5,41)" fg:x="1146" fg:w="8"/><text x="89.2252%" y="111.50"></text></g><g><title>[libxcb.so.1.1.0] (8 samples, 0.62%)</title><rect x="88.9752%" y="85" width="0.6211%" height="15" fill="rgb(247,181,11)" fg:x="1146" fg:w="8"/><text x="89.2252%" y="95.50"></text></g><g><title>__poll (5 samples, 0.39%)</title><rect x="89.2081%" y="69" width="0.3882%" height="15" fill="rgb(222,223,25)" fg:x="1149" fg:w="5"/><text x="89.4581%" y="79.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="89.5186%" y="53" width="0.0776%" height="15" fill="rgb(214,198,28)" fg:x="1153" fg:w="1"/><text x="89.7686%" y="63.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (17 samples, 1.32%)</title><rect x="88.3540%" y="165" width="1.3199%" height="15" fill="rgb(230,46,43)" fg:x="1138" fg:w="17"/><text x="88.6040%" y="175.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (17 samples, 1.32%)</title><rect x="88.3540%" y="149" width="1.3199%" height="15" fill="rgb(233,65,53)" fg:x="1138" fg:w="17"/><text x="88.6040%" y="159.50"></text></g><g><title>_XReply (14 samples, 1.09%)</title><rect x="88.5870%" y="133" width="1.0870%" height="15" fill="rgb(221,121,27)" fg:x="1141" fg:w="14"/><text x="88.8370%" y="143.50"></text></g><g><title>xcb_wait_for_reply64 (9 samples, 0.70%)</title><rect x="88.9752%" y="117" width="0.6988%" height="15" fill="rgb(247,70,47)" fg:x="1146" fg:w="9"/><text x="89.2252%" y="127.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.08%)</title><rect x="89.5963%" y="101" width="0.0776%" height="15" fill="rgb(228,85,35)" fg:x="1154" fg:w="1"/><text x="89.8463%" y="111.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="90.9161%" y="85" width="0.1553%" height="15" fill="rgb(209,50,18)" fg:x="1171" fg:w="2"/><text x="91.1661%" y="95.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="90.9161%" y="69" width="0.1553%" height="15" fill="rgb(250,19,35)" fg:x="1171" fg:w="2"/><text x="91.1661%" y="79.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (3 samples, 0.23%)</title><rect x="90.9161%" y="101" width="0.2329%" height="15" fill="rgb(253,107,29)" fg:x="1171" fg:w="3"/><text x="91.1661%" y="111.50"></text></g><g><title>ioctl (1 samples, 0.08%)</title><rect x="91.0714%" y="85" width="0.0776%" height="15" fill="rgb(252,179,29)" fg:x="1173" fg:w="1"/><text x="91.3214%" y="95.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="91.1491%" y="101" width="0.0776%" height="15" fill="rgb(238,194,6)" fg:x="1174" fg:w="1"/><text x="91.3991%" y="111.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (7 samples, 0.54%)</title><rect x="90.7609%" y="117" width="0.5435%" height="15" fill="rgb(238,164,29)" fg:x="1169" fg:w="7"/><text x="91.0109%" y="127.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="91.2267%" y="101" width="0.0776%" height="15" fill="rgb(224,25,9)" fg:x="1175" fg:w="1"/><text x="91.4767%" y="111.50"></text></g><g><title>ioctl (1 samples, 0.08%)</title><rect x="91.3043%" y="117" width="0.0776%" height="15" fill="rgb(244,153,23)" fg:x="1176" fg:w="1"/><text x="91.5543%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (13 samples, 1.01%)</title><rect x="90.5280%" y="133" width="1.0093%" height="15" fill="rgb(212,203,14)" fg:x="1166" fg:w="13"/><text x="90.7780%" y="143.50"></text></g><g><title>malloc (2 samples, 0.16%)</title><rect x="91.3820%" y="117" width="0.1553%" height="15" fill="rgb(220,164,20)" fg:x="1177" fg:w="2"/><text x="91.6320%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (19 samples, 1.48%)</title><rect x="90.1398%" y="149" width="1.4752%" height="15" fill="rgb(222,203,48)" fg:x="1161" fg:w="19"/><text x="90.3898%" y="159.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="91.5373%" y="133" width="0.0776%" height="15" fill="rgb(215,159,22)" fg:x="1179" fg:w="1"/><text x="91.7873%" y="143.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="91.5373%" y="117" width="0.0776%" height="15" fill="rgb(216,183,47)" fg:x="1179" fg:w="1"/><text x="91.7873%" y="127.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="91.6149%" y="149" width="0.0776%" height="15" fill="rgb(229,195,25)" fg:x="1180" fg:w="1"/><text x="91.8649%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="91.6149%" y="133" width="0.0776%" height="15" fill="rgb(224,132,51)" fg:x="1180" fg:w="1"/><text x="91.8649%" y="143.50"></text></g><g><title>clock_gettime (5 samples, 0.39%)</title><rect x="91.6925%" y="149" width="0.3882%" height="15" fill="rgb(240,63,7)" fg:x="1181" fg:w="5"/><text x="91.9425%" y="159.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.39%)</title><rect x="91.6925%" y="133" width="0.3882%" height="15" fill="rgb(249,182,41)" fg:x="1181" fg:w="5"/><text x="91.9425%" y="143.50"></text></g><g><title>[[vdso]] (4 samples, 0.31%)</title><rect x="91.7702%" y="117" width="0.3106%" height="15" fill="rgb(243,47,26)" fg:x="1182" fg:w="4"/><text x="92.0202%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (56 samples, 4.35%)</title><rect x="87.8882%" y="181" width="4.3478%" height="15" fill="rgb(233,48,2)" fg:x="1132" fg:w="56"/><text x="88.1382%" y="191.50">[libn..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (33 samples, 2.56%)</title><rect x="89.6739%" y="165" width="2.5621%" height="15" fill="rgb(244,165,34)" fg:x="1155" fg:w="33"/><text x="89.9239%" y="175.50">[l..</text></g><g><title>pthread_mutex_lock (2 samples, 0.16%)</title><rect x="92.0807%" y="149" width="0.1553%" height="15" fill="rgb(207,89,7)" fg:x="1186" fg:w="2"/><text x="92.3307%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (90 samples, 6.99%)</title><rect x="85.4037%" y="197" width="6.9876%" height="15" fill="rgb(244,117,36)" fg:x="1100" fg:w="90"/><text x="85.6537%" y="207.50">[libnvidi..</text></g><g><title>malloc (2 samples, 0.16%)</title><rect x="92.2360%" y="181" width="0.1553%" height="15" fill="rgb(226,144,34)" fg:x="1188" fg:w="2"/><text x="92.4860%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (101 samples, 7.84%)</title><rect x="84.8602%" y="229" width="7.8416%" height="15" fill="rgb(213,23,19)" fg:x="1093" fg:w="101"/><text x="85.1102%" y="239.50">[libnvidia-..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (101 samples, 7.84%)</title><rect x="84.8602%" y="213" width="7.8416%" height="15" fill="rgb(217,75,12)" fg:x="1093" fg:w="101"/><text x="85.1102%" y="223.50">[libnvidia-..</text></g><g><title>malloc (4 samples, 0.31%)</title><rect x="92.3913%" y="197" width="0.3106%" height="15" fill="rgb(224,159,17)" fg:x="1190" fg:w="4"/><text x="92.6413%" y="207.50"></text></g><g><title>[libc.so.6] (4 samples, 0.31%)</title><rect x="92.3913%" y="181" width="0.3106%" height="15" fill="rgb(217,118,1)" fg:x="1190" fg:w="4"/><text x="92.6413%" y="191.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="92.4689%" y="165" width="0.2329%" height="15" fill="rgb(232,180,48)" fg:x="1191" fg:w="3"/><text x="92.7189%" y="175.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (104 samples, 8.07%)</title><rect x="84.8602%" y="325" width="8.0745%" height="15" fill="rgb(230,27,33)" fg:x="1093" fg:w="104"/><text x="85.1102%" y="335.50">ash::extens..</text></g><g><title>[libvulkan.so.1.3.245] (104 samples, 8.07%)</title><rect x="84.8602%" y="309" width="8.0745%" height="15" fill="rgb(205,31,21)" fg:x="1093" fg:w="104"/><text x="85.1102%" y="319.50">[libvulkan...</text></g><g><title>[libGLX_nvidia.so.530.41.03] (104 samples, 8.07%)</title><rect x="84.8602%" y="293" width="8.0745%" height="15" fill="rgb(253,59,4)" fg:x="1093" fg:w="104"/><text x="85.1102%" y="303.50">[libGLX_nvi..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (104 samples, 8.07%)</title><rect x="84.8602%" y="277" width="8.0745%" height="15" fill="rgb(224,201,9)" fg:x="1093" fg:w="104"/><text x="85.1102%" y="287.50">[libnvidia-..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (104 samples, 8.07%)</title><rect x="84.8602%" y="261" width="8.0745%" height="15" fill="rgb(229,206,30)" fg:x="1093" fg:w="104"/><text x="85.1102%" y="271.50">[libnvidia-..</text></g><g><title>[libnvidia-glcore.so.530.41.03] (104 samples, 8.07%)</title><rect x="84.8602%" y="245" width="8.0745%" height="15" fill="rgb(212,67,47)" fg:x="1093" fg:w="104"/><text x="85.1102%" y="255.50">[libnvidia-..</text></g><g><title>malloc (3 samples, 0.23%)</title><rect x="92.7019%" y="229" width="0.2329%" height="15" fill="rgb(211,96,50)" fg:x="1194" fg:w="3"/><text x="92.9519%" y="239.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="92.7019%" y="213" width="0.2329%" height="15" fill="rgb(252,114,18)" fg:x="1194" fg:w="3"/><text x="92.9519%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="92.7795%" y="197" width="0.1553%" height="15" fill="rgb(223,58,37)" fg:x="1195" fg:w="2"/><text x="93.0295%" y="207.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="92.9348%" y="245" width="0.0776%" height="15" fill="rgb(237,70,4)" fg:x="1197" fg:w="1"/><text x="93.1848%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="92.9348%" y="229" width="0.0776%" height="15" fill="rgb(244,85,46)" fg:x="1197" fg:w="1"/><text x="93.1848%" y="239.50"></text></g><g><title>syscall@plt (1 samples, 0.08%)</title><rect x="92.9348%" y="213" width="0.0776%" height="15" fill="rgb(223,39,52)" fg:x="1197" fg:w="1"/><text x="93.1848%" y="223.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="92.9348%" y="261" width="0.1553%" height="15" fill="rgb(218,200,14)" fg:x="1197" fg:w="2"/><text x="93.1848%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="93.0124%" y="245" width="0.0776%" height="15" fill="rgb(208,171,16)" fg:x="1198" fg:w="1"/><text x="93.2624%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="93.0124%" y="229" width="0.0776%" height="15" fill="rgb(234,200,18)" fg:x="1198" fg:w="1"/><text x="93.2624%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="93.0124%" y="213" width="0.0776%" height="15" fill="rgb(228,45,11)" fg:x="1198" fg:w="1"/><text x="93.2624%" y="223.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.08%)</title><rect x="93.0901%" y="261" width="0.0776%" height="15" fill="rgb(237,182,11)" fg:x="1199" fg:w="1"/><text x="93.3401%" y="271.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.08%)</title><rect x="93.0901%" y="245" width="0.0776%" height="15" fill="rgb(241,175,49)" fg:x="1199" fg:w="1"/><text x="93.3401%" y="255.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.08%)</title><rect x="93.0901%" y="229" width="0.0776%" height="15" fill="rgb(247,38,35)" fg:x="1199" fg:w="1"/><text x="93.3401%" y="239.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::new (12 samples, 0.93%)</title><rect x="92.9348%" y="325" width="0.9317%" height="15" fill="rgb(228,39,49)" fg:x="1197" fg:w="12"/><text x="93.1848%" y="335.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::load (12 samples, 0.93%)</title><rect x="92.9348%" y="309" width="0.9317%" height="15" fill="rgb(226,101,26)" fg:x="1197" fg:w="12"/><text x="93.1848%" y="319.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::new::{{closure}} (12 samples, 0.93%)</title><rect x="92.9348%" y="293" width="0.9317%" height="15" fill="rgb(206,141,19)" fg:x="1197" fg:w="12"/><text x="93.1848%" y="303.50"></text></g><g><title>ash::instance::Instance::get_device_proc_addr (12 samples, 0.93%)</title><rect x="92.9348%" y="277" width="0.9317%" height="15" fill="rgb(211,200,13)" fg:x="1197" fg:w="12"/><text x="93.1848%" y="287.50"></text></g><g><title>vkGetDeviceProcAddr (9 samples, 0.70%)</title><rect x="93.1677%" y="261" width="0.6988%" height="15" fill="rgb(241,121,6)" fg:x="1200" fg:w="9"/><text x="93.4177%" y="271.50"></text></g><g><title>[libc.so.6] (8 samples, 0.62%)</title><rect x="93.2453%" y="245" width="0.6211%" height="15" fill="rgb(234,221,29)" fg:x="1201" fg:w="8"/><text x="93.4953%" y="255.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}} (168 samples, 13.04%)</title><rect x="80.9006%" y="485" width="13.0435%" height="15" fill="rgb(229,136,5)" fg:x="1042" fg:w="168"/><text x="81.1506%" y="495.50">winit::platform_impl..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (167 samples, 12.97%)</title><rect x="80.9783%" y="469" width="12.9658%" height="15" fill="rgb(238,36,11)" fg:x="1043" fg:w="167"/><text x="81.2283%" y="479.50">winit::platform_imp..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}}::{{closure}} (166 samples, 12.89%)</title><rect x="81.0559%" y="453" width="12.8882%" height="15" fill="rgb(251,55,41)" fg:x="1044" fg:w="166"/><text x="81.3059%" y="463.50">winit::platform_imp..</text></g><g><title>framer::window::Window::launch::{{closure}}::{{closure}} (166 samples, 12.89%)</title><rect x="81.0559%" y="437" width="12.8882%" height="15" fill="rgb(242,34,40)" fg:x="1044" fg:w="166"/><text x="81.3059%" y="447.50">framer::window::Win..</text></g><g><title>wgpu::Surface::configure (166 samples, 12.89%)</title><rect x="81.0559%" y="421" width="12.8882%" height="15" fill="rgb(215,42,17)" fg:x="1044" fg:w="166"/><text x="81.3059%" y="431.50">wgpu::Surface::conf..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (166 samples, 12.89%)</title><rect x="81.0559%" y="405" width="12.8882%" height="15" fill="rgb(207,44,46)" fg:x="1044" fg:w="166"/><text x="81.3059%" y="415.50">&lt;T as wgpu::context..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (166 samples, 12.89%)</title><rect x="81.0559%" y="389" width="12.8882%" height="15" fill="rgb(211,206,28)" fg:x="1044" fg:w="166"/><text x="81.3059%" y="399.50">&lt;wgpu::backend::dir..</text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (166 samples, 12.89%)</title><rect x="81.0559%" y="373" width="12.8882%" height="15" fill="rgb(237,167,16)" fg:x="1044" fg:w="166"/><text x="81.3059%" y="383.50">wgpu_core::device::..</text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (138 samples, 10.71%)</title><rect x="83.2298%" y="357" width="10.7143%" height="15" fill="rgb(233,66,6)" fg:x="1072" fg:w="138"/><text x="83.4798%" y="367.50">wgpu_hal::vulkan..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (120 samples, 9.32%)</title><rect x="84.6273%" y="341" width="9.3168%" height="15" fill="rgb(246,123,29)" fg:x="1090" fg:w="120"/><text x="84.8773%" y="351.50">wgpu_hal::vul..</text></g><g><title>core::ptr::drop_in_place&lt;wgpu_hal::vulkan::Swapchain&gt; (1 samples, 0.08%)</title><rect x="93.8665%" y="325" width="0.0776%" height="15" fill="rgb(209,62,40)" fg:x="1209" fg:w="1"/><text x="94.1165%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ash::vk::definitions::Image&gt;&gt; (1 samples, 0.08%)</title><rect x="93.8665%" y="309" width="0.0776%" height="15" fill="rgb(218,4,25)" fg:x="1209" fg:w="1"/><text x="94.1165%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ash::vk::definitions::Image&gt;&gt; (1 samples, 0.08%)</title><rect x="93.8665%" y="293" width="0.0776%" height="15" fill="rgb(253,91,49)" fg:x="1209" fg:w="1"/><text x="94.1165%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.8665%" y="277" width="0.0776%" height="15" fill="rgb(228,155,29)" fg:x="1209" fg:w="1"/><text x="94.1165%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="93.8665%" y="261" width="0.0776%" height="15" fill="rgb(243,57,37)" fg:x="1209" fg:w="1"/><text x="94.1165%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="93.8665%" y="245" width="0.0776%" height="15" fill="rgb(244,167,17)" fg:x="1209" fg:w="1"/><text x="94.1165%" y="255.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="93.8665%" y="229" width="0.0776%" height="15" fill="rgb(207,181,38)" fg:x="1209" fg:w="1"/><text x="94.1165%" y="239.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoopWindowTarget&lt;T&gt;::update_device_event_filter (1 samples, 0.08%)</title><rect x="93.9441%" y="485" width="0.0776%" height="15" fill="rgb(211,8,23)" fg:x="1210" fg:w="1"/><text x="94.1941%" y="495.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::with_window (1 samples, 0.08%)</title><rect x="94.0217%" y="485" width="0.0776%" height="15" fill="rgb(235,11,44)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.08%)</title><rect x="94.0217%" y="469" width="0.0776%" height="15" fill="rgb(248,18,52)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.08%)</title><rect x="94.0217%" y="453" width="0.0776%" height="15" fill="rgb(208,4,7)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.08%)</title><rect x="94.0217%" y="437" width="0.0776%" height="15" fill="rgb(240,17,39)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.08%)</title><rect x="94.0217%" y="421" width="0.0776%" height="15" fill="rgb(207,170,3)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.08%)</title><rect x="94.0217%" y="405" width="0.0776%" height="15" fill="rgb(236,100,52)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.08%)</title><rect x="94.0217%" y="389" width="0.0776%" height="15" fill="rgb(246,78,51)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.08%)</title><rect x="94.0217%" y="373" width="0.0776%" height="15" fill="rgb(211,17,15)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.08%)</title><rect x="94.0217%" y="357" width="0.0776%" height="15" fill="rgb(209,59,46)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.0217%" y="341" width="0.0776%" height="15" fill="rgb(210,92,25)" fg:x="1211" fg:w="1"/><text x="94.2717%" y="351.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (363 samples, 28.18%)</title><rect x="65.9938%" y="533" width="28.1832%" height="15" fill="rgb(238,174,52)" fg:x="850" fg:w="363"/><text x="66.2438%" y="543.50">winit::platform_impl::platform::x11::EventLoo..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (179 samples, 13.90%)</title><rect x="80.2795%" y="517" width="13.8975%" height="15" fill="rgb(230,73,7)" fg:x="1034" fg:w="179"/><text x="80.5295%" y="527.50">winit::platform_impl:..</text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (176 samples, 13.66%)</title><rect x="80.5124%" y="501" width="13.6646%" height="15" fill="rgb(243,124,40)" fg:x="1037" fg:w="176"/><text x="80.7624%" y="511.50">winit::platform_impl:..</text></g><g><title>winit::platform_impl::platform::x11::mkwid (1 samples, 0.08%)</title><rect x="94.0994%" y="485" width="0.0776%" height="15" fill="rgb(244,170,11)" fg:x="1212" fg:w="1"/><text x="94.3494%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="94.1770%" y="501" width="0.0776%" height="15" fill="rgb(207,114,54)" fg:x="1213" fg:w="1"/><text x="94.4270%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.16%)</title><rect x="94.2547%" y="421" width="0.1553%" height="15" fill="rgb(205,42,20)" fg:x="1214" fg:w="2"/><text x="94.5047%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.16%)</title><rect x="94.2547%" y="405" width="0.1553%" height="15" fill="rgb(230,30,28)" fg:x="1214" fg:w="2"/><text x="94.5047%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.23%)</title><rect x="94.2547%" y="437" width="0.2329%" height="15" fill="rgb(205,73,54)" fg:x="1214" fg:w="3"/><text x="94.5047%" y="447.50"></text></g><g><title>recvmsg (1 samples, 0.08%)</title><rect x="94.4099%" y="421" width="0.0776%" height="15" fill="rgb(254,227,23)" fg:x="1216" fg:w="1"/><text x="94.6599%" y="431.50"></text></g><g><title>[libX11.so.6.4.0] (5 samples, 0.39%)</title><rect x="94.2547%" y="469" width="0.3882%" height="15" fill="rgb(228,202,34)" fg:x="1214" fg:w="5"/><text x="94.5047%" y="479.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.39%)</title><rect x="94.2547%" y="453" width="0.3882%" height="15" fill="rgb(222,225,37)" fg:x="1214" fg:w="5"/><text x="94.5047%" y="463.50"></text></g><g><title>cfree (2 samples, 0.16%)</title><rect x="94.4876%" y="437" width="0.1553%" height="15" fill="rgb(221,14,54)" fg:x="1217" fg:w="2"/><text x="94.7376%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="94.5652%" y="421" width="0.0776%" height="15" fill="rgb(254,102,2)" fg:x="1218" fg:w="1"/><text x="94.8152%" y="431.50"></text></g><g><title>[libX11.so.6.4.0] (9 samples, 0.70%)</title><rect x="94.2547%" y="485" width="0.6988%" height="15" fill="rgb(232,104,17)" fg:x="1214" fg:w="9"/><text x="94.5047%" y="495.50"></text></g><g><title>_XEnq (4 samples, 0.31%)</title><rect x="94.6429%" y="469" width="0.3106%" height="15" fill="rgb(250,220,14)" fg:x="1219" fg:w="4"/><text x="94.8929%" y="479.50"></text></g><g><title>[libXi.so.6.1.0] (2 samples, 0.16%)</title><rect x="94.7981%" y="453" width="0.1553%" height="15" fill="rgb(241,158,9)" fg:x="1221" fg:w="2"/><text x="95.0481%" y="463.50"></text></g><g><title>[libXi.so.6.1.0] (1 samples, 0.08%)</title><rect x="94.8758%" y="437" width="0.0776%" height="15" fill="rgb(246,9,43)" fg:x="1222" fg:w="1"/><text x="95.1258%" y="447.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="94.9534%" y="485" width="0.0776%" height="15" fill="rgb(206,73,33)" fg:x="1223" fg:w="1"/><text x="95.2034%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="94.9534%" y="469" width="0.0776%" height="15" fill="rgb(222,79,8)" fg:x="1223" fg:w="1"/><text x="95.2034%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (495 samples, 38.43%)</title><rect x="56.6770%" y="629" width="38.4317%" height="15" fill="rgb(234,8,54)" fg:x="730" fg:w="495"/><text x="56.9270%" y="639.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>framer::window::Window::launch::{{closure}} (495 samples, 38.43%)</title><rect x="56.6770%" y="613" width="38.4317%" height="15" fill="rgb(209,134,38)" fg:x="730" fg:w="495"/><text x="56.9270%" y="623.50">framer::window::Window::launch::{{closure}}</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (399 samples, 30.98%)</title><rect x="64.1304%" y="597" width="30.9783%" height="15" fill="rgb(230,127,29)" fg:x="826" fg:w="399"/><text x="64.3804%" y="607.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (399 samples, 30.98%)</title><rect x="64.1304%" y="581" width="30.9783%" height="15" fill="rgb(242,44,41)" fg:x="826" fg:w="399"/><text x="64.3804%" y="591.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (399 samples, 30.98%)</title><rect x="64.1304%" y="565" width="30.9783%" height="15" fill="rgb(222,56,43)" fg:x="826" fg:w="399"/><text x="64.3804%" y="575.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;:..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (399 samples, 30.98%)</title><rect x="64.1304%" y="549" width="30.9783%" height="15" fill="rgb(238,39,47)" fg:x="826" fg:w="399"/><text x="64.3804%" y="559.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;:..</text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (12 samples, 0.93%)</title><rect x="94.1770%" y="533" width="0.9317%" height="15" fill="rgb(226,79,43)" fg:x="1213" fg:w="12"/><text x="94.4270%" y="543.50"></text></g><g><title>XPending (12 samples, 0.93%)</title><rect x="94.1770%" y="517" width="0.9317%" height="15" fill="rgb(242,105,53)" fg:x="1213" fg:w="12"/><text x="94.4270%" y="527.50"></text></g><g><title>_XEventsQueued (11 samples, 0.85%)</title><rect x="94.2547%" y="501" width="0.8540%" height="15" fill="rgb(251,132,46)" fg:x="1214" fg:w="11"/><text x="94.5047%" y="511.50"></text></g><g><title>xcb_connection_has_error (1 samples, 0.08%)</title><rect x="95.0311%" y="485" width="0.0776%" height="15" fill="rgb(231,77,14)" fg:x="1224" fg:w="1"/><text x="95.2811%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="95.1863%" y="421" width="0.0776%" height="15" fill="rgb(240,135,9)" fg:x="1226" fg:w="1"/><text x="95.4363%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="95.1863%" y="405" width="0.0776%" height="15" fill="rgb(248,109,14)" fg:x="1226" fg:w="1"/><text x="95.4363%" y="415.50"></text></g><g><title>async_io::driver::block_on (498 samples, 38.66%)</title><rect x="56.6770%" y="885" width="38.6646%" height="15" fill="rgb(227,146,52)" fg:x="730" fg:w="498"/><text x="56.9270%" y="895.50">async_io::driver::block_on</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (498 samples, 38.66%)</title><rect x="56.6770%" y="869" width="38.6646%" height="15" fill="rgb(232,54,3)" fg:x="730" fg:w="498"/><text x="56.9270%" y="879.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (498 samples, 38.66%)</title><rect x="56.6770%" y="853" width="38.6646%" height="15" fill="rgb(229,201,43)" fg:x="730" fg:w="498"/><text x="56.9270%" y="863.50">async_executor::LocalExecutor::run::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (498 samples, 38.66%)</title><rect x="56.6770%" y="837" width="38.6646%" height="15" fill="rgb(252,161,33)" fg:x="730" fg:w="498"/><text x="56.9270%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>async_executor::Executor::run::{{closure}} (498 samples, 38.66%)</title><rect x="56.6770%" y="821" width="38.6646%" height="15" fill="rgb(226,146,40)" fg:x="730" fg:w="498"/><text x="56.9270%" y="831.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (498 samples, 38.66%)</title><rect x="56.6770%" y="805" width="38.6646%" height="15" fill="rgb(219,47,25)" fg:x="730" fg:w="498"/><text x="56.9270%" y="815.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Futur..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (498 samples, 38.66%)</title><rect x="56.6770%" y="789" width="38.6646%" height="15" fill="rgb(250,135,13)" fg:x="730" fg:w="498"/><text x="56.9270%" y="799.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (498 samples, 38.66%)</title><rect x="56.6770%" y="773" width="38.6646%" height="15" fill="rgb(219,229,18)" fg:x="730" fg:w="498"/><text x="56.9270%" y="783.50">async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_cu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (498 samples, 38.66%)</title><rect x="56.6770%" y="757" width="38.6646%" height="15" fill="rgb(217,152,27)" fg:x="730" fg:w="498"/><text x="56.9270%" y="767.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (498 samples, 38.66%)</title><rect x="56.6770%" y="741" width="38.6646%" height="15" fill="rgb(225,71,47)" fg:x="730" fg:w="498"/><text x="56.9270%" y="751.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (498 samples, 38.66%)</title><rect x="56.6770%" y="725" width="38.6646%" height="15" fill="rgb(220,139,14)" fg:x="730" fg:w="498"/><text x="56.9270%" y="735.50">async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_cu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (498 samples, 38.66%)</title><rect x="56.6770%" y="709" width="38.6646%" height="15" fill="rgb(247,54,32)" fg:x="730" fg:w="498"/><text x="56.9270%" y="719.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (498 samples, 38.66%)</title><rect x="56.6770%" y="693" width="38.6646%" height="15" fill="rgb(252,131,39)" fg:x="730" fg:w="498"/><text x="56.9270%" y="703.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>window::main::{{closure}} (498 samples, 38.66%)</title><rect x="56.6770%" y="677" width="38.6646%" height="15" fill="rgb(210,108,39)" fg:x="730" fg:w="498"/><text x="56.9270%" y="687.50">window::main::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (498 samples, 38.66%)</title><rect x="56.6770%" y="661" width="38.6646%" height="15" fill="rgb(205,23,29)" fg:x="730" fg:w="498"/><text x="56.9270%" y="671.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>window::main::main::{{closure}} (498 samples, 38.66%)</title><rect x="56.6770%" y="645" width="38.6646%" height="15" fill="rgb(246,139,46)" fg:x="730" fg:w="498"/><text x="56.9270%" y="655.50">window::main::main::{{closure}}</text></g><g><title>framer::window::Window::new (3 samples, 0.23%)</title><rect x="95.1087%" y="629" width="0.2329%" height="15" fill="rgb(250,81,26)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="639.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (3 samples, 0.23%)</title><rect x="95.1087%" y="613" width="0.2329%" height="15" fill="rgb(214,104,7)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="623.50"></text></g><g><title>winit::event_loop::EventLoopBuilder&lt;T&gt;::build (3 samples, 0.23%)</title><rect x="95.1087%" y="597" width="0.2329%" height="15" fill="rgb(233,189,8)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="607.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (3 samples, 0.23%)</title><rect x="95.1087%" y="581" width="0.2329%" height="15" fill="rgb(228,141,17)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="591.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (3 samples, 0.23%)</title><rect x="95.1087%" y="565" width="0.2329%" height="15" fill="rgb(247,157,1)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (3 samples, 0.23%)</title><rect x="95.1087%" y="549" width="0.2329%" height="15" fill="rgb(249,225,5)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="559.50"></text></g><g><title>setlocale (3 samples, 0.23%)</title><rect x="95.1087%" y="533" width="0.2329%" height="15" fill="rgb(242,55,13)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="543.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="95.1087%" y="517" width="0.2329%" height="15" fill="rgb(230,49,50)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="527.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="95.1087%" y="501" width="0.2329%" height="15" fill="rgb(241,111,38)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="511.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="95.1087%" y="485" width="0.2329%" height="15" fill="rgb(252,155,4)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="495.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="95.1087%" y="469" width="0.2329%" height="15" fill="rgb(212,69,32)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="479.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="95.1087%" y="453" width="0.2329%" height="15" fill="rgb(243,107,47)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="463.50"></text></g><g><title>[libc.so.6] (3 samples, 0.23%)</title><rect x="95.1087%" y="437" width="0.2329%" height="15" fill="rgb(247,130,12)" fg:x="1225" fg:w="3"/><text x="95.3587%" y="447.50"></text></g><g><title>__tsearch (1 samples, 0.08%)</title><rect x="95.2640%" y="421" width="0.0776%" height="15" fill="rgb(233,74,16)" fg:x="1227" fg:w="1"/><text x="95.5140%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.3416%" y="885" width="0.0776%" height="15" fill="rgb(208,58,18)" fg:x="1228" fg:w="1"/><text x="95.5916%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::resource::BufferMapState&lt;wgpu_hal::vulkan::Api&gt;&gt; (1 samples, 0.08%)</title><rect x="95.4193%" y="885" width="0.0776%" height="15" fill="rgb(242,225,1)" fg:x="1229" fg:w="1"/><text x="95.6693%" y="895.50"></text></g><g><title>framer::renderer::State::render (1 samples, 0.08%)</title><rect x="95.4969%" y="885" width="0.0776%" height="15" fill="rgb(249,39,40)" fg:x="1230" fg:w="1"/><text x="95.7469%" y="895.50"></text></g><g><title>framer::window::Window::launch::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="95.5745%" y="885" width="0.0776%" height="15" fill="rgb(207,72,44)" fg:x="1231" fg:w="1"/><text x="95.8245%" y="895.50"></text></g><g><title>framer::window::Window::new (1 samples, 0.08%)</title><rect x="95.6522%" y="885" width="0.0776%" height="15" fill="rgb(215,193,12)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="895.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (1 samples, 0.08%)</title><rect x="95.6522%" y="869" width="0.0776%" height="15" fill="rgb(248,41,39)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="879.50"></text></g><g><title>winit::event_loop::EventLoopBuilder&lt;T&gt;::build (1 samples, 0.08%)</title><rect x="95.6522%" y="853" width="0.0776%" height="15" fill="rgb(253,85,4)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="863.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="95.6522%" y="837" width="0.0776%" height="15" fill="rgb(243,70,31)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="847.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (1 samples, 0.08%)</title><rect x="95.6522%" y="821" width="0.0776%" height="15" fill="rgb(253,195,26)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="831.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="95.6522%" y="805" width="0.0776%" height="15" fill="rgb(243,42,11)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="815.50"></text></g><g><title>XSupportsLocale (1 samples, 0.08%)</title><rect x="95.6522%" y="789" width="0.0776%" height="15" fill="rgb(239,66,17)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="799.50"></text></g><g><title>_XOpenLC (1 samples, 0.08%)</title><rect x="95.6522%" y="773" width="0.0776%" height="15" fill="rgb(217,132,21)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="783.50"></text></g><g><title>_XlcUtf8Loader (1 samples, 0.08%)</title><rect x="95.6522%" y="757" width="0.0776%" height="15" fill="rgb(252,202,21)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="767.50"></text></g><g><title>_XlcCreateLC (1 samples, 0.08%)</title><rect x="95.6522%" y="741" width="0.0776%" height="15" fill="rgb(233,98,36)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="751.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="95.6522%" y="725" width="0.0776%" height="15" fill="rgb(216,153,54)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="735.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.08%)</title><rect x="95.6522%" y="709" width="0.0776%" height="15" fill="rgb(250,99,7)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="719.50"></text></g><g><title>__snprintf_chk (1 samples, 0.08%)</title><rect x="95.6522%" y="693" width="0.0776%" height="15" fill="rgb(207,56,50)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="95.6522%" y="677" width="0.0776%" height="15" fill="rgb(244,61,34)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="95.6522%" y="661" width="0.0776%" height="15" fill="rgb(241,50,38)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="95.6522%" y="645" width="0.0776%" height="15" fill="rgb(212,166,30)" fg:x="1232" fg:w="1"/><text x="95.9022%" y="655.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (1 samples, 0.08%)</title><rect x="95.7298%" y="885" width="0.0776%" height="15" fill="rgb(249,127,32)" fg:x="1233" fg:w="1"/><text x="95.9798%" y="895.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::dealloc (1 samples, 0.08%)</title><rect x="95.8075%" y="885" width="0.0776%" height="15" fill="rgb(209,103,0)" fg:x="1234" fg:w="1"/><text x="96.0575%" y="895.50"></text></g><g><title>malloc (2 samples, 0.16%)</title><rect x="95.8851%" y="885" width="0.1553%" height="15" fill="rgb(238,209,51)" fg:x="1235" fg:w="2"/><text x="96.1351%" y="895.50"></text></g><g><title>msdfgen::PseudoDistanceSelectorBase::addEdgeTrueDistance (1 samples, 0.08%)</title><rect x="96.0404%" y="885" width="0.0776%" height="15" fill="rgb(237,56,23)" fg:x="1237" fg:w="1"/><text x="96.2904%" y="895.50"></text></g><g><title>msdfgen::Vector2::operator- (1 samples, 0.08%)</title><rect x="96.1180%" y="885" width="0.0776%" height="15" fill="rgb(215,153,46)" fg:x="1238" fg:w="1"/><text x="96.3680%" y="895.50"></text></g><g><title>msdfgen::hasDiagonalArtifact&lt;msdfgen::BaseArtifactClassifier&gt; (1 samples, 0.08%)</title><rect x="96.1957%" y="885" width="0.0776%" height="15" fill="rgb(224,49,31)" fg:x="1239" fg:w="1"/><text x="96.4457%" y="895.50"></text></g><g><title>msdfgen::operator* (2 samples, 0.16%)</title><rect x="96.2733%" y="885" width="0.1553%" height="15" fill="rgb(250,18,42)" fg:x="1240" fg:w="2"/><text x="96.5233%" y="895.50"></text></g><g><title>pthread_cond_timedwait (1 samples, 0.08%)</title><rect x="96.4286%" y="885" width="0.0776%" height="15" fill="rgb(215,176,39)" fg:x="1242" fg:w="1"/><text x="96.6786%" y="895.50"></text></g><g><title>khronos_egl::egl1_0::&lt;impl khronos_egl::Instance&lt;T&gt;&gt;::query_string (1 samples, 0.08%)</title><rect x="96.5062%" y="789" width="0.0776%" height="15" fill="rgb(223,77,29)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="799.50"></text></g><g><title>&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt; as khronos_egl::api::EGL1_0&gt;::eglQueryString (1 samples, 0.08%)</title><rect x="96.5062%" y="773" width="0.0776%" height="15" fill="rgb(234,94,52)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="783.50"></text></g><g><title>eglQueryString (1 samples, 0.08%)</title><rect x="96.5062%" y="757" width="0.0776%" height="15" fill="rgb(220,154,50)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.5062%" y="741" width="0.0776%" height="15" fill="rgb(212,11,10)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="751.50"></text></g><g><title>[libEGL.so.1.1.0] (1 samples, 0.08%)</title><rect x="96.5062%" y="725" width="0.0776%" height="15" fill="rgb(205,166,19)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="735.50"></text></g><g><title>[libEGL.so.1.1.0] (1 samples, 0.08%)</title><rect x="96.5062%" y="709" width="0.0776%" height="15" fill="rgb(244,198,16)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="719.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="693" width="0.0776%" height="15" fill="rgb(219,69,12)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="703.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="677" width="0.0776%" height="15" fill="rgb(245,30,7)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="687.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="661" width="0.0776%" height="15" fill="rgb(218,221,48)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="671.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="645" width="0.0776%" height="15" fill="rgb(216,66,15)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.5062%" y="629" width="0.0776%" height="15" fill="rgb(226,122,50)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="639.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="613" width="0.0776%" height="15" fill="rgb(239,156,16)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="623.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="597" width="0.0776%" height="15" fill="rgb(224,27,38)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="607.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="581" width="0.0776%" height="15" fill="rgb(224,39,27)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="591.50"></text></g><g><title>loadEGLExternalPlatform (1 samples, 0.08%)</title><rect x="96.5062%" y="565" width="0.0776%" height="15" fill="rgb(215,92,29)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="575.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="549" width="0.0776%" height="15" fill="rgb(207,159,16)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="559.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="533" width="0.0776%" height="15" fill="rgb(238,163,47)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="543.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="517" width="0.0776%" height="15" fill="rgb(219,91,49)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="527.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="501" width="0.0776%" height="15" fill="rgb(227,167,31)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="511.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="485" width="0.0776%" height="15" fill="rgb(234,80,54)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="495.50"></text></g><g><title>NvGlEglApiInit (1 samples, 0.08%)</title><rect x="96.5062%" y="469" width="0.0776%" height="15" fill="rgb(212,114,2)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="479.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="453" width="0.0776%" height="15" fill="rgb(234,50,24)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="463.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="437" width="0.0776%" height="15" fill="rgb(221,68,8)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="447.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="421" width="0.0776%" height="15" fill="rgb(254,180,31)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="431.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="405" width="0.0776%" height="15" fill="rgb(247,130,50)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="415.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="389" width="0.0776%" height="15" fill="rgb(211,109,4)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="399.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="373" width="0.0776%" height="15" fill="rgb(238,50,21)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.5062%" y="357" width="0.0776%" height="15" fill="rgb(225,57,45)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="367.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5062%" y="341" width="0.0776%" height="15" fill="rgb(209,196,50)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.5062%" y="325" width="0.0776%" height="15" fill="rgb(242,140,13)" fg:x="1243" fg:w="1"/><text x="96.7562%" y="335.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5839%" y="581" width="0.0776%" height="15" fill="rgb(217,111,7)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.5839%" y="565" width="0.0776%" height="15" fill="rgb(253,193,51)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="575.50"></text></g><g><title>dbus_bus_request_name (1 samples, 0.08%)</title><rect x="96.5839%" y="549" width="0.0776%" height="15" fill="rgb(252,70,29)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="559.50"></text></g><g><title>dbus_message_append_args (1 samples, 0.08%)</title><rect x="96.5839%" y="533" width="0.0776%" height="15" fill="rgb(232,127,12)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="543.50"></text></g><g><title>dbus_message_append_args_valist (1 samples, 0.08%)</title><rect x="96.5839%" y="517" width="0.0776%" height="15" fill="rgb(211,180,21)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="527.50"></text></g><g><title>dbus_message_iter_append_basic (1 samples, 0.08%)</title><rect x="96.5839%" y="501" width="0.0776%" height="15" fill="rgb(229,72,13)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="511.50"></text></g><g><title>[libdbus-1.so.3.32.2] (1 samples, 0.08%)</title><rect x="96.5839%" y="485" width="0.0776%" height="15" fill="rgb(240,211,49)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="495.50"></text></g><g><title>_dbus_header_set_field_basic (1 samples, 0.08%)</title><rect x="96.5839%" y="469" width="0.0776%" height="15" fill="rgb(219,149,40)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="479.50"></text></g><g><title>_dbus_type_reader_set_basic (1 samples, 0.08%)</title><rect x="96.5839%" y="453" width="0.0776%" height="15" fill="rgb(210,127,46)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="463.50"></text></g><g><title>[libdbus-1.so.3.32.2] (1 samples, 0.08%)</title><rect x="96.5839%" y="437" width="0.0776%" height="15" fill="rgb(220,106,7)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="447.50"></text></g><g><title>_dbus_list_get_first_link (1 samples, 0.08%)</title><rect x="96.5839%" y="421" width="0.0776%" height="15" fill="rgb(249,31,22)" fg:x="1244" fg:w="1"/><text x="96.8339%" y="431.50"></text></g><g><title>&lt;wgpu_hal::gles::egl::Instance as wgpu_hal::Instance&lt;wgpu_hal::gles::Api&gt;&gt;::init (3 samples, 0.23%)</title><rect x="96.5062%" y="805" width="0.2329%" height="15" fill="rgb(253,1,49)" fg:x="1243" fg:w="3"/><text x="96.7562%" y="815.50"></text></g><g><title>wgpu_hal::gles::egl::Inner::create (2 samples, 0.16%)</title><rect x="96.5839%" y="789" width="0.1553%" height="15" fill="rgb(227,144,33)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="799.50"></text></g><g><title>khronos_egl::egl1_0::&lt;impl khronos_egl::Instance&lt;T&gt;&gt;::create_context (2 samples, 0.16%)</title><rect x="96.5839%" y="773" width="0.1553%" height="15" fill="rgb(249,163,44)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="783.50"></text></g><g><title>&lt;khronos_egl::Dynamic&lt;L,khronos_egl::EGL1_4&gt; as khronos_egl::api::EGL1_0&gt;::eglCreateContext (2 samples, 0.16%)</title><rect x="96.5839%" y="757" width="0.1553%" height="15" fill="rgb(234,15,39)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="767.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="741" width="0.1553%" height="15" fill="rgb(207,66,16)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="751.50"></text></g><g><title>[libEGL_nvidia.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="725" width="0.1553%" height="15" fill="rgb(233,112,24)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="735.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="709" width="0.1553%" height="15" fill="rgb(230,90,22)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="719.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="693" width="0.1553%" height="15" fill="rgb(229,61,13)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="677" width="0.1553%" height="15" fill="rgb(225,57,24)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="661" width="0.1553%" height="15" fill="rgb(208,169,48)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="645" width="0.1553%" height="15" fill="rgb(244,218,51)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="629" width="0.1553%" height="15" fill="rgb(214,148,10)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="613" width="0.1553%" height="15" fill="rgb(225,174,27)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.530.41.03] (2 samples, 0.16%)</title><rect x="96.5839%" y="597" width="0.1553%" height="15" fill="rgb(230,96,26)" fg:x="1244" fg:w="2"/><text x="96.8339%" y="607.50"></text></g><g><title>__snprintf (1 samples, 0.08%)</title><rect x="96.6615%" y="581" width="0.0776%" height="15" fill="rgb(232,10,30)" fg:x="1245" fg:w="1"/><text x="96.9115%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.6615%" y="565" width="0.0776%" height="15" fill="rgb(222,8,50)" fg:x="1245" fg:w="1"/><text x="96.9115%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.6615%" y="549" width="0.0776%" height="15" fill="rgb(213,81,27)" fg:x="1245" fg:w="1"/><text x="96.9115%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.7391%" y="661" width="0.0776%" height="15" fill="rgb(245,50,10)" fg:x="1246" fg:w="1"/><text x="96.9891%" y="671.50"></text></g><g><title>wgpu::Instance::new (5 samples, 0.39%)</title><rect x="96.5062%" y="885" width="0.3882%" height="15" fill="rgb(216,100,18)" fg:x="1243" fg:w="5"/><text x="96.7562%" y="895.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (5 samples, 0.39%)</title><rect x="96.5062%" y="869" width="0.3882%" height="15" fill="rgb(236,147,54)" fg:x="1243" fg:w="5"/><text x="96.7562%" y="879.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (5 samples, 0.39%)</title><rect x="96.5062%" y="853" width="0.3882%" height="15" fill="rgb(205,143,26)" fg:x="1243" fg:w="5"/><text x="96.7562%" y="863.50"></text></g><g><title>wgpu_core::instance::Instance::new (5 samples, 0.39%)</title><rect x="96.5062%" y="837" width="0.3882%" height="15" fill="rgb(236,26,9)" fg:x="1243" fg:w="5"/><text x="96.7562%" y="847.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (5 samples, 0.39%)</title><rect x="96.5062%" y="821" width="0.3882%" height="15" fill="rgb(221,165,53)" fg:x="1243" fg:w="5"/><text x="96.7562%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (2 samples, 0.16%)</title><rect x="96.7391%" y="805" width="0.1553%" height="15" fill="rgb(214,110,17)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (2 samples, 0.16%)</title><rect x="96.7391%" y="789" width="0.1553%" height="15" fill="rgb(237,197,12)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="799.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (2 samples, 0.16%)</title><rect x="96.7391%" y="773" width="0.1553%" height="15" fill="rgb(205,84,17)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="783.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (2 samples, 0.16%)</title><rect x="96.7391%" y="757" width="0.1553%" height="15" fill="rgb(237,18,45)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="767.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (2 samples, 0.16%)</title><rect x="96.7391%" y="741" width="0.1553%" height="15" fill="rgb(221,87,14)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="751.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (2 samples, 0.16%)</title><rect x="96.7391%" y="725" width="0.1553%" height="15" fill="rgb(238,186,15)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="735.50"></text></g><g><title>[libvulkan.so.1.3.245] (2 samples, 0.16%)</title><rect x="96.7391%" y="709" width="0.1553%" height="15" fill="rgb(208,115,11)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="719.50"></text></g><g><title>[libvulkan.so.1.3.245] (2 samples, 0.16%)</title><rect x="96.7391%" y="693" width="0.1553%" height="15" fill="rgb(254,175,0)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="703.50"></text></g><g><title>[libvulkan.so.1.3.245] (2 samples, 0.16%)</title><rect x="96.7391%" y="677" width="0.1553%" height="15" fill="rgb(227,24,42)" fg:x="1246" fg:w="2"/><text x="96.9891%" y="687.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (1 samples, 0.08%)</title><rect x="96.8168%" y="661" width="0.0776%" height="15" fill="rgb(223,211,37)" fg:x="1247" fg:w="1"/><text x="97.0668%" y="671.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.8168%" y="645" width="0.0776%" height="15" fill="rgb(235,49,27)" fg:x="1247" fg:w="1"/><text x="97.0668%" y="655.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.8168%" y="629" width="0.0776%" height="15" fill="rgb(254,97,51)" fg:x="1247" fg:w="1"/><text x="97.0668%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.8168%" y="613" width="0.0776%" height="15" fill="rgb(249,51,40)" fg:x="1247" fg:w="1"/><text x="97.0668%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="96.8168%" y="597" width="0.0776%" height="15" fill="rgb(210,128,45)" fg:x="1247" fg:w="1"/><text x="97.0668%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.8168%" y="581" width="0.0776%" height="15" fill="rgb(224,137,50)" fg:x="1247" fg:w="1"/><text x="97.0668%" y="591.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (6 samples, 0.47%)</title><rect x="96.9720%" y="837" width="0.4658%" height="15" fill="rgb(242,15,9)" fg:x="1249" fg:w="6"/><text x="97.2220%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="96.9720%" y="821" width="0.4658%" height="15" fill="rgb(233,187,41)" fg:x="1249" fg:w="6"/><text x="97.2220%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (6 samples, 0.47%)</title><rect x="96.9720%" y="805" width="0.4658%" height="15" fill="rgb(227,2,29)" fg:x="1249" fg:w="6"/><text x="97.2220%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.0497%" y="789" width="0.3882%" height="15" fill="rgb(222,70,3)" fg:x="1250" fg:w="5"/><text x="97.2997%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="97.1273%" y="773" width="0.3106%" height="15" fill="rgb(213,11,42)" fg:x="1251" fg:w="4"/><text x="97.3773%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.3602%" y="757" width="0.0776%" height="15" fill="rgb(225,150,9)" fg:x="1254" fg:w="1"/><text x="97.6102%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (8 samples, 0.62%)</title><rect x="96.8944%" y="885" width="0.6211%" height="15" fill="rgb(230,162,45)" fg:x="1248" fg:w="8"/><text x="97.1444%" y="895.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (8 samples, 0.62%)</title><rect x="96.8944%" y="869" width="0.6211%" height="15" fill="rgb(222,14,52)" fg:x="1248" fg:w="8"/><text x="97.1444%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (8 samples, 0.62%)</title><rect x="96.8944%" y="853" width="0.6211%" height="15" fill="rgb(254,198,14)" fg:x="1248" fg:w="8"/><text x="97.1444%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_framebuffer (1 samples, 0.08%)</title><rect x="97.4379%" y="837" width="0.0776%" height="15" fill="rgb(220,217,30)" fg:x="1255" fg:w="1"/><text x="97.6879%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="97.4379%" y="821" width="0.0776%" height="15" fill="rgb(215,146,41)" fg:x="1255" fg:w="1"/><text x="97.6879%" y="831.50"></text></g><g><title>wgpu_core::device::RenderPassContext::check_compatible (1 samples, 0.08%)</title><rect x="97.5155%" y="885" width="0.0776%" height="15" fill="rgb(217,27,36)" fg:x="1256" fg:w="1"/><text x="97.7655%" y="895.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.08%)</title><rect x="97.5932%" y="885" width="0.0776%" height="15" fill="rgb(219,218,39)" fg:x="1257" fg:w="1"/><text x="97.8432%" y="895.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device_from_hal (1 samples, 0.08%)</title><rect x="97.6708%" y="869" width="0.0776%" height="15" fill="rgb(219,4,42)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="879.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::new (1 samples, 0.08%)</title><rect x="97.6708%" y="853" width="0.0776%" height="15" fill="rgb(249,119,36)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="863.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (1 samples, 0.08%)</title><rect x="97.6708%" y="837" width="0.0776%" height="15" fill="rgb(209,23,33)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="847.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.08%)</title><rect x="97.6708%" y="821" width="0.0776%" height="15" fill="rgb(211,10,0)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="831.50"></text></g><g><title>ash::device::Device::begin_command_buffer (1 samples, 0.08%)</title><rect x="97.6708%" y="805" width="0.0776%" height="15" fill="rgb(208,99,37)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="789" width="0.0776%" height="15" fill="rgb(213,132,31)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="773" width="0.0776%" height="15" fill="rgb(243,129,40)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="757" width="0.0776%" height="15" fill="rgb(210,66,33)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="741" width="0.0776%" height="15" fill="rgb(209,189,4)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="725" width="0.0776%" height="15" fill="rgb(214,107,37)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="709" width="0.0776%" height="15" fill="rgb(245,88,54)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="693" width="0.0776%" height="15" fill="rgb(205,146,20)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="677" width="0.0776%" height="15" fill="rgb(220,161,25)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="661" width="0.0776%" height="15" fill="rgb(215,152,15)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="645" width="0.0776%" height="15" fill="rgb(233,192,44)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.6708%" y="629" width="0.0776%" height="15" fill="rgb(240,170,46)" fg:x="1258" fg:w="1"/><text x="97.9208%" y="639.50"></text></g><g><title>ash::device::Device::load (1 samples, 0.08%)</title><rect x="97.7484%" y="837" width="0.0776%" height="15" fill="rgb(207,104,33)" fg:x="1259" fg:w="1"/><text x="97.9984%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::load (1 samples, 0.08%)</title><rect x="97.7484%" y="821" width="0.0776%" height="15" fill="rgb(219,21,39)" fg:x="1259" fg:w="1"/><text x="97.9984%" y="831.50"></text></g><g><title>ash::device::Device::load::{{closure}} (1 samples, 0.08%)</title><rect x="97.7484%" y="805" width="0.0776%" height="15" fill="rgb(214,133,29)" fg:x="1259" fg:w="1"/><text x="97.9984%" y="815.50"></text></g><g><title>vkGetDeviceProcAddr (1 samples, 0.08%)</title><rect x="97.7484%" y="789" width="0.0776%" height="15" fill="rgb(226,93,6)" fg:x="1259" fg:w="1"/><text x="97.9984%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="97.7484%" y="773" width="0.0776%" height="15" fill="rgb(252,222,34)" fg:x="1259" fg:w="1"/><text x="97.9984%" y="783.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.8261%" y="805" width="0.0776%" height="15" fill="rgb(252,92,48)" fg:x="1260" fg:w="1"/><text x="98.0761%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.8261%" y="789" width="0.0776%" height="15" fill="rgb(245,223,24)" fg:x="1260" fg:w="1"/><text x="98.0761%" y="799.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.8261%" y="773" width="0.0776%" height="15" fill="rgb(205,176,3)" fg:x="1260" fg:w="1"/><text x="98.0761%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.8261%" y="757" width="0.0776%" height="15" fill="rgb(235,151,15)" fg:x="1260" fg:w="1"/><text x="98.0761%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.8261%" y="741" width="0.0776%" height="15" fill="rgb(237,209,11)" fg:x="1260" fg:w="1"/><text x="98.0761%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="97.8261%" y="725" width="0.0776%" height="15" fill="rgb(243,227,24)" fg:x="1260" fg:w="1"/><text x="98.0761%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="97.9037%" y="613" width="0.0776%" height="15" fill="rgb(239,193,16)" fg:x="1261" fg:w="1"/><text x="98.1537%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.1366%" y="581" width="0.0776%" height="15" fill="rgb(231,27,9)" fg:x="1264" fg:w="1"/><text x="98.3866%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.1366%" y="565" width="0.0776%" height="15" fill="rgb(219,169,10)" fg:x="1264" fg:w="1"/><text x="98.3866%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="773" width="0.3882%" height="15" fill="rgb(244,229,43)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="757" width="0.3882%" height="15" fill="rgb(254,38,20)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="741" width="0.3882%" height="15" fill="rgb(250,47,30)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="725" width="0.3882%" height="15" fill="rgb(224,124,36)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="709" width="0.3882%" height="15" fill="rgb(246,68,51)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="693" width="0.3882%" height="15" fill="rgb(253,43,49)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="677" width="0.3882%" height="15" fill="rgb(219,54,36)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="661" width="0.3882%" height="15" fill="rgb(227,133,34)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="645" width="0.3882%" height="15" fill="rgb(247,227,15)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (5 samples, 0.39%)</title><rect x="97.9037%" y="629" width="0.3882%" height="15" fill="rgb(229,96,14)" fg:x="1261" fg:w="5"/><text x="98.1537%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="97.9814%" y="613" width="0.3106%" height="15" fill="rgb(220,79,17)" fg:x="1262" fg:w="4"/><text x="98.2314%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (4 samples, 0.31%)</title><rect x="97.9814%" y="597" width="0.3106%" height="15" fill="rgb(205,131,53)" fg:x="1262" fg:w="4"/><text x="98.2314%" y="607.50"></text></g><g><title>__libc_calloc (1 samples, 0.08%)</title><rect x="98.2143%" y="581" width="0.0776%" height="15" fill="rgb(209,50,29)" fg:x="1265" fg:w="1"/><text x="98.4643%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="98.2143%" y="565" width="0.0776%" height="15" fill="rgb(245,86,46)" fg:x="1265" fg:w="1"/><text x="98.4643%" y="575.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (9 samples, 0.70%)</title><rect x="97.6708%" y="885" width="0.6988%" height="15" fill="rgb(235,66,46)" fg:x="1258" fg:w="9"/><text x="97.9208%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (8 samples, 0.62%)</title><rect x="97.7484%" y="869" width="0.6211%" height="15" fill="rgb(232,148,31)" fg:x="1259" fg:w="8"/><text x="97.9984%" y="879.50"></text></g><g><title>ash::instance::Instance::create_device (8 samples, 0.62%)</title><rect x="97.7484%" y="853" width="0.6211%" height="15" fill="rgb(217,149,8)" fg:x="1259" fg:w="8"/><text x="97.9984%" y="863.50"></text></g><g><title>vkCreateDevice (7 samples, 0.54%)</title><rect x="97.8261%" y="837" width="0.5435%" height="15" fill="rgb(209,183,11)" fg:x="1260" fg:w="7"/><text x="98.0761%" y="847.50"></text></g><g><title>[libvulkan.so.1.3.245] (7 samples, 0.54%)</title><rect x="97.8261%" y="821" width="0.5435%" height="15" fill="rgb(208,55,20)" fg:x="1260" fg:w="7"/><text x="98.0761%" y="831.50"></text></g><g><title>[libvulkan.so.1.3.245] (6 samples, 0.47%)</title><rect x="97.9037%" y="805" width="0.4658%" height="15" fill="rgb(218,39,14)" fg:x="1261" fg:w="6"/><text x="98.1537%" y="815.50"></text></g><g><title>[libvulkan.so.1.3.245] (6 samples, 0.47%)</title><rect x="97.9037%" y="789" width="0.4658%" height="15" fill="rgb(216,169,33)" fg:x="1261" fg:w="6"/><text x="98.1537%" y="799.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="98.2919%" y="773" width="0.0776%" height="15" fill="rgb(233,80,24)" fg:x="1266" fg:w="1"/><text x="98.5419%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="98.2919%" y="757" width="0.0776%" height="15" fill="rgb(213,179,31)" fg:x="1266" fg:w="1"/><text x="98.5419%" y="767.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::remove (1 samples, 0.08%)</title><rect x="98.3696%" y="885" width="0.0776%" height="15" fill="rgb(209,19,5)" fg:x="1267" fg:w="1"/><text x="98.6196%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (1 samples, 0.08%)</title><rect x="98.3696%" y="869" width="0.0776%" height="15" fill="rgb(219,18,35)" fg:x="1267" fg:w="1"/><text x="98.6196%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.08%)</title><rect x="98.3696%" y="853" width="0.0776%" height="15" fill="rgb(209,169,16)" fg:x="1267" fg:w="1"/><text x="98.6196%" y="863.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::insert_single (1 samples, 0.08%)</title><rect x="98.4472%" y="885" width="0.0776%" height="15" fill="rgb(245,90,51)" fg:x="1268" fg:w="1"/><text x="98.6972%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (1 samples, 0.08%)</title><rect x="98.5248%" y="885" width="0.0776%" height="15" fill="rgb(220,99,45)" fg:x="1269" fg:w="1"/><text x="98.7748%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_framebuffer (1 samples, 0.08%)</title><rect x="98.5248%" y="869" width="0.0776%" height="15" fill="rgb(249,89,25)" fg:x="1269" fg:w="1"/><text x="98.7748%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (1 samples, 0.08%)</title><rect x="98.6025%" y="885" width="0.0776%" height="15" fill="rgb(239,193,0)" fg:x="1270" fg:w="1"/><text x="98.8525%" y="895.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (1 samples, 0.08%)</title><rect x="98.6801%" y="869" width="0.0776%" height="15" fill="rgb(231,126,1)" fg:x="1271" fg:w="1"/><text x="98.9301%" y="879.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (1 samples, 0.08%)</title><rect x="98.6801%" y="853" width="0.0776%" height="15" fill="rgb(243,166,3)" fg:x="1271" fg:w="1"/><text x="98.9301%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::destroy_descriptor_pool (1 samples, 0.08%)</title><rect x="98.6801%" y="837" width="0.0776%" height="15" fill="rgb(223,22,34)" fg:x="1271" fg:w="1"/><text x="98.9301%" y="847.50"></text></g><g><title>ash::device::Device::destroy_descriptor_pool (1 samples, 0.08%)</title><rect x="98.6801%" y="821" width="0.0776%" height="15" fill="rgb(251,52,51)" fg:x="1271" fg:w="1"/><text x="98.9301%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.6801%" y="805" width="0.0776%" height="15" fill="rgb(221,165,28)" fg:x="1271" fg:w="1"/><text x="98.9301%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.6801%" y="789" width="0.0776%" height="15" fill="rgb(218,121,47)" fg:x="1271" fg:w="1"/><text x="98.9301%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.6801%" y="773" width="0.0776%" height="15" fill="rgb(209,120,9)" fg:x="1271" fg:w="1"/><text x="98.9301%" y="783.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::exit (2 samples, 0.16%)</title><rect x="98.6801%" y="885" width="0.1553%" height="15" fill="rgb(236,68,12)" fg:x="1271" fg:w="2"/><text x="98.9301%" y="895.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::free_resources (1 samples, 0.08%)</title><rect x="98.7578%" y="869" width="0.0776%" height="15" fill="rgb(225,194,26)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="879.50"></text></g><g><title>ash::device::Device::destroy_device (1 samples, 0.08%)</title><rect x="98.7578%" y="853" width="0.0776%" height="15" fill="rgb(231,84,39)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="863.50"></text></g><g><title>vkDestroyDevice (1 samples, 0.08%)</title><rect x="98.7578%" y="837" width="0.0776%" height="15" fill="rgb(210,11,45)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="847.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.7578%" y="821" width="0.0776%" height="15" fill="rgb(224,54,52)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.7578%" y="805" width="0.0776%" height="15" fill="rgb(238,102,14)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.7578%" y="789" width="0.0776%" height="15" fill="rgb(243,160,52)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.7578%" y="773" width="0.0776%" height="15" fill="rgb(216,114,19)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.7578%" y="757" width="0.0776%" height="15" fill="rgb(244,166,37)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="767.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="98.7578%" y="741" width="0.0776%" height="15" fill="rgb(246,29,44)" fg:x="1272" fg:w="1"/><text x="99.0078%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (1 samples, 0.08%)</title><rect x="98.8354%" y="885" width="0.0776%" height="15" fill="rgb(215,56,53)" fg:x="1273" fg:w="1"/><text x="99.0854%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.08%)</title><rect x="98.8354%" y="869" width="0.0776%" height="15" fill="rgb(217,60,2)" fg:x="1273" fg:w="1"/><text x="99.0854%" y="879.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1 samples, 0.08%)</title><rect x="98.9130%" y="885" width="0.0776%" height="15" fill="rgb(207,26,24)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="895.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1 samples, 0.08%)</title><rect x="98.9130%" y="869" width="0.0776%" height="15" fill="rgb(252,210,15)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="879.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1 samples, 0.08%)</title><rect x="98.9130%" y="853" width="0.0776%" height="15" fill="rgb(253,209,26)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="863.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1 samples, 0.08%)</title><rect x="98.9130%" y="837" width="0.0776%" height="15" fill="rgb(238,170,14)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (1 samples, 0.08%)</title><rect x="98.9130%" y="821" width="0.0776%" height="15" fill="rgb(216,178,15)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="831.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1 samples, 0.08%)</title><rect x="98.9130%" y="805" width="0.0776%" height="15" fill="rgb(250,197,2)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="815.50"></text></g><g><title>framer::window::Window::launch::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="98.9130%" y="789" width="0.0776%" height="15" fill="rgb(212,70,42)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="799.50"></text></g><g><title>framer::renderer::State::render (1 samples, 0.08%)</title><rect x="98.9130%" y="773" width="0.0776%" height="15" fill="rgb(227,213,9)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="783.50"></text></g><g><title>wgpu::SurfaceTexture::present (1 samples, 0.08%)</title><rect x="98.9130%" y="757" width="0.0776%" height="15" fill="rgb(245,99,25)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="767.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (1 samples, 0.08%)</title><rect x="98.9130%" y="741" width="0.0776%" height="15" fill="rgb(250,82,29)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (1 samples, 0.08%)</title><rect x="98.9130%" y="725" width="0.0776%" height="15" fill="rgb(241,226,54)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="735.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (1 samples, 0.08%)</title><rect x="98.9130%" y="709" width="0.0776%" height="15" fill="rgb(221,99,41)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="719.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (1 samples, 0.08%)</title><rect x="98.9130%" y="693" width="0.0776%" height="15" fill="rgb(213,90,21)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="703.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1 samples, 0.08%)</title><rect x="98.9130%" y="677" width="0.0776%" height="15" fill="rgb(205,208,24)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="687.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="661" width="0.0776%" height="15" fill="rgb(246,31,12)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="645" width="0.0776%" height="15" fill="rgb(213,154,6)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="629" width="0.0776%" height="15" fill="rgb(222,163,29)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="613" width="0.0776%" height="15" fill="rgb(227,201,8)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="597" width="0.0776%" height="15" fill="rgb(233,9,32)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="581" width="0.0776%" height="15" fill="rgb(217,54,24)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="565" width="0.0776%" height="15" fill="rgb(235,192,0)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="549" width="0.0776%" height="15" fill="rgb(235,45,9)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="533" width="0.0776%" height="15" fill="rgb(246,42,40)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="517" width="0.0776%" height="15" fill="rgb(248,111,24)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="501" width="0.0776%" height="15" fill="rgb(249,65,22)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="485" width="0.0776%" height="15" fill="rgb(238,111,51)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.41.03] (1 samples, 0.08%)</title><rect x="98.9130%" y="469" width="0.0776%" height="15" fill="rgb(250,118,22)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="479.50"></text></g><g><title>_XReply (1 samples, 0.08%)</title><rect x="98.9130%" y="453" width="0.0776%" height="15" fill="rgb(234,84,26)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="463.50"></text></g><g><title>xcb_wait_for_reply64 (1 samples, 0.08%)</title><rect x="98.9130%" y="437" width="0.0776%" height="15" fill="rgb(243,172,12)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="98.9130%" y="421" width="0.0776%" height="15" fill="rgb(236,150,49)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="98.9130%" y="405" width="0.0776%" height="15" fill="rgb(225,197,26)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.08%)</title><rect x="98.9130%" y="389" width="0.0776%" height="15" fill="rgb(214,17,42)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="399.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="98.9130%" y="373" width="0.0776%" height="15" fill="rgb(224,165,40)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="98.9130%" y="357" width="0.0776%" height="15" fill="rgb(246,100,4)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="98.9130%" y="341" width="0.0776%" height="15" fill="rgb(222,103,0)" fg:x="1274" fg:w="1"/><text x="99.1630%" y="351.50"></text></g><g><title>x11_dl::xcursor::Xcursor::open (1 samples, 0.08%)</title><rect x="98.9907%" y="869" width="0.0776%" height="15" fill="rgb(227,189,26)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.08%)</title><rect x="98.9907%" y="853" width="0.0776%" height="15" fill="rgb(214,202,17)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="863.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.08%)</title><rect x="98.9907%" y="837" width="0.0776%" height="15" fill="rgb(229,111,3)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="847.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.08%)</title><rect x="98.9907%" y="821" width="0.0776%" height="15" fill="rgb(229,172,15)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="98.9907%" y="805" width="0.0776%" height="15" fill="rgb(230,224,35)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="815.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.08%)</title><rect x="98.9907%" y="789" width="0.0776%" height="15" fill="rgb(251,141,6)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="799.50"></text></g><g><title>x11_dl::xcursor::Xcursor::open::{{closure}} (1 samples, 0.08%)</title><rect x="98.9907%" y="773" width="0.0776%" height="15" fill="rgb(225,208,6)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="783.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.08%)</title><rect x="98.9907%" y="757" width="0.0776%" height="15" fill="rgb(246,181,16)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="767.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.08%)</title><rect x="98.9907%" y="741" width="0.0776%" height="15" fill="rgb(227,129,36)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="751.50"></text></g><g><title>dlopen (1 samples, 0.08%)</title><rect x="98.9907%" y="725" width="0.0776%" height="15" fill="rgb(248,117,24)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="98.9907%" y="709" width="0.0776%" height="15" fill="rgb(214,185,35)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="98.9907%" y="693" width="0.0776%" height="15" fill="rgb(236,150,34)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="703.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="98.9907%" y="677" width="0.0776%" height="15" fill="rgb(243,228,27)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="98.9907%" y="661" width="0.0776%" height="15" fill="rgb(245,77,44)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="98.9907%" y="645" width="0.0776%" height="15" fill="rgb(235,214,42)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="655.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="98.9907%" y="629" width="0.0776%" height="15" fill="rgb(221,74,3)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="98.9907%" y="613" width="0.0776%" height="15" fill="rgb(206,121,29)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="623.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="98.9907%" y="597" width="0.0776%" height="15" fill="rgb(249,131,53)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="98.9907%" y="581" width="0.0776%" height="15" fill="rgb(236,170,29)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="98.9907%" y="565" width="0.0776%" height="15" fill="rgb(247,96,15)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="575.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="98.9907%" y="549" width="0.0776%" height="15" fill="rgb(211,210,7)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="98.9907%" y="533" width="0.0776%" height="15" fill="rgb(240,88,50)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="98.9907%" y="517" width="0.0776%" height="15" fill="rgb(209,229,26)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="98.9907%" y="501" width="0.0776%" height="15" fill="rgb(210,68,23)" fg:x="1275" fg:w="1"/><text x="99.2407%" y="511.50"></text></g><g><title>[unknown] (891 samples, 69.18%)</title><rect x="29.9689%" y="901" width="69.1770%" height="15" fill="rgb(229,180,13)" fg:x="386" fg:w="891"/><text x="30.2189%" y="911.50">[unknown]</text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::new (2 samples, 0.16%)</title><rect x="98.9907%" y="885" width="0.1553%" height="15" fill="rgb(236,53,44)" fg:x="1275" fg:w="2"/><text x="99.2407%" y="895.50"></text></g><g><title>x11_dl::xlib::Xlib::open (1 samples, 0.08%)</title><rect x="99.0683%" y="869" width="0.0776%" height="15" fill="rgb(244,214,29)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.08%)</title><rect x="99.0683%" y="853" width="0.0776%" height="15" fill="rgb(220,75,29)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="863.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.08%)</title><rect x="99.0683%" y="837" width="0.0776%" height="15" fill="rgb(214,183,37)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="847.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.08%)</title><rect x="99.0683%" y="821" width="0.0776%" height="15" fill="rgb(239,117,29)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="99.0683%" y="805" width="0.0776%" height="15" fill="rgb(237,171,35)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="815.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.08%)</title><rect x="99.0683%" y="789" width="0.0776%" height="15" fill="rgb(229,178,53)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="799.50"></text></g><g><title>x11_dl::xlib::Xlib::open::{{closure}} (1 samples, 0.08%)</title><rect x="99.0683%" y="773" width="0.0776%" height="15" fill="rgb(210,102,19)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="783.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.08%)</title><rect x="99.0683%" y="757" width="0.0776%" height="15" fill="rgb(235,127,22)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="767.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.08%)</title><rect x="99.0683%" y="741" width="0.0776%" height="15" fill="rgb(244,31,31)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="751.50"></text></g><g><title>dlopen (1 samples, 0.08%)</title><rect x="99.0683%" y="725" width="0.0776%" height="15" fill="rgb(231,43,21)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="99.0683%" y="709" width="0.0776%" height="15" fill="rgb(217,131,35)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="99.0683%" y="693" width="0.0776%" height="15" fill="rgb(221,149,4)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="703.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="99.0683%" y="677" width="0.0776%" height="15" fill="rgb(232,170,28)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="99.0683%" y="661" width="0.0776%" height="15" fill="rgb(238,56,10)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="99.0683%" y="645" width="0.0776%" height="15" fill="rgb(235,196,14)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="655.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="99.0683%" y="629" width="0.0776%" height="15" fill="rgb(216,45,48)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="99.0683%" y="613" width="0.0776%" height="15" fill="rgb(238,213,17)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="623.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="99.0683%" y="597" width="0.0776%" height="15" fill="rgb(212,13,2)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="99.0683%" y="581" width="0.0776%" height="15" fill="rgb(240,114,20)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="99.0683%" y="565" width="0.0776%" height="15" fill="rgb(228,41,40)" fg:x="1276" fg:w="1"/><text x="99.3183%" y="575.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="99.1460%" y="885" width="0.0776%" height="15" fill="rgb(244,132,35)" fg:x="1277" fg:w="1"/><text x="99.3960%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.530.41.03] (1 samples, 0.08%)</title><rect x="99.2236%" y="885" width="0.0776%" height="15" fill="rgb(253,189,4)" fg:x="1278" fg:w="1"/><text x="99.4736%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="99.3012%" y="885" width="0.0776%" height="15" fill="rgb(224,37,19)" fg:x="1279" fg:w="1"/><text x="99.5512%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt; (1 samples, 0.08%)</title><rect x="99.3012%" y="869" width="0.0776%" height="15" fill="rgb(235,223,18)" fg:x="1279" fg:w="1"/><text x="99.5512%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;wgpu::backend::direct::ErrorSinkRaw&gt;&gt; (1 samples, 0.08%)</title><rect x="99.3012%" y="853" width="0.0776%" height="15" fill="rgb(235,163,25)" fg:x="1279" fg:w="1"/><text x="99.5512%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::ErrorSinkRaw&gt; (1 samples, 0.08%)</title><rect x="99.3012%" y="837" width="0.0776%" height="15" fill="rgb(217,145,28)" fg:x="1279" fg:w="1"/><text x="99.5512%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn wgpu::UncapturedErrorHandler+Output = ()&gt;&gt; (1 samples, 0.08%)</title><rect x="99.3012%" y="821" width="0.0776%" height="15" fill="rgb(223,223,32)" fg:x="1279" fg:w="1"/><text x="99.5512%" y="831.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (1 samples, 0.08%)</title><rect x="99.3789%" y="885" width="0.0776%" height="15" fill="rgb(227,189,39)" fg:x="1280" fg:w="1"/><text x="99.6289%" y="895.50"></text></g><g><title>[window] (5 samples, 0.39%)</title><rect x="99.1460%" y="901" width="0.3882%" height="15" fill="rgb(248,10,22)" fg:x="1277" fg:w="5"/><text x="99.3960%" y="911.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (1 samples, 0.08%)</title><rect x="99.4565%" y="885" width="0.0776%" height="15" fill="rgb(248,46,39)" fg:x="1281" fg:w="1"/><text x="99.7065%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.08%)</title><rect x="99.5342%" y="245" width="0.0776%" height="15" fill="rgb(248,113,48)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="255.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="99.5342%" y="229" width="0.0776%" height="15" fill="rgb(245,16,25)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5342%" y="213" width="0.0776%" height="15" fill="rgb(249,152,16)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5342%" y="197" width="0.0776%" height="15" fill="rgb(250,16,1)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.5342%" y="181" width="0.0776%" height="15" fill="rgb(249,138,3)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.5342%" y="165" width="0.0776%" height="15" fill="rgb(227,71,41)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.5342%" y="149" width="0.0776%" height="15" fill="rgb(209,184,23)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.5342%" y="133" width="0.0776%" height="15" fill="rgb(223,215,31)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.5342%" y="117" width="0.0776%" height="15" fill="rgb(210,146,28)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.5342%" y="101" width="0.0776%" height="15" fill="rgb(209,183,41)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.5342%" y="85" width="0.0776%" height="15" fill="rgb(209,224,45)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.5342%" y="69" width="0.0776%" height="15" fill="rgb(224,209,51)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.5342%" y="53" width="0.0776%" height="15" fill="rgb(223,17,39)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="63.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="99.5342%" y="37" width="0.0776%" height="15" fill="rgb(234,204,37)" fg:x="1282" fg:w="1"/><text x="99.7842%" y="47.50"></text></g><g><title>all (1,288 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(236,120,5)" fg:x="0" fg:w="1288"/><text x="0.2500%" y="943.50"></text></g><g><title>window (1,223 samples, 94.95%)</title><rect x="5.0466%" y="917" width="94.9534%" height="15" fill="rgb(248,97,27)" fg:x="65" fg:w="1223"/><text x="5.2966%" y="927.50">window</text></g><g><title>_start (6 samples, 0.47%)</title><rect x="99.5342%" y="901" width="0.4658%" height="15" fill="rgb(240,66,17)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="911.50"></text></g><g><title>__libc_start_main (6 samples, 0.47%)</title><rect x="99.5342%" y="885" width="0.4658%" height="15" fill="rgb(210,79,3)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="895.50"></text></g><g><title>[libc.so.6] (6 samples, 0.47%)</title><rect x="99.5342%" y="869" width="0.4658%" height="15" fill="rgb(214,176,27)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="879.50"></text></g><g><title>main (6 samples, 0.47%)</title><rect x="99.5342%" y="853" width="0.4658%" height="15" fill="rgb(235,185,3)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.47%)</title><rect x="99.5342%" y="837" width="0.4658%" height="15" fill="rgb(227,24,12)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="847.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.47%)</title><rect x="99.5342%" y="821" width="0.4658%" height="15" fill="rgb(252,169,48)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="831.50"></text></g><g><title>std::panicking::try (6 samples, 0.47%)</title><rect x="99.5342%" y="805" width="0.4658%" height="15" fill="rgb(212,65,1)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="815.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.47%)</title><rect x="99.5342%" y="789" width="0.4658%" height="15" fill="rgb(242,39,24)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="773" width="0.4658%" height="15" fill="rgb(249,32,23)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="783.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.47%)</title><rect x="99.5342%" y="757" width="0.4658%" height="15" fill="rgb(251,195,23)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="767.50"></text></g><g><title>std::panicking::try (6 samples, 0.47%)</title><rect x="99.5342%" y="741" width="0.4658%" height="15" fill="rgb(236,174,8)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="751.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.47%)</title><rect x="99.5342%" y="725" width="0.4658%" height="15" fill="rgb(220,197,8)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.47%)</title><rect x="99.5342%" y="709" width="0.4658%" height="15" fill="rgb(240,108,37)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="693" width="0.4658%" height="15" fill="rgb(232,176,24)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.47%)</title><rect x="99.5342%" y="677" width="0.4658%" height="15" fill="rgb(243,35,29)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.47%)</title><rect x="99.5342%" y="661" width="0.4658%" height="15" fill="rgb(210,37,18)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="671.50"></text></g><g><title>window::main (6 samples, 0.47%)</title><rect x="99.5342%" y="645" width="0.4658%" height="15" fill="rgb(224,184,40)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="655.50"></text></g><g><title>async_std::task::block_on::block_on (6 samples, 0.47%)</title><rect x="99.5342%" y="629" width="0.4658%" height="15" fill="rgb(236,39,29)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="639.50"></text></g><g><title>async_std::task::builder::Builder::blocking (6 samples, 0.47%)</title><rect x="99.5342%" y="613" width="0.4658%" height="15" fill="rgb(232,48,39)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="623.50"></text></g><g><title>async_std::task::builder::Builder::build (6 samples, 0.47%)</title><rect x="99.5342%" y="597" width="0.4658%" height="15" fill="rgb(236,34,42)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="607.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (6 samples, 0.47%)</title><rect x="99.5342%" y="581" width="0.4658%" height="15" fill="rgb(243,106,37)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (6 samples, 0.47%)</title><rect x="99.5342%" y="565" width="0.4658%" height="15" fill="rgb(218,96,6)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="575.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (6 samples, 0.47%)</title><rect x="99.5342%" y="549" width="0.4658%" height="15" fill="rgb(235,130,12)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="559.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (6 samples, 0.47%)</title><rect x="99.5342%" y="533" width="0.4658%" height="15" fill="rgb(231,95,0)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="543.50"></text></g><g><title>once_cell::imp::initialize_or_wait (6 samples, 0.47%)</title><rect x="99.5342%" y="517" width="0.4658%" height="15" fill="rgb(228,12,23)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.47%)</title><rect x="99.5342%" y="501" width="0.4658%" height="15" fill="rgb(216,12,1)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="511.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="485" width="0.4658%" height="15" fill="rgb(219,59,3)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="495.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="469" width="0.4658%" height="15" fill="rgb(215,208,46)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="479.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="453" width="0.4658%" height="15" fill="rgb(254,224,29)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.47%)</title><rect x="99.5342%" y="437" width="0.4658%" height="15" fill="rgb(232,14,29)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.47%)</title><rect x="99.5342%" y="421" width="0.4658%" height="15" fill="rgb(208,45,52)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="431.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="405" width="0.4658%" height="15" fill="rgb(234,191,28)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="415.50"></text></g><g><title>async_global_executor::init::init_with_config (6 samples, 0.47%)</title><rect x="99.5342%" y="389" width="0.4658%" height="15" fill="rgb(244,67,43)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="399.50"></text></g><g><title>async_global_executor::init::init (6 samples, 0.47%)</title><rect x="99.5342%" y="373" width="0.4658%" height="15" fill="rgb(236,189,24)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="383.50"></text></g><g><title>async_global_executor::reactor::block_on (6 samples, 0.47%)</title><rect x="99.5342%" y="357" width="0.4658%" height="15" fill="rgb(239,214,33)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="367.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="341" width="0.4658%" height="15" fill="rgb(226,176,41)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="351.50"></text></g><g><title>async_io::driver::block_on (6 samples, 0.47%)</title><rect x="99.5342%" y="325" width="0.4658%" height="15" fill="rgb(248,47,8)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="335.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.47%)</title><rect x="99.5342%" y="309" width="0.4658%" height="15" fill="rgb(218,81,44)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="319.50"></text></g><g><title>async_global_executor::init::init::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="293" width="0.4658%" height="15" fill="rgb(213,98,6)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="303.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.47%)</title><rect x="99.5342%" y="277" width="0.4658%" height="15" fill="rgb(222,85,22)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="287.50"></text></g><g><title>async_global_executor::threading::spawn_more_threads::{{closure}} (6 samples, 0.47%)</title><rect x="99.5342%" y="261" width="0.4658%" height="15" fill="rgb(239,46,39)" fg:x="1282" fg:w="6"/><text x="99.7842%" y="271.50"></text></g><g><title>std::thread::Builder::spawn (5 samples, 0.39%)</title><rect x="99.6118%" y="245" width="0.3882%" height="15" fill="rgb(237,12,29)" fg:x="1283" fg:w="5"/><text x="99.8618%" y="255.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (5 samples, 0.39%)</title><rect x="99.6118%" y="229" width="0.3882%" height="15" fill="rgb(214,77,8)" fg:x="1283" fg:w="5"/><text x="99.8618%" y="239.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (5 samples, 0.39%)</title><rect x="99.6118%" y="213" width="0.3882%" height="15" fill="rgb(217,168,37)" fg:x="1283" fg:w="5"/><text x="99.8618%" y="223.50"></text></g><g><title>std::sys::unix::thread::Thread::new (5 samples, 0.39%)</title><rect x="99.6118%" y="197" width="0.3882%" height="15" fill="rgb(221,217,23)" fg:x="1283" fg:w="5"/><text x="99.8618%" y="207.50"></text></g><g><title>pthread_create (5 samples, 0.39%)</title><rect x="99.6118%" y="181" width="0.3882%" height="15" fill="rgb(243,229,36)" fg:x="1283" fg:w="5"/><text x="99.8618%" y="191.50"></text></g><g><title>__mprotect (5 samples, 0.39%)</title><rect x="99.6118%" y="165" width="0.3882%" height="15" fill="rgb(251,163,40)" fg:x="1283" fg:w="5"/><text x="99.8618%" y="175.50"></text></g></svg></svg>